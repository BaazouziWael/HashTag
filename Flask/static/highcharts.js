



<!DOCTYPE html>
<html lang="en" class="">
  <head prefix="og: http://ogp.me/ns# fb: http://ogp.me/ns/fb# object: http://ogp.me/ns/object# article: http://ogp.me/ns/article# profile: http://ogp.me/ns/profile#">
    <meta charset='utf-8'>
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta http-equiv="Content-Language" content="en">
    
    
    <title>PuppyPlaydate/highcharts.js at master · aouyang1/PuppyPlaydate · GitHub</title>
    <link rel="search" type="application/opensearchdescription+xml" href="/opensearch.xml" title="GitHub">
    <link rel="fluid-icon" href="https://github.com/fluidicon.png" title="GitHub">
    <link rel="apple-touch-icon" sizes="57x57" href="/apple-touch-icon-114.png">
    <link rel="apple-touch-icon" sizes="114x114" href="/apple-touch-icon-114.png">
    <link rel="apple-touch-icon" sizes="72x72" href="/apple-touch-icon-144.png">
    <link rel="apple-touch-icon" sizes="144x144" href="/apple-touch-icon-144.png">
    <meta property="fb:app_id" content="1401488693436528">

      <meta content="@github" name="twitter:site" /><meta content="summary" name="twitter:card" /><meta content="aouyang1/PuppyPlaydate" name="twitter:title" /><meta content="Contribute to PuppyPlaydate development by creating an account on GitHub." name="twitter:description" /><meta content="https://avatars2.githubusercontent.com/u/6226714?v=3&amp;s=400" name="twitter:image:src" />
<meta content="GitHub" property="og:site_name" /><meta content="object" property="og:type" /><meta content="https://avatars2.githubusercontent.com/u/6226714?v=3&amp;s=400" property="og:image" /><meta content="aouyang1/PuppyPlaydate" property="og:title" /><meta content="https://github.com/aouyang1/PuppyPlaydate" property="og:url" /><meta content="Contribute to PuppyPlaydate development by creating an account on GitHub." property="og:description" />

      <meta name="browser-stats-url" content="/_stats">
    <link rel="assets" href="https://assets-cdn.github.com/">
    <link rel="conduit-xhr" href="https://ghconduit.com:25035">
    
    <meta name="pjax-timeout" content="1000">
    

    <meta name="msapplication-TileImage" content="/windows-tile.png">
    <meta name="msapplication-TileColor" content="#ffffff">
    <meta name="selected-link" value="repo_source" data-pjax-transient>
      <meta name="google-analytics" content="UA-3769691-2">

    <meta content="collector.githubapp.com" name="octolytics-host" /><meta content="collector-cdn.github.com" name="octolytics-script-host" /><meta content="github" name="octolytics-app-id" /><meta content="415713AA:1D6C:DC25DA5:54C6A9E5" name="octolytics-dimension-request_id" />
    
    <meta content="Rails, view, blob#show" name="analytics-event" />

    
    
    <link rel="icon" type="image/x-icon" href="https://assets-cdn.github.com/favicon.ico">


    <meta content="authenticity_token" name="csrf-param" />
<meta content="hGmqmlZw2U4GhK8ow3C4y/TcosOW5tReem24XWGJkkgbTGyHrp6lFv13YF18tM3MKEiHd7JOCzrtzcGj7Rpo1g==" name="csrf-token" />

    <link href="https://assets-cdn.github.com/assets/github-3b24b9ac37e087c9b13ad8d84820250a93a4fd610eb6e7535e8b12d0cb87836d.css" media="all" rel="stylesheet" type="text/css" />
    <link href="https://assets-cdn.github.com/assets/github2-1203ee5b00e494008d0b0c430766b6d838a5f9eff614e5345fdb47a96476cc7d.css" media="all" rel="stylesheet" type="text/css" />
    
    


    <meta http-equiv="x-pjax-version" content="37f540b87fe66a7c05a3dd0ee9a3174b">

      
  <meta name="description" content="Contribute to PuppyPlaydate development by creating an account on GitHub.">
  <meta name="go-import" content="github.com/aouyang1/PuppyPlaydate git https://github.com/aouyang1/PuppyPlaydate.git">

  <meta content="6226714" name="octolytics-dimension-user_id" /><meta content="aouyang1" name="octolytics-dimension-user_login" /><meta content="29575226" name="octolytics-dimension-repository_id" /><meta content="aouyang1/PuppyPlaydate" name="octolytics-dimension-repository_nwo" /><meta content="true" name="octolytics-dimension-repository_public" /><meta content="false" name="octolytics-dimension-repository_is_fork" /><meta content="29575226" name="octolytics-dimension-repository_network_root_id" /><meta content="aouyang1/PuppyPlaydate" name="octolytics-dimension-repository_network_root_nwo" />
  <link href="https://github.com/aouyang1/PuppyPlaydate/commits/master.atom" rel="alternate" title="Recent Commits to PuppyPlaydate:master" type="application/atom+xml">

  </head>


  <body class="logged_out  env-production macintosh vis-public page-blob">
    <a href="#start-of-content" tabindex="1" class="accessibility-aid js-skip-to-content">Skip to content</a>
    <div class="wrapper">
      
      
      
      


      
      <div class="header header-logged-out" role="banner">
  <div class="container clearfix">

    <a class="header-logo-wordmark" href="https://github.com/" ga-data-click="(Logged out) Header, go to homepage, icon:logo-wordmark">
      <span class="mega-octicon octicon-logo-github"></span>
    </a>

    <div class="header-actions" role="navigation">
        <a class="button primary" href="/join" data-ga-click="(Logged out) Header, clicked Sign up, text:sign-up">Sign up</a>
      <a class="button" href="/login?return_to=%2Faouyang1%2FPuppyPlaydate%2Fblob%2Fmaster%2Fflask-app%2Fstatic%2Fhighcharts.js" data-ga-click="(Logged out) Header, clicked Sign in, text:sign-in">Sign in</a>
    </div>

    <div class="site-search repo-scope js-site-search" role="search">
      <form accept-charset="UTF-8" action="/aouyang1/PuppyPlaydate/search" class="js-site-search-form" data-global-search-url="/search" data-repo-search-url="/aouyang1/PuppyPlaydate/search" method="get"><div style="margin:0;padding:0;display:inline"><input name="utf8" type="hidden" value="&#x2713;" /></div>
  <input type="text"
    class="js-site-search-field is-clearable"
    data-hotkey="s"
    name="q"
    placeholder="Search"
    data-global-scope-placeholder="Search GitHub"
    data-repo-scope-placeholder="Search"
    tabindex="1"
    autocapitalize="off">
  <div class="scope-badge">This repository</div>
</form>
    </div>

      <ul class="header-nav left" role="navigation">
          <li class="header-nav-item">
            <a class="header-nav-link" href="/explore" data-ga-click="(Logged out) Header, go to explore, text:explore">Explore</a>
          </li>
          <li class="header-nav-item">
            <a class="header-nav-link" href="/features" data-ga-click="(Logged out) Header, go to features, text:features">Features</a>
          </li>
          <li class="header-nav-item">
            <a class="header-nav-link" href="https://enterprise.github.com/" data-ga-click="(Logged out) Header, go to enterprise, text:enterprise">Enterprise</a>
          </li>
          <li class="header-nav-item">
            <a class="header-nav-link" href="/blog" data-ga-click="(Logged out) Header, go to blog, text:blog">Blog</a>
          </li>
      </ul>

  </div>
</div>



      <div id="start-of-content" class="accessibility-aid"></div>
          <div class="site" itemscope itemtype="http://schema.org/WebPage">
    <div id="js-flash-container">
      
    </div>
    <div class="pagehead repohead instapaper_ignore readability-menu">
      <div class="container">
        
<ul class="pagehead-actions">


  <li>
      <a href="/login?return_to=%2Faouyang1%2FPuppyPlaydate"
    class="minibutton with-count star-button tooltipped tooltipped-n"
    aria-label="You must be signed in to star a repository" rel="nofollow">
    <span class="octicon octicon-star"></span>
    Star
  </a>

    <a class="social-count js-social-count" href="/aouyang1/PuppyPlaydate/stargazers">
      0
    </a>

  </li>

    <li>
      <a href="/login?return_to=%2Faouyang1%2FPuppyPlaydate"
        class="minibutton with-count js-toggler-target fork-button tooltipped tooltipped-n"
        aria-label="You must be signed in to fork a repository" rel="nofollow">
        <span class="octicon octicon-repo-forked"></span>
        Fork
      </a>
      <a href="/aouyang1/PuppyPlaydate/network" class="social-count">
        0
      </a>
    </li>
</ul>

        <h1 itemscope itemtype="http://data-vocabulary.org/Breadcrumb" class="entry-title public">
          <span class="mega-octicon octicon-repo"></span>
          <span class="author"><a href="/aouyang1" class="url fn" itemprop="url" rel="author"><span itemprop="title">aouyang1</span></a></span><!--
       --><span class="path-divider">/</span><!--
       --><strong><a href="/aouyang1/PuppyPlaydate" class="js-current-repository" data-pjax="#js-repo-pjax-container">PuppyPlaydate</a></strong>

          <span class="page-context-loader">
            <img alt="" height="16" src="https://assets-cdn.github.com/images/spinners/octocat-spinner-32.gif" width="16" />
          </span>

        </h1>
      </div><!-- /.container -->
    </div><!-- /.repohead -->

    <div class="container">
      <div class="repository-with-sidebar repo-container new-discussion-timeline  ">
        <div class="repository-sidebar clearfix">
            
<nav class="sunken-menu repo-nav js-repo-nav js-sidenav-container-pjax js-octicon-loaders"
     role="navigation"
     data-pjax="#js-repo-pjax-container"
     data-issue-count-url="/aouyang1/PuppyPlaydate/issues/counts">
  <ul class="sunken-menu-group">
    <li class="tooltipped tooltipped-w" aria-label="Code">
      <a href="/aouyang1/PuppyPlaydate" aria-label="Code" class="selected js-selected-navigation-item sunken-menu-item" data-hotkey="g c" data-selected-links="repo_source repo_downloads repo_commits repo_releases repo_tags repo_branches /aouyang1/PuppyPlaydate">
        <span class="octicon octicon-code"></span> <span class="full-word">Code</span>
        <img alt="" class="mini-loader" height="16" src="https://assets-cdn.github.com/images/spinners/octocat-spinner-32.gif" width="16" />
</a>    </li>

      <li class="tooltipped tooltipped-w" aria-label="Issues">
        <a href="/aouyang1/PuppyPlaydate/issues" aria-label="Issues" class="js-selected-navigation-item sunken-menu-item" data-hotkey="g i" data-selected-links="repo_issues repo_labels repo_milestones /aouyang1/PuppyPlaydate/issues">
          <span class="octicon octicon-issue-opened"></span> <span class="full-word">Issues</span>
          <span class="js-issue-replace-counter"></span>
          <img alt="" class="mini-loader" height="16" src="https://assets-cdn.github.com/images/spinners/octocat-spinner-32.gif" width="16" />
</a>      </li>

    <li class="tooltipped tooltipped-w" aria-label="Pull Requests">
      <a href="/aouyang1/PuppyPlaydate/pulls" aria-label="Pull Requests" class="js-selected-navigation-item sunken-menu-item" data-hotkey="g p" data-selected-links="repo_pulls /aouyang1/PuppyPlaydate/pulls">
          <span class="octicon octicon-git-pull-request"></span> <span class="full-word">Pull Requests</span>
          <span class="js-pull-replace-counter"></span>
          <img alt="" class="mini-loader" height="16" src="https://assets-cdn.github.com/images/spinners/octocat-spinner-32.gif" width="16" />
</a>    </li>


  </ul>
  <div class="sunken-menu-separator"></div>
  <ul class="sunken-menu-group">

    <li class="tooltipped tooltipped-w" aria-label="Pulse">
      <a href="/aouyang1/PuppyPlaydate/pulse" aria-label="Pulse" class="js-selected-navigation-item sunken-menu-item" data-selected-links="pulse /aouyang1/PuppyPlaydate/pulse">
        <span class="octicon octicon-pulse"></span> <span class="full-word">Pulse</span>
        <img alt="" class="mini-loader" height="16" src="https://assets-cdn.github.com/images/spinners/octocat-spinner-32.gif" width="16" />
</a>    </li>

    <li class="tooltipped tooltipped-w" aria-label="Graphs">
      <a href="/aouyang1/PuppyPlaydate/graphs" aria-label="Graphs" class="js-selected-navigation-item sunken-menu-item" data-selected-links="repo_graphs repo_contributors /aouyang1/PuppyPlaydate/graphs">
        <span class="octicon octicon-graph"></span> <span class="full-word">Graphs</span>
        <img alt="" class="mini-loader" height="16" src="https://assets-cdn.github.com/images/spinners/octocat-spinner-32.gif" width="16" />
</a>    </li>
  </ul>


</nav>

              <div class="only-with-full-nav">
                
  
<div class="clone-url open"
  data-protocol-type="http"
  data-url="/users/set_protocol?protocol_selector=http&amp;protocol_type=clone">
  <h3><span class="text-emphasized">HTTPS</span> clone URL</h3>
  <div class="input-group js-zeroclipboard-container">
    <input type="text" class="input-mini input-monospace js-url-field js-zeroclipboard-target"
           value="https://github.com/aouyang1/PuppyPlaydate.git" readonly="readonly">
    <span class="input-group-button">
      <button aria-label="Copy to clipboard" class="js-zeroclipboard minibutton zeroclipboard-button" data-copied-hint="Copied!" type="button"><span class="octicon octicon-clippy"></span></button>
    </span>
  </div>
</div>

  
<div class="clone-url "
  data-protocol-type="subversion"
  data-url="/users/set_protocol?protocol_selector=subversion&amp;protocol_type=clone">
  <h3><span class="text-emphasized">Subversion</span> checkout URL</h3>
  <div class="input-group js-zeroclipboard-container">
    <input type="text" class="input-mini input-monospace js-url-field js-zeroclipboard-target"
           value="https://github.com/aouyang1/PuppyPlaydate" readonly="readonly">
    <span class="input-group-button">
      <button aria-label="Copy to clipboard" class="js-zeroclipboard minibutton zeroclipboard-button" data-copied-hint="Copied!" type="button"><span class="octicon octicon-clippy"></span></button>
    </span>
  </div>
</div>



<p class="clone-options">You can clone with
  <a href="#" class="js-clone-selector" data-protocol="http">HTTPS</a> or <a href="#" class="js-clone-selector" data-protocol="subversion">Subversion</a>.
  <a href="https://help.github.com/articles/which-remote-url-should-i-use" class="help tooltipped tooltipped-n" aria-label="Get help on which URL is right for you.">
    <span class="octicon octicon-question"></span>
  </a>
</p>

  <a href="http://mac.github.com" data-url="github-mac://openRepo/https://github.com/aouyang1/PuppyPlaydate" class="minibutton sidebar-button js-conduit-rewrite-url" title="Save aouyang1/PuppyPlaydate to your computer and use it in GitHub Desktop." aria-label="Save aouyang1/PuppyPlaydate to your computer and use it in GitHub Desktop.">
    <span class="octicon octicon-device-desktop"></span>
    Clone in Desktop
  </a>


                <a href="/aouyang1/PuppyPlaydate/archive/master.zip"
                   class="minibutton sidebar-button"
                   aria-label="Download the contents of aouyang1/PuppyPlaydate as a zip file"
                   title="Download the contents of aouyang1/PuppyPlaydate as a zip file"
                   rel="nofollow">
                  <span class="octicon octicon-cloud-download"></span>
                  Download ZIP
                </a>
              </div>
        </div><!-- /.repository-sidebar -->

        <div id="js-repo-pjax-container" class="repository-content context-loader-container" data-pjax-container>
          

<a href="/aouyang1/PuppyPlaydate/blob/25e1ffc714c91bf39a70696c0619b0ff94b53af6/flask-app/static/highcharts.js" class="hidden js-permalink-shortcut" data-hotkey="y">Permalink</a>

<!-- blob contrib key: blob_contributors:v21:f6fb4d1d031880f7ec2cbe9077ab7b51 -->

<div class="file-navigation js-zeroclipboard-container">
  
<div class="select-menu js-menu-container js-select-menu left">
  <span class="minibutton select-menu-button js-menu-target css-truncate" data-hotkey="w"
    data-master-branch="master"
    data-ref="master"
    title="master"
    role="button" aria-label="Switch branches or tags" tabindex="0" aria-haspopup="true">
    <span class="octicon octicon-git-branch"></span>
    <i>branch:</i>
    <span class="js-select-button css-truncate-target">master</span>
  </span>

  <div class="select-menu-modal-holder js-menu-content js-navigation-container" data-pjax aria-hidden="true">

    <div class="select-menu-modal">
      <div class="select-menu-header">
        <span class="select-menu-title">Switch branches/tags</span>
        <span class="octicon octicon-x js-menu-close" role="button" aria-label="Close"></span>
      </div> <!-- /.select-menu-header -->

      <div class="select-menu-filters">
        <div class="select-menu-text-filter">
          <input type="text" aria-label="Filter branches/tags" id="context-commitish-filter-field" class="js-filterable-field js-navigation-enable" placeholder="Filter branches/tags">
        </div>
        <div class="select-menu-tabs">
          <ul>
            <li class="select-menu-tab">
              <a href="#" data-tab-filter="branches" class="js-select-menu-tab">Branches</a>
            </li>
            <li class="select-menu-tab">
              <a href="#" data-tab-filter="tags" class="js-select-menu-tab">Tags</a>
            </li>
          </ul>
        </div><!-- /.select-menu-tabs -->
      </div><!-- /.select-menu-filters -->

      <div class="select-menu-list select-menu-tab-bucket js-select-menu-tab-bucket" data-tab-filter="branches">

        <div data-filterable-for="context-commitish-filter-field" data-filterable-type="substring">


            <div class="select-menu-item js-navigation-item ">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="/aouyang1/PuppyPlaydate/blob/guangs_feedbacks/flask-app/static/highcharts.js"
                 data-name="guangs_feedbacks"
                 data-skip-pjax="true"
                 rel="nofollow"
                 class="js-navigation-open select-menu-item-text css-truncate-target"
                 title="guangs_feedbacks">guangs_feedbacks</a>
            </div> <!-- /.select-menu-item -->
            <div class="select-menu-item js-navigation-item selected">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="/aouyang1/PuppyPlaydate/blob/master/flask-app/static/highcharts.js"
                 data-name="master"
                 data-skip-pjax="true"
                 rel="nofollow"
                 class="js-navigation-open select-menu-item-text css-truncate-target"
                 title="master">master</a>
            </div> <!-- /.select-menu-item -->
        </div>

          <div class="select-menu-no-results">Nothing to show</div>
      </div> <!-- /.select-menu-list -->

      <div class="select-menu-list select-menu-tab-bucket js-select-menu-tab-bucket" data-tab-filter="tags">
        <div data-filterable-for="context-commitish-filter-field" data-filterable-type="substring">


        </div>

        <div class="select-menu-no-results">Nothing to show</div>
      </div> <!-- /.select-menu-list -->

    </div> <!-- /.select-menu-modal -->
  </div> <!-- /.select-menu-modal-holder -->
</div> <!-- /.select-menu -->

  <div class="button-group right">
    <a href="/aouyang1/PuppyPlaydate/find/master"
          class="js-show-file-finder minibutton empty-icon tooltipped tooltipped-s"
          data-pjax
          data-hotkey="t"
          aria-label="Quickly jump between files">
      <span class="octicon octicon-list-unordered"></span>
    </a>
    <button aria-label="Copy file path to clipboard" class="js-zeroclipboard minibutton zeroclipboard-button" data-copied-hint="Copied!" type="button"><span class="octicon octicon-clippy"></span></button>
  </div>

  <div class="breadcrumb js-zeroclipboard-target">
    <span class='repo-root js-repo-root'><span itemscope="" itemtype="http://data-vocabulary.org/Breadcrumb"><a href="/aouyang1/PuppyPlaydate" class="" data-branch="master" data-direction="back" data-pjax="true" itemscope="url"><span itemprop="title">PuppyPlaydate</span></a></span></span><span class="separator">/</span><span itemscope="" itemtype="http://data-vocabulary.org/Breadcrumb"><a href="/aouyang1/PuppyPlaydate/tree/master/flask-app" class="" data-branch="master" data-direction="back" data-pjax="true" itemscope="url"><span itemprop="title">flask-app</span></a></span><span class="separator">/</span><span itemscope="" itemtype="http://data-vocabulary.org/Breadcrumb"><a href="/aouyang1/PuppyPlaydate/tree/master/flask-app/static" class="" data-branch="master" data-direction="back" data-pjax="true" itemscope="url"><span itemprop="title">static</span></a></span><span class="separator">/</span><strong class="final-path">highcharts.js</strong>
  </div>
</div>


  <div class="commit file-history-tease">
    <div class="file-history-tease-header">
        <img alt="aouyang1" class="avatar" data-user="6226714" height="24" src="https://avatars1.githubusercontent.com/u/6226714?v=3&amp;s=48" width="24" />
        <span class="author"><a href="/aouyang1" rel="author">aouyang1</a></span>
        <time datetime="2015-01-25T08:59:48Z" is="relative-time">Jan 25, 2015</time>
        <div class="commit-title">
            <a href="/aouyang1/PuppyPlaydate/commit/4d5315592cf9ae2a04d6ffcb9859e23d4a920d6b" class="message" data-pjax="true" title="Began rendering monthly data onto highcharts with twitter bootstrap">Began rendering monthly data onto highcharts with twitter bootstrap</a>
        </div>
    </div>

    <div class="participation">
      <p class="quickstat">
        <a href="#blob_contributors_box" rel="facebox">
          <strong>1</strong>
           contributor
        </a>
      </p>
      
    </div>
    <div id="blob_contributors_box" style="display:none">
      <h2 class="facebox-header">Users who have contributed to this file</h2>
      <ul class="facebox-user-list">
          <li class="facebox-user-list-item">
            <img alt="aouyang1" data-user="6226714" height="24" src="https://avatars1.githubusercontent.com/u/6226714?v=3&amp;s=48" width="24" />
            <a href="/aouyang1">aouyang1</a>
          </li>
      </ul>
    </div>
  </div>

<div class="file-box">
  <div class="file">
    <div class="meta clearfix">
      <div class="info file-name">
          <span>308 lines (306 sloc)</span>
          <span class="meta-divider"></span>
        <span>153.908 kb</span>
      </div>
      <div class="actions">
        <div class="button-group">
          <a href="/aouyang1/PuppyPlaydate/raw/master/flask-app/static/highcharts.js" class="minibutton " id="raw-url">Raw</a>
            <a href="/aouyang1/PuppyPlaydate/blame/master/flask-app/static/highcharts.js" class="minibutton js-update-url-with-hash">Blame</a>
          <a href="/aouyang1/PuppyPlaydate/commits/master/flask-app/static/highcharts.js" class="minibutton " rel="nofollow">History</a>
        </div><!-- /.button-group -->

          <a class="octicon-button tooltipped tooltipped-nw js-conduit-openfile-check"
             href="http://mac.github.com"
             data-url="github-mac://openRepo/https://github.com/aouyang1/PuppyPlaydate?branch=master&amp;filepath=flask-app%2Fstatic%2Fhighcharts.js"
             aria-label="Open this file in GitHub for Mac"
             data-failed-title="Your version of GitHub for Mac is too old to open this file. Try checking for updates.">
              <span class="octicon octicon-device-desktop"></span>
          </a>

            <a class="octicon-button disabled tooltipped tooltipped-w" href="#"
               aria-label="You must be signed in to make or propose changes"><span class="octicon octicon-pencil"></span></a>

          <a class="octicon-button danger disabled tooltipped tooltipped-w" href="#"
             aria-label="You must be signed in to make or propose changes">
          <span class="octicon octicon-trashcan"></span>
        </a>
      </div><!-- /.actions -->
    </div>
    

  <div class="blob-wrapper data type-javascript">
      <table class="highlight tab-size-8 js-file-line-container">
      <tr>
        <td id="L1" class="blob-num js-line-number" data-line-number="1"></td>
        <td id="LC1" class="blob-code js-file-line"><span class="pl-c">/*</span></td>
      </tr>
      <tr>
        <td id="L2" class="blob-num js-line-number" data-line-number="2"></td>
        <td id="LC2" class="blob-code js-file-line"><span class="pl-c"> Highcharts JS v4.0.4 (2014-09-02)</span></td>
      </tr>
      <tr>
        <td id="L3" class="blob-num js-line-number" data-line-number="3"></td>
        <td id="LC3" class="blob-code js-file-line"><span class="pl-c"></span></td>
      </tr>
      <tr>
        <td id="L4" class="blob-num js-line-number" data-line-number="4"></td>
        <td id="LC4" class="blob-code js-file-line"><span class="pl-c"> (c) 2009-2014 Torstein Honsi</span></td>
      </tr>
      <tr>
        <td id="L5" class="blob-num js-line-number" data-line-number="5"></td>
        <td id="LC5" class="blob-code js-file-line"><span class="pl-c"></span></td>
      </tr>
      <tr>
        <td id="L6" class="blob-num js-line-number" data-line-number="6"></td>
        <td id="LC6" class="blob-code js-file-line"><span class="pl-c"> License: www.highcharts.com/license</span></td>
      </tr>
      <tr>
        <td id="L7" class="blob-num js-line-number" data-line-number="7"></td>
        <td id="LC7" class="blob-code js-file-line"><span class="pl-c">*/</span></td>
      </tr>
      <tr>
        <td id="L8" class="blob-num js-line-number" data-line-number="8"></td>
        <td id="LC8" class="blob-code js-file-line">(<span class="pl-st">function</span>(){<span class="pl-st">function</span> <span class="pl-en">r</span>(<span class="pl-vpf">a</span>,<span class="pl-vpf">b</span>){<span class="pl-s">var</span> c;a<span class="pl-k">||</span>(a<span class="pl-k">=</span>{});<span class="pl-k">for</span>(c <span class="pl-k">in</span> b)a[c]<span class="pl-k">=</span>b[c];<span class="pl-k">return</span> a}<span class="pl-st">function</span> <span class="pl-en">w</span>(){<span class="pl-s">var</span> a,b<span class="pl-k">=</span>arguments,c,d<span class="pl-k">=</span>{},<span class="pl-en">e</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>,<span class="pl-vpf">b</span>){<span class="pl-s">var</span> c,d;<span class="pl-k">typeof</span> a<span class="pl-k">!==</span><span class="pl-s1"><span class="pl-pds">&quot;</span>object<span class="pl-pds">&quot;</span></span><span class="pl-k">&amp;&amp;</span>(a<span class="pl-k">=</span>{});<span class="pl-k">for</span>(d <span class="pl-k">in</span> b)b.hasOwnProperty(d)<span class="pl-k">&amp;&amp;</span>(c<span class="pl-k">=</span>b[d],a[d]<span class="pl-k">=</span>c<span class="pl-k">&amp;&amp;typeof</span> c<span class="pl-k">===</span><span class="pl-s1"><span class="pl-pds">&quot;</span>object<span class="pl-pds">&quot;</span></span><span class="pl-k">&amp;&amp;</span><span class="pl-s3">Object</span>.<span class="pl-sc">prototype</span>.toString.<span class="pl-s3">call</span>(c)<span class="pl-k">!==</span><span class="pl-s1"><span class="pl-pds">&quot;</span>[object Array]<span class="pl-pds">&quot;</span></span><span class="pl-k">&amp;&amp;</span>d<span class="pl-k">!==</span><span class="pl-s1"><span class="pl-pds">&quot;</span>renderTo<span class="pl-pds">&quot;</span></span><span class="pl-k">&amp;&amp;typeof</span> c.<span class="pl-sc">nodeType</span><span class="pl-k">!==</span><span class="pl-s1"><span class="pl-pds">&quot;</span>number<span class="pl-pds">&quot;</span></span><span class="pl-k">?</span>e(a[d]<span class="pl-k">||</span>{},c)<span class="pl-k">:</span>b[d]);<span class="pl-k">return</span> a};b[<span class="pl-c1">0</span>]<span class="pl-k">===!</span><span class="pl-c1">0</span><span class="pl-k">&amp;&amp;</span>(d<span class="pl-k">=</span>b[<span class="pl-c1">1</span>],b<span class="pl-k">=</span><span class="pl-s3">Array</span>.<span class="pl-sc">prototype</span>.slice.<span class="pl-s3">call</span>(b,<span class="pl-c1">2</span>));c<span class="pl-k">=</span>b.<span class="pl-sc">length</span>;<span class="pl-k">for</span>(a<span class="pl-k">=</span><span class="pl-c1">0</span>;a<span class="pl-k">&lt;</span>c;a<span class="pl-k">++</span>)d<span class="pl-k">=</span>e(d,b[a]);<span class="pl-k">return</span> d}<span class="pl-st">function</span> <span class="pl-en">y</span>(<span class="pl-vpf">a</span>,<span class="pl-vpf">b</span>){<span class="pl-k">return</span> <span class="pl-s3">parseInt</span>(a,b<span class="pl-k">||</span></td>
      </tr>
      <tr>
        <td id="L9" class="blob-num js-line-number" data-line-number="9"></td>
        <td id="LC9" class="blob-code js-file-line"><span class="pl-c1">10</span>)}<span class="pl-st">function</span> <span class="pl-en">Ga</span>(<span class="pl-vpf">a</span>){<span class="pl-k">return</span> <span class="pl-k">typeof</span> a<span class="pl-k">===</span><span class="pl-s1"><span class="pl-pds">&quot;</span>string<span class="pl-pds">&quot;</span></span>}<span class="pl-st">function</span> <span class="pl-en">da</span>(<span class="pl-vpf">a</span>){<span class="pl-k">return</span> a<span class="pl-k">&amp;&amp;typeof</span> a<span class="pl-k">===</span><span class="pl-s1"><span class="pl-pds">&quot;</span>object<span class="pl-pds">&quot;</span></span>}<span class="pl-st">function</span> <span class="pl-en">Ha</span>(<span class="pl-vpf">a</span>){<span class="pl-k">return</span> <span class="pl-s3">Object</span>.<span class="pl-sc">prototype</span>.toString.<span class="pl-s3">call</span>(a)<span class="pl-k">===</span><span class="pl-s1"><span class="pl-pds">&quot;</span>[object Array]<span class="pl-pds">&quot;</span></span>}<span class="pl-st">function</span> <span class="pl-en">ja</span>(<span class="pl-vpf">a</span>){<span class="pl-k">return</span> <span class="pl-k">typeof</span> a<span class="pl-k">===</span><span class="pl-s1"><span class="pl-pds">&quot;</span>number<span class="pl-pds">&quot;</span></span>}<span class="pl-st">function</span> <span class="pl-en">za</span>(<span class="pl-vpf">a</span>){<span class="pl-k">return</span> V<span class="pl-s3">.log</span>(a)/V.<span class="pl-sc">LN10</span>}<span class="pl-st">function</span> <span class="pl-en">ka</span>(<span class="pl-vpf">a</span>){<span class="pl-k">return</span> V.<span class="pl-s3">pow</span>(<span class="pl-c1">10</span>,a)}<span class="pl-st">function</span> <span class="pl-en">la</span>(<span class="pl-vpf">a</span>,<span class="pl-vpf">b</span>){<span class="pl-k">for</span>(<span class="pl-s">var</span> c<span class="pl-k">=</span>a.<span class="pl-sc">length</span>;c<span class="pl-k">--</span>;)<span class="pl-k">if</span>(a[c]<span class="pl-k">===</span>b){a.<span class="pl-s3">splice</span>(c,<span class="pl-c1">1</span>);<span class="pl-k">break</span>}}<span class="pl-st">function</span> <span class="pl-en">s</span>(<span class="pl-vpf">a</span>){<span class="pl-k">return</span> a<span class="pl-k">!==</span>u<span class="pl-k">&amp;&amp;</span>a<span class="pl-k">!==</span><span class="pl-c1">null</span>}<span class="pl-st">function</span> <span class="pl-en">F</span>(<span class="pl-vpf">a</span>,<span class="pl-vpf">b</span>,<span class="pl-vpf">c</span>){<span class="pl-s">var</span> d,e;<span class="pl-k">if</span>(Ga(b))s(c)<span class="pl-k">?</span>a.<span class="pl-s3">setAttribute</span>(b,c)<span class="pl-k">:</span>a<span class="pl-k">&amp;&amp;</span>a.getAttribute<span class="pl-k">&amp;&amp;</span>(e<span class="pl-k">=</span>a.<span class="pl-s3">getAttribute</span>(b));<span class="pl-k">else</span> <span class="pl-k">if</span>(s(b)<span class="pl-k">&amp;&amp;</span></td>
      </tr>
      <tr>
        <td id="L10" class="blob-num js-line-number" data-line-number="10"></td>
        <td id="LC10" class="blob-code js-file-line">da(b))<span class="pl-k">for</span>(d <span class="pl-k">in</span> b)a.<span class="pl-s3">setAttribute</span>(d,b[d]);<span class="pl-k">return</span> e}<span class="pl-st">function</span> <span class="pl-en">ra</span>(<span class="pl-vpf">a</span>){<span class="pl-k">return</span> Ha(a)<span class="pl-k">?</span>a<span class="pl-k">:</span>[a]}<span class="pl-st">function</span> <span class="pl-en">p</span>(){<span class="pl-s">var</span> a<span class="pl-k">=</span>arguments,b,c,d<span class="pl-k">=</span>a.<span class="pl-sc">length</span>;<span class="pl-k">for</span>(b<span class="pl-k">=</span><span class="pl-c1">0</span>;b<span class="pl-k">&lt;</span>d;b<span class="pl-k">++</span>)<span class="pl-k">if</span>(c<span class="pl-k">=</span>a[b],c<span class="pl-k">!==</span>u<span class="pl-k">&amp;&amp;</span>c<span class="pl-k">!==</span><span class="pl-c1">null</span>)<span class="pl-k">return</span> c}<span class="pl-st">function</span> <span class="pl-en">B</span>(<span class="pl-vpf">a</span>,<span class="pl-vpf">b</span>){<span class="pl-k">if</span>(Aa<span class="pl-k">&amp;&amp;!</span>ba<span class="pl-k">&amp;&amp;</span>b<span class="pl-k">&amp;&amp;</span>b.opacity<span class="pl-k">!==</span>u)b.filter<span class="pl-k">=</span><span class="pl-s1"><span class="pl-pds">&quot;</span>alpha(opacity=<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>b.opacity<span class="pl-k">*</span><span class="pl-c1">100</span><span class="pl-k">+</span><span class="pl-s1"><span class="pl-pds">&quot;</span>)<span class="pl-pds">&quot;</span></span>;r(a.<span class="pl-sc">style</span>,b)}<span class="pl-st">function</span> <span class="pl-en">$</span>(<span class="pl-vpf">a</span>,<span class="pl-vpf">b</span>,<span class="pl-vpf">c</span>,<span class="pl-vpf">d</span>,<span class="pl-vpf">e</span>){a<span class="pl-k">=</span>x.<span class="pl-s3">createElement</span>(a);b<span class="pl-k">&amp;&amp;</span>r(a,b);e<span class="pl-k">&amp;&amp;</span>B(a,{padding<span class="pl-k">:</span><span class="pl-c1">0</span>,border<span class="pl-k">:</span>P,margin<span class="pl-k">:</span><span class="pl-c1">0</span>});c<span class="pl-k">&amp;&amp;</span>B(a,c);d<span class="pl-k">&amp;&amp;</span>d.<span class="pl-s3">appendChild</span>(a);<span class="pl-k">return</span> a}<span class="pl-st">function</span> <span class="pl-en">ma</span>(<span class="pl-vpf">a</span>,<span class="pl-vpf">b</span>){<span class="pl-s">var</span> <span class="pl-en">c</span><span class="pl-k">=</span><span class="pl-st">function</span>(){<span class="pl-k">return</span> u};<span class="pl-s3">c</span>.<span class="pl-sc">prototype</span><span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">a</span>;r(c.<span class="pl-sc">prototype</span>,b);<span class="pl-k">return</span> c}<span class="pl-st">function</span> <span class="pl-en">Ba</span>(<span class="pl-vpf">a</span>,</td>
      </tr>
      <tr>
        <td id="L11" class="blob-num js-line-number" data-line-number="11"></td>
        <td id="LC11" class="blob-code js-file-line"><span class="pl-vpf">b</span>,<span class="pl-vpf">c</span>,<span class="pl-vpf">d</span>){<span class="pl-s">var</span> e<span class="pl-k">=</span>K.numberFormat,f<span class="pl-k">=</span>E.<span class="pl-sc">lang</span>,g<span class="pl-k">=+</span>a<span class="pl-k">||</span><span class="pl-c1">0</span>,h<span class="pl-k">=</span>b<span class="pl-k">===-</span><span class="pl-c1">1</span><span class="pl-k">?</span>(g.<span class="pl-s3">toString</span>().<span class="pl-s3">split</span>(<span class="pl-s1"><span class="pl-pds">&quot;</span>.<span class="pl-pds">&quot;</span></span>)[<span class="pl-c1">1</span>]<span class="pl-k">||</span><span class="pl-s1"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>).<span class="pl-sc">length</span><span class="pl-k">:</span><span class="pl-s3">isNaN</span>(b<span class="pl-k">=</span>Q(b))<span class="pl-k">?</span><span class="pl-c1">2</span><span class="pl-k">:</span>b,i<span class="pl-k">=</span>c<span class="pl-k">===void</span> <span class="pl-c1">0</span><span class="pl-k">?</span>f.decimalPoint<span class="pl-k">:</span>c,f<span class="pl-k">=</span>d<span class="pl-k">===void</span> <span class="pl-c1">0</span><span class="pl-k">?</span>f.thousandsSep<span class="pl-k">:</span>d,j<span class="pl-k">=</span>g<span class="pl-k">&lt;</span><span class="pl-c1">0</span><span class="pl-k">?</span><span class="pl-s1"><span class="pl-pds">&quot;</span>-<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s1"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>,k<span class="pl-k">=</span><span class="pl-s3">String</span>(y(g<span class="pl-k">=</span>Q(g).toFixed(h))),l<span class="pl-k">=</span>k.<span class="pl-sc">length</span><span class="pl-k">&gt;</span><span class="pl-c1">3</span><span class="pl-k">?</span>k.<span class="pl-sc">length</span><span class="pl-k">%</span><span class="pl-c1">3</span><span class="pl-k">:</span><span class="pl-c1">0</span>;<span class="pl-k">return</span> e<span class="pl-k">!==</span>Ba<span class="pl-k">?</span>e(a,b,c,d)<span class="pl-k">:</span>j<span class="pl-k">+</span>(l<span class="pl-k">?</span>k.<span class="pl-s3">substr</span>(<span class="pl-c1">0</span>,l)<span class="pl-k">+</span>f<span class="pl-k">:</span><span class="pl-s1"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>)<span class="pl-k">+</span>k.<span class="pl-s3">substr</span>(l).<span class="pl-s3">replace</span>(<span class="pl-sr"><span class="pl-pds">/</span>(<span class="pl-c1">\d</span><span class="pl-k">{3}</span>)(?=<span class="pl-c1">\d</span>)<span class="pl-pds">/</span>g</span>,<span class="pl-s1"><span class="pl-pds">&quot;</span>$1<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>f)<span class="pl-k">+</span>(h<span class="pl-k">?</span>i<span class="pl-k">+</span>Q(g<span class="pl-k">-</span>k).toFixed(h).<span class="pl-s3">slice</span>(<span class="pl-c1">2</span>)<span class="pl-k">:</span><span class="pl-s1"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>)}<span class="pl-st">function</span> <span class="pl-en">Ia</span>(<span class="pl-vpf">a</span>,<span class="pl-vpf">b</span>){<span class="pl-k">return</span> <span class="pl-s3">Array</span>((b<span class="pl-k">||</span><span class="pl-c1">2</span>)<span class="pl-k">+</span><span class="pl-c1">1</span><span class="pl-k">-</span><span class="pl-s3">String</span>(a).<span class="pl-sc">length</span>).<span class="pl-s3">join</span>(<span class="pl-c1">0</span>)<span class="pl-k">+</span>a}<span class="pl-st">function</span> <span class="pl-en">Na</span>(<span class="pl-vpf">a</span>,<span class="pl-vpf">b</span>,<span class="pl-vpf">c</span>){<span class="pl-s">var</span> d<span class="pl-k">=</span>a[b];a[b]<span class="pl-k">=</span><span class="pl-st">function</span>(){<span class="pl-s">var</span> a<span class="pl-k">=</span><span class="pl-s3">Array</span>.<span class="pl-sc">prototype</span>.slice.<span class="pl-s3">call</span>(arguments);</td>
      </tr>
      <tr>
        <td id="L12" class="blob-num js-line-number" data-line-number="12"></td>
        <td id="LC12" class="blob-code js-file-line">a.<span class="pl-s3">unshift</span>(d);<span class="pl-k">return</span> c.<span class="pl-s3">apply</span>(<span class="pl-v">this</span>,a)}}<span class="pl-st">function</span> <span class="pl-en">Ja</span>(<span class="pl-vpf">a</span>,<span class="pl-vpf">b</span>){<span class="pl-k">for</span>(<span class="pl-s">var</span> c<span class="pl-k">=</span><span class="pl-s1"><span class="pl-pds">&quot;</span>{<span class="pl-pds">&quot;</span></span>,d<span class="pl-k">=!</span><span class="pl-c1">1</span>,e,f,g,h,i,j<span class="pl-k">=</span>[];(c<span class="pl-k">=</span>a.<span class="pl-s3">indexOf</span>(c))<span class="pl-k">!==-</span><span class="pl-c1">1</span>;){e<span class="pl-k">=</span>a.<span class="pl-s3">slice</span>(<span class="pl-c1">0</span>,c);<span class="pl-k">if</span>(d){f<span class="pl-k">=</span>e.<span class="pl-s3">split</span>(<span class="pl-s1"><span class="pl-pds">&quot;</span>:<span class="pl-pds">&quot;</span></span>);g<span class="pl-k">=</span>f.<span class="pl-s3">shift</span>().<span class="pl-s3">split</span>(<span class="pl-s1"><span class="pl-pds">&quot;</span>.<span class="pl-pds">&quot;</span></span>);i<span class="pl-k">=</span>g.<span class="pl-sc">length</span>;e<span class="pl-k">=</span>b;<span class="pl-k">for</span>(h<span class="pl-k">=</span><span class="pl-c1">0</span>;h<span class="pl-k">&lt;</span>i;h<span class="pl-k">++</span>)e<span class="pl-k">=</span>e[g[h]];<span class="pl-k">if</span>(f.<span class="pl-sc">length</span>)f<span class="pl-k">=</span>f.<span class="pl-s3">join</span>(<span class="pl-s1"><span class="pl-pds">&quot;</span>:<span class="pl-pds">&quot;</span></span>),g<span class="pl-k">=</span><span class="pl-sr"><span class="pl-pds">/</span><span class="pl-cce">\.</span>(<span class="pl-c1">[<span class="pl-c1">0-9</span>]</span>)<span class="pl-pds">/</span></span>,h<span class="pl-k">=</span>E.<span class="pl-sc">lang</span>,i<span class="pl-k">=void</span> <span class="pl-c1">0</span>,<span class="pl-sr"><span class="pl-pds">/</span>f<span class="pl-k">$</span><span class="pl-pds">/</span></span>.<span class="pl-s3">test</span>(f)<span class="pl-k">?</span>(i<span class="pl-k">=</span>(i<span class="pl-k">=</span>f.<span class="pl-s3">match</span>(g))<span class="pl-k">?</span>i[<span class="pl-c1">1</span>]<span class="pl-k">:-</span><span class="pl-c1">1</span>,e<span class="pl-k">!==</span><span class="pl-c1">null</span><span class="pl-k">&amp;&amp;</span>(e<span class="pl-k">=</span>Ba(e,i,h.decimalPoint,f.<span class="pl-s3">indexOf</span>(<span class="pl-s1"><span class="pl-pds">&quot;</span>,<span class="pl-pds">&quot;</span></span>)<span class="pl-k">&gt;-</span><span class="pl-c1">1</span><span class="pl-k">?</span>h.thousandsSep<span class="pl-k">:</span><span class="pl-s1"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>)))<span class="pl-k">:</span>e<span class="pl-k">=</span>cb(f,e)}j.<span class="pl-s3">push</span>(e);a<span class="pl-k">=</span>a.<span class="pl-s3">slice</span>(c<span class="pl-k">+</span><span class="pl-c1">1</span>);c<span class="pl-k">=</span>(d<span class="pl-k">=!</span>d)<span class="pl-k">?</span><span class="pl-s1"><span class="pl-pds">&quot;</span>}<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s1"><span class="pl-pds">&quot;</span>{<span class="pl-pds">&quot;</span></span>}j.<span class="pl-s3">push</span>(a);<span class="pl-k">return</span> j.<span class="pl-s3">join</span>(<span class="pl-s1"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>)}<span class="pl-st">function</span> <span class="pl-en">mb</span>(<span class="pl-vpf">a</span>){<span class="pl-k">return</span> V.<span class="pl-s3">pow</span>(<span class="pl-c1">10</span>,U(V<span class="pl-s3">.log</span>(a)/</td>
      </tr>
      <tr>
        <td id="L13" class="blob-num js-line-number" data-line-number="13"></td>
        <td id="LC13" class="blob-code js-file-line">V.<span class="pl-sc">LN10</span>))}<span class="pl-st">function</span> <span class="pl-en">nb</span>(<span class="pl-vpf">a</span>,<span class="pl-vpf">b</span>,<span class="pl-vpf">c</span>,<span class="pl-vpf">d</span>){<span class="pl-s">var</span> e,c<span class="pl-k">=</span>p(c,<span class="pl-c1">1</span>);e<span class="pl-k">=</span>a/c;b<span class="pl-k">||</span>(b<span class="pl-k">=</span>[<span class="pl-c1">1</span>,<span class="pl-c1">2</span>,<span class="pl-c1">2.5</span>,<span class="pl-c1">5</span>,<span class="pl-c1">10</span>],d<span class="pl-k">===!</span><span class="pl-c1">1</span><span class="pl-k">&amp;&amp;</span>(c<span class="pl-k">===</span><span class="pl-c1">1</span><span class="pl-k">?</span>b<span class="pl-k">=</span>[<span class="pl-c1">1</span>,<span class="pl-c1">2</span>,<span class="pl-c1">5</span>,<span class="pl-c1">10</span>]<span class="pl-k">:</span>c<span class="pl-k">&lt;=</span><span class="pl-c1">0.1</span><span class="pl-k">&amp;&amp;</span>(b<span class="pl-k">=</span>[<span class="pl-c1">1</span>/c])));<span class="pl-k">for</span>(d<span class="pl-k">=</span><span class="pl-c1">0</span>;d<span class="pl-k">&lt;</span>b.<span class="pl-sc">length</span>;d<span class="pl-k">++</span>)<span class="pl-k">if</span>(a<span class="pl-k">=</span>b[d],e<span class="pl-k">&lt;=</span>(b[d]<span class="pl-k">+</span>(b[d<span class="pl-k">+</span><span class="pl-c1">1</span>]<span class="pl-k">||</span>b[d]))/<span class="pl-c1">2</span>)<span class="pl-k">break</span>;a<span class="pl-k">*=</span>c;<span class="pl-k">return</span> a}<span class="pl-st">function</span> <span class="pl-en">ob</span>(<span class="pl-vpf">a</span>,<span class="pl-vpf">b</span>){<span class="pl-s">var</span> c<span class="pl-k">=</span>a.<span class="pl-sc">length</span>,d,e;<span class="pl-k">for</span>(e<span class="pl-k">=</span><span class="pl-c1">0</span>;e<span class="pl-k">&lt;</span>c;e<span class="pl-k">++</span>)a[e].ss_i<span class="pl-k">=</span>e;a.<span class="pl-s3">sort</span>(<span class="pl-st">function</span>(<span class="pl-vpf">a</span>,<span class="pl-vpf">c</span>){d<span class="pl-k">=</span>b(a,c);<span class="pl-k">return</span> d<span class="pl-k">===</span><span class="pl-c1">0</span><span class="pl-k">?</span>a.ss_i<span class="pl-k">-</span>c.ss_i<span class="pl-k">:</span>d});<span class="pl-k">for</span>(e<span class="pl-k">=</span><span class="pl-c1">0</span>;e<span class="pl-k">&lt;</span>c;e<span class="pl-k">++</span>)<span class="pl-k">delete</span> a[e].ss_i}<span class="pl-st">function</span> <span class="pl-en">Oa</span>(<span class="pl-vpf">a</span>){<span class="pl-k">for</span>(<span class="pl-s">var</span> b<span class="pl-k">=</span>a.<span class="pl-sc">length</span>,c<span class="pl-k">=</span>a[<span class="pl-c1">0</span>];b<span class="pl-k">--</span>;)a[b]<span class="pl-k">&lt;</span>c<span class="pl-k">&amp;&amp;</span>(c<span class="pl-k">=</span>a[b]);<span class="pl-k">return</span> c}<span class="pl-st">function</span> <span class="pl-en">Ca</span>(<span class="pl-vpf">a</span>){<span class="pl-k">for</span>(<span class="pl-s">var</span> b<span class="pl-k">=</span>a.<span class="pl-sc">length</span>,c<span class="pl-k">=</span>a[<span class="pl-c1">0</span>];b<span class="pl-k">--</span>;)a[b]<span class="pl-k">&gt;</span>c<span class="pl-k">&amp;&amp;</span>(c<span class="pl-k">=</span>a[b]);<span class="pl-k">return</span> c}</td>
      </tr>
      <tr>
        <td id="L14" class="blob-num js-line-number" data-line-number="14"></td>
        <td id="LC14" class="blob-code js-file-line"><span class="pl-st">function</span> <span class="pl-en">Pa</span>(<span class="pl-vpf">a</span>,<span class="pl-vpf">b</span>){<span class="pl-k">for</span>(<span class="pl-s">var</span> c <span class="pl-k">in</span> a)a[c]<span class="pl-k">&amp;&amp;</span>a[c]<span class="pl-k">!==</span>b<span class="pl-k">&amp;&amp;</span>a[c].destroy<span class="pl-k">&amp;&amp;</span>a[c].destroy(),<span class="pl-k">delete</span> a[c]}<span class="pl-st">function</span> <span class="pl-en">Qa</span>(<span class="pl-vpf">a</span>){db<span class="pl-k">||</span>(db<span class="pl-k">=</span>$(Ka));a<span class="pl-k">&amp;&amp;</span>db.<span class="pl-s3">appendChild</span>(a);db.innerHTML<span class="pl-k">=</span><span class="pl-s1"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>}<span class="pl-st">function</span> <span class="pl-en">ea</span>(<span class="pl-vpf">a</span>){<span class="pl-k">return</span> <span class="pl-s3">parseFloat</span>(a.toPrecision(<span class="pl-c1">14</span>))}<span class="pl-st">function</span> <span class="pl-en">Ra</span>(<span class="pl-vpf">a</span>,<span class="pl-vpf">b</span>){va<span class="pl-k">=</span>p(a,b.animation)}<span class="pl-st">function</span> <span class="pl-en">Bb</span>(){<span class="pl-s">var</span> a<span class="pl-k">=</span>E.<span class="pl-sc">global</span>.useUTC,b<span class="pl-k">=</span>a<span class="pl-k">?</span><span class="pl-s1"><span class="pl-pds">&quot;</span>getUTC<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s1"><span class="pl-pds">&quot;</span>get<span class="pl-pds">&quot;</span></span>,c<span class="pl-k">=</span>a<span class="pl-k">?</span><span class="pl-s1"><span class="pl-pds">&quot;</span>setUTC<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s1"><span class="pl-pds">&quot;</span>set<span class="pl-pds">&quot;</span></span>;Da<span class="pl-k">=</span>E.<span class="pl-sc">global</span>.<span class="pl-s3">Date</span><span class="pl-k">||</span><span class="pl-s3">window</span>.<span class="pl-s3">Date</span>;Sa<span class="pl-k">=</span>(a<span class="pl-k">&amp;&amp;</span>E.<span class="pl-sc">global</span>.timezoneOffset<span class="pl-k">||</span><span class="pl-c1">0</span>)<span class="pl-k">*</span><span class="pl-c1">6E4</span>;eb<span class="pl-k">=</span><span class="pl-en">a?Da.UTC</span>:<span class="pl-st">function</span>(<span class="pl-vpf">a</span>,<span class="pl-vpf">b</span>,<span class="pl-vpf">c</span>,<span class="pl-vpf">g</span>,<span class="pl-vpf">h</span>,<span class="pl-vpf">i</span>){<span class="pl-k">return</span>(<span class="pl-k">new</span> <span class="pl-en">Da</span>(a,b,p(c,<span class="pl-c1">1</span>),p(g,<span class="pl-c1">0</span>),p(h,<span class="pl-c1">0</span>),p(i,<span class="pl-c1">0</span>))).<span class="pl-s3">getTime</span>()};pb<span class="pl-k">=</span>b<span class="pl-k">+</span><span class="pl-s1"><span class="pl-pds">&quot;</span>Minutes<span class="pl-pds">&quot;</span></span>;qb<span class="pl-k">=</span>b<span class="pl-k">+</span></td>
      </tr>
      <tr>
        <td id="L15" class="blob-num js-line-number" data-line-number="15"></td>
        <td id="LC15" class="blob-code js-file-line"><span class="pl-s1"><span class="pl-pds">&quot;</span>Hours<span class="pl-pds">&quot;</span></span>;rb<span class="pl-k">=</span>b<span class="pl-k">+</span><span class="pl-s1"><span class="pl-pds">&quot;</span>Day<span class="pl-pds">&quot;</span></span>;Xa<span class="pl-k">=</span>b<span class="pl-k">+</span><span class="pl-s1"><span class="pl-pds">&quot;</span>Date<span class="pl-pds">&quot;</span></span>;fb<span class="pl-k">=</span>b<span class="pl-k">+</span><span class="pl-s1"><span class="pl-pds">&quot;</span>Month<span class="pl-pds">&quot;</span></span>;gb<span class="pl-k">=</span>b<span class="pl-k">+</span><span class="pl-s1"><span class="pl-pds">&quot;</span>FullYear<span class="pl-pds">&quot;</span></span>;Cb<span class="pl-k">=</span>c<span class="pl-k">+</span><span class="pl-s1"><span class="pl-pds">&quot;</span>Minutes<span class="pl-pds">&quot;</span></span>;Db<span class="pl-k">=</span>c<span class="pl-k">+</span><span class="pl-s1"><span class="pl-pds">&quot;</span>Hours<span class="pl-pds">&quot;</span></span>;sb<span class="pl-k">=</span>c<span class="pl-k">+</span><span class="pl-s1"><span class="pl-pds">&quot;</span>Date<span class="pl-pds">&quot;</span></span>;Eb<span class="pl-k">=</span>c<span class="pl-k">+</span><span class="pl-s1"><span class="pl-pds">&quot;</span>Month<span class="pl-pds">&quot;</span></span>;Fb<span class="pl-k">=</span>c<span class="pl-k">+</span><span class="pl-s1"><span class="pl-pds">&quot;</span>FullYear<span class="pl-pds">&quot;</span></span>}<span class="pl-st">function</span> <span class="pl-en">S</span>(){}<span class="pl-st">function</span> <span class="pl-en">Ta</span>(<span class="pl-vpf">a</span>,<span class="pl-vpf">b</span>,<span class="pl-vpf">c</span>,<span class="pl-vpf">d</span>){<span class="pl-v">this</span>.<span class="pl-sc">axis</span><span class="pl-k">=</span>a;<span class="pl-v">this</span>.pos<span class="pl-k">=</span>b;<span class="pl-v">this</span>.<span class="pl-sc">type</span><span class="pl-k">=</span>c<span class="pl-k">||</span><span class="pl-s1"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>;<span class="pl-v">this</span>.isNew<span class="pl-k">=!</span><span class="pl-c1">0</span>;<span class="pl-k">!</span>c<span class="pl-k">&amp;&amp;!</span>d<span class="pl-k">&amp;&amp;</span><span class="pl-v">this</span>.addLabel()}<span class="pl-st">function</span> <span class="pl-en">na</span>(){<span class="pl-v">this</span>.init.<span class="pl-s3">apply</span>(<span class="pl-v">this</span>,arguments)}<span class="pl-st">function</span> <span class="pl-en">Ya</span>(){<span class="pl-v">this</span>.init.<span class="pl-s3">apply</span>(<span class="pl-v">this</span>,arguments)}<span class="pl-st">function</span> <span class="pl-en">Gb</span>(<span class="pl-vpf">a</span>,<span class="pl-vpf">b</span>,<span class="pl-vpf">c</span>,<span class="pl-vpf">d</span>,<span class="pl-vpf">e</span>){<span class="pl-s">var</span> f<span class="pl-k">=</span>a.chart.inverted;<span class="pl-v">this</span>.<span class="pl-sc">axis</span><span class="pl-k">=</span>a;<span class="pl-v">this</span>.isNegative<span class="pl-k">=</span>c;<span class="pl-v">this</span>.<span class="pl-sc">options</span><span class="pl-k">=</span>b;<span class="pl-v">this</span>.<span class="pl-sc">x</span><span class="pl-k">=</span>d;<span class="pl-v">this</span>.total<span class="pl-k">=</span><span class="pl-c1">null</span>;<span class="pl-v">this</span>.points<span class="pl-k">=</span>{};<span class="pl-v">this</span>.stack<span class="pl-k">=</span>e;<span class="pl-v">this</span>.alignOptions<span class="pl-k">=</span>{align<span class="pl-k">:</span>b.<span class="pl-sc">align</span><span class="pl-k">||</span></td>
      </tr>
      <tr>
        <td id="L16" class="blob-num js-line-number" data-line-number="16"></td>
        <td id="LC16" class="blob-code js-file-line">(f<span class="pl-k">?</span>c<span class="pl-k">?</span><span class="pl-s1"><span class="pl-pds">&quot;</span>left<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s1"><span class="pl-pds">&quot;</span>right<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s1"><span class="pl-pds">&quot;</span>center<span class="pl-pds">&quot;</span></span>),verticalAlign<span class="pl-k">:</span>b.verticalAlign<span class="pl-k">||</span>(f<span class="pl-k">?</span><span class="pl-s1"><span class="pl-pds">&quot;</span>middle<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span>c<span class="pl-k">?</span><span class="pl-s1"><span class="pl-pds">&quot;</span>bottom<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s1"><span class="pl-pds">&quot;</span>top<span class="pl-pds">&quot;</span></span>),y<span class="pl-k">:</span>p(b.<span class="pl-sc">y</span>,f<span class="pl-k">?</span><span class="pl-c1">4</span><span class="pl-k">:</span>c<span class="pl-k">?</span><span class="pl-c1">14</span><span class="pl-k">:-</span><span class="pl-c1">6</span>),x<span class="pl-k">:</span>p(b.<span class="pl-sc">x</span>,f<span class="pl-k">?</span>c<span class="pl-k">?-</span><span class="pl-c1">6</span><span class="pl-k">:</span><span class="pl-c1">6</span><span class="pl-k">:</span><span class="pl-c1">0</span>)};<span class="pl-v">this</span>.<span class="pl-sc">textAlign</span><span class="pl-k">=</span>b.<span class="pl-sc">textAlign</span><span class="pl-k">||</span>(f<span class="pl-k">?</span>c<span class="pl-k">?</span><span class="pl-s1"><span class="pl-pds">&quot;</span>right<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s1"><span class="pl-pds">&quot;</span>left<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s1"><span class="pl-pds">&quot;</span>center<span class="pl-pds">&quot;</span></span>)}<span class="pl-s">var</span> u,x<span class="pl-k">=</span><span class="pl-s3">document</span>,G<span class="pl-k">=</span><span class="pl-s3">window</span>,V<span class="pl-k">=</span><span class="pl-s3">Math</span>,v<span class="pl-k">=</span>V.round,U<span class="pl-k">=</span>V.floor,La<span class="pl-k">=</span>V.ceil,t<span class="pl-k">=</span>V.max,L<span class="pl-k">=</span>V.min,Q<span class="pl-k">=</span>V.abs,aa<span class="pl-k">=</span>V.cos,fa<span class="pl-k">=</span>V.sin,oa<span class="pl-k">=</span>V.<span class="pl-sc">PI</span>,Ea<span class="pl-k">=</span>oa<span class="pl-k">*</span><span class="pl-c1">2</span>/<span class="pl-c1">360</span>,wa<span class="pl-k">=</span><span class="pl-s3">navigator</span>.<span class="pl-sc">userAgent</span>,Hb<span class="pl-k">=</span>G.opera,Aa<span class="pl-k">=</span><span class="pl-sr"><span class="pl-pds">/</span>msie<span class="pl-pds">/</span>i</span>.<span class="pl-s3">test</span>(wa)<span class="pl-k">&amp;&amp;!</span>Hb,hb<span class="pl-k">=</span>x.documentMode<span class="pl-k">===</span><span class="pl-c1">8</span>,tb<span class="pl-k">=</span><span class="pl-sr"><span class="pl-pds">/</span>AppleWebKit<span class="pl-pds">/</span></span>.<span class="pl-s3">test</span>(wa),Ua<span class="pl-k">=</span><span class="pl-sr"><span class="pl-pds">/</span>Firefox<span class="pl-pds">/</span></span>.<span class="pl-s3">test</span>(wa),Ib<span class="pl-k">=</span><span class="pl-sr"><span class="pl-pds">/</span>(Mobile<span class="pl-k">|</span>Android<span class="pl-k">|</span>Windows Phone)<span class="pl-pds">/</span></span>.<span class="pl-s3">test</span>(wa),xa<span class="pl-k">=</span><span class="pl-s1"><span class="pl-pds">&quot;</span>http://www.w3.org/2000/svg<span class="pl-pds">&quot;</span></span>,</td>
      </tr>
      <tr>
        <td id="L17" class="blob-num js-line-number" data-line-number="17"></td>
        <td id="LC17" class="blob-code js-file-line">ba<span class="pl-k">=!!</span>x.createElementNS<span class="pl-k">&amp;&amp;!!</span>x.createElementNS(xa,<span class="pl-s1"><span class="pl-pds">&quot;</span>svg<span class="pl-pds">&quot;</span></span>).createSVGRect,Ob<span class="pl-k">=</span>Ua<span class="pl-k">&amp;&amp;</span><span class="pl-s3">parseInt</span>(wa.<span class="pl-s3">split</span>(<span class="pl-s1"><span class="pl-pds">&quot;</span>Firefox/<span class="pl-pds">&quot;</span></span>)[<span class="pl-c1">1</span>],<span class="pl-c1">10</span>)<span class="pl-k">&lt;</span><span class="pl-c1">4</span>,ga<span class="pl-k">=!</span>ba<span class="pl-k">&amp;&amp;!</span>Aa<span class="pl-k">&amp;&amp;!!</span>x.<span class="pl-s3">createElement</span>(<span class="pl-s1"><span class="pl-pds">&quot;</span>canvas<span class="pl-pds">&quot;</span></span>).getContext,Za,$a,Jb<span class="pl-k">=</span>{},ub<span class="pl-k">=</span><span class="pl-c1">0</span>,db,E,cb,va,vb,A,ha,<span class="pl-en">sa</span><span class="pl-k">=</span><span class="pl-st">function</span>(){<span class="pl-k">return</span> u},W<span class="pl-k">=</span>[],ab<span class="pl-k">=</span><span class="pl-c1">0</span>,Ka<span class="pl-k">=</span><span class="pl-s1"><span class="pl-pds">&quot;</span>div<span class="pl-pds">&quot;</span></span>,P<span class="pl-k">=</span><span class="pl-s1"><span class="pl-pds">&quot;</span>none<span class="pl-pds">&quot;</span></span>,Pb<span class="pl-k">=</span><span class="pl-sr"><span class="pl-pds">/</span><span class="pl-k">^</span><span class="pl-c1">[<span class="pl-c1">0-9</span>]</span><span class="pl-k">+</span><span class="pl-k">$</span><span class="pl-pds">/</span></span>,Qb<span class="pl-k">=</span><span class="pl-s1"><span class="pl-pds">&quot;</span>stroke-width<span class="pl-pds">&quot;</span></span>,Da,eb,Sa,pb,qb,rb,Xa,fb,gb,Cb,Db,sb,Eb,Fb,H<span class="pl-k">=</span>{},K;G.Highcharts<span class="pl-k">?</span>ha(<span class="pl-c1">16</span>,<span class="pl-k">!</span><span class="pl-c1">0</span>)<span class="pl-k">:</span>K<span class="pl-k">=</span>G.Highcharts<span class="pl-k">=</span>{};<span class="pl-en">cb</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>,<span class="pl-vpf">b</span>,<span class="pl-vpf">c</span>){<span class="pl-k">if</span>(<span class="pl-k">!</span>s(b)<span class="pl-k">||</span><span class="pl-s3">isNaN</span>(b))<span class="pl-k">return</span><span class="pl-s1"><span class="pl-pds">&quot;</span>Invalid date<span class="pl-pds">&quot;</span></span>;<span class="pl-s">var</span> a<span class="pl-k">=</span>p(a,<span class="pl-s1"><span class="pl-pds">&quot;</span>%Y-%m-%d %H:%M:%S<span class="pl-pds">&quot;</span></span>),d<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">Da</span>(b<span class="pl-k">-</span>Sa),e,f<span class="pl-k">=</span>d[qb](),g<span class="pl-k">=</span>d[rb](),</td>
      </tr>
      <tr>
        <td id="L18" class="blob-num js-line-number" data-line-number="18"></td>
        <td id="LC18" class="blob-code js-file-line">h<span class="pl-k">=</span>d[Xa](),i<span class="pl-k">=</span>d[fb](),j<span class="pl-k">=</span>d[gb](),k<span class="pl-k">=</span>E.<span class="pl-sc">lang</span>,l<span class="pl-k">=</span>k.weekdays,d<span class="pl-k">=</span>r({a<span class="pl-k">:</span>l[g].<span class="pl-s3">substr</span>(<span class="pl-c1">0</span>,<span class="pl-c1">3</span>),A<span class="pl-k">:</span>l[g],d<span class="pl-k">:</span>Ia(h),e<span class="pl-k">:</span>h,b<span class="pl-k">:</span>k.shortMonths[i],B<span class="pl-k">:</span>k.months[i],m<span class="pl-k">:</span>Ia(i<span class="pl-k">+</span><span class="pl-c1">1</span>),y<span class="pl-k">:</span>j.<span class="pl-s3">toString</span>().<span class="pl-s3">substr</span>(<span class="pl-c1">2</span>,<span class="pl-c1">2</span>),Y<span class="pl-k">:</span>j,H<span class="pl-k">:</span>Ia(f),I<span class="pl-k">:</span>Ia(f<span class="pl-k">%</span><span class="pl-c1">12</span><span class="pl-k">||</span><span class="pl-c1">12</span>),l<span class="pl-k">:</span>f<span class="pl-k">%</span><span class="pl-c1">12</span><span class="pl-k">||</span><span class="pl-c1">12</span>,M<span class="pl-k">:</span>Ia(d[pb]()),p<span class="pl-k">:</span>f<span class="pl-k">&lt;</span><span class="pl-c1">12</span><span class="pl-k">?</span><span class="pl-s1"><span class="pl-pds">&quot;</span>AM<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s1"><span class="pl-pds">&quot;</span>PM<span class="pl-pds">&quot;</span></span>,P<span class="pl-k">:</span>f<span class="pl-k">&lt;</span><span class="pl-c1">12</span><span class="pl-k">?</span><span class="pl-s1"><span class="pl-pds">&quot;</span>am<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s1"><span class="pl-pds">&quot;</span>pm<span class="pl-pds">&quot;</span></span>,S<span class="pl-k">:</span>Ia(d.<span class="pl-s3">getSeconds</span>()),L<span class="pl-k">:</span>Ia(v(b<span class="pl-k">%</span><span class="pl-c1">1E3</span>),<span class="pl-c1">3</span>)},K.dateFormats);<span class="pl-k">for</span>(e <span class="pl-k">in</span> d)<span class="pl-k">for</span>(;a.<span class="pl-s3">indexOf</span>(<span class="pl-s1"><span class="pl-pds">&quot;</span>%<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>e)<span class="pl-k">!==-</span><span class="pl-c1">1</span>;)a<span class="pl-k">=</span>a.<span class="pl-s3">replace</span>(<span class="pl-s1"><span class="pl-pds">&quot;</span>%<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>e,<span class="pl-k">typeof</span> d[e]<span class="pl-k">===</span><span class="pl-s1"><span class="pl-pds">&quot;</span>function<span class="pl-pds">&quot;</span></span><span class="pl-k">?</span>d[e](b)<span class="pl-k">:</span>d[e]);<span class="pl-k">return</span> c<span class="pl-k">?</span>a.<span class="pl-s3">substr</span>(<span class="pl-c1">0</span>,<span class="pl-c1">1</span>).<span class="pl-s3">toUpperCase</span>()<span class="pl-k">+</span>a.<span class="pl-s3">substr</span>(<span class="pl-c1">1</span>)<span class="pl-k">:</span>a};<span class="pl-en">ha</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>,<span class="pl-vpf">b</span>){<span class="pl-s">var</span> c<span class="pl-k">=</span><span class="pl-s1"><span class="pl-pds">&quot;</span>Highcharts error #<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>a<span class="pl-k">+</span><span class="pl-s1"><span class="pl-pds">&quot;</span>: www.highcharts.com/errors/<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span></td>
      </tr>
      <tr>
        <td id="L19" class="blob-num js-line-number" data-line-number="19"></td>
        <td id="LC19" class="blob-code js-file-line">a;<span class="pl-k">if</span>(b)<span class="pl-k">throw</span> c;G.<span class="pl-en">console</span><span class="pl-k">&amp;&amp;</span><span class="pl-en">console</span><span class="pl-s3">.log</span>(c)};A<span class="pl-k">=</span>{millisecond<span class="pl-k">:</span><span class="pl-c1">1</span>,second<span class="pl-k">:</span><span class="pl-c1">1E3</span>,minute<span class="pl-k">:</span><span class="pl-c1">6E4</span>,hour<span class="pl-k">:</span><span class="pl-c1">36E5</span>,day<span class="pl-k">:</span><span class="pl-c1">864E5</span>,week<span class="pl-k">:</span><span class="pl-c1">6048E5</span>,month<span class="pl-k">:</span><span class="pl-c1">26784E5</span>,year<span class="pl-k">:</span><span class="pl-c1">31556952E3</span>};vb<span class="pl-k">=</span>{<span class="pl-en">init</span>:<span class="pl-st">function</span>(<span class="pl-vpf">a</span>,<span class="pl-vpf">b</span>,<span class="pl-vpf">c</span>){<span class="pl-s">var</span> b<span class="pl-k">=</span>b<span class="pl-k">||</span><span class="pl-s1"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>,d<span class="pl-k">=</span>a.shift,e<span class="pl-k">=</span>b.<span class="pl-s3">indexOf</span>(<span class="pl-s1"><span class="pl-pds">&quot;</span>C<span class="pl-pds">&quot;</span></span>)<span class="pl-k">&gt;-</span><span class="pl-c1">1</span>,f<span class="pl-k">=</span>e<span class="pl-k">?</span><span class="pl-c1">7</span><span class="pl-k">:</span><span class="pl-c1">3</span>,g,b<span class="pl-k">=</span>b.<span class="pl-s3">split</span>(<span class="pl-s1"><span class="pl-pds">&quot;</span> <span class="pl-pds">&quot;</span></span>),c<span class="pl-k">=</span>[].<span class="pl-s3">concat</span>(c),h,i,<span class="pl-en">j</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){<span class="pl-k">for</span>(g<span class="pl-k">=</span>a.<span class="pl-sc">length</span>;g<span class="pl-k">--</span>;)a[g]<span class="pl-k">===</span><span class="pl-s1"><span class="pl-pds">&quot;</span>M<span class="pl-pds">&quot;</span></span><span class="pl-k">&amp;&amp;</span>a.<span class="pl-s3">splice</span>(g<span class="pl-k">+</span><span class="pl-c1">1</span>,<span class="pl-c1">0</span>,a[g<span class="pl-k">+</span><span class="pl-c1">1</span>],a[g<span class="pl-k">+</span><span class="pl-c1">2</span>],a[g<span class="pl-k">+</span><span class="pl-c1">1</span>],a[g<span class="pl-k">+</span><span class="pl-c1">2</span>])};e<span class="pl-k">&amp;&amp;</span>(j(b),j(c));a.isArea<span class="pl-k">&amp;&amp;</span>(h<span class="pl-k">=</span>b.<span class="pl-s3">splice</span>(b.<span class="pl-sc">length</span><span class="pl-k">-</span><span class="pl-c1">6</span>,<span class="pl-c1">6</span>),i<span class="pl-k">=</span>c.<span class="pl-s3">splice</span>(c.<span class="pl-sc">length</span><span class="pl-k">-</span><span class="pl-c1">6</span>,<span class="pl-c1">6</span>));<span class="pl-k">if</span>(d<span class="pl-k">&lt;=</span>c.<span class="pl-sc">length</span>/f<span class="pl-k">&amp;&amp;</span>b.<span class="pl-sc">length</span><span class="pl-k">===</span>c.<span class="pl-sc">length</span>)<span class="pl-k">for</span>(;d<span class="pl-k">--</span>;)c<span class="pl-k">=</span>[].<span class="pl-s3">concat</span>(c).<span class="pl-s3">splice</span>(<span class="pl-c1">0</span>,f).<span class="pl-s3">concat</span>(c);</td>
      </tr>
      <tr>
        <td id="L20" class="blob-num js-line-number" data-line-number="20"></td>
        <td id="LC20" class="blob-code js-file-line">a.shift<span class="pl-k">=</span><span class="pl-c1">0</span>;<span class="pl-k">if</span>(b.<span class="pl-sc">length</span>)<span class="pl-k">for</span>(a<span class="pl-k">=</span>c.<span class="pl-sc">length</span>;b.<span class="pl-sc">length</span><span class="pl-k">&lt;</span>a;)d<span class="pl-k">=</span>[].<span class="pl-s3">concat</span>(b).<span class="pl-s3">splice</span>(b.<span class="pl-sc">length</span><span class="pl-k">-</span>f,f),e<span class="pl-k">&amp;&amp;</span>(d[f<span class="pl-k">-</span><span class="pl-c1">6</span>]<span class="pl-k">=</span>d[f<span class="pl-k">-</span><span class="pl-c1">2</span>],d[f<span class="pl-k">-</span><span class="pl-c1">5</span>]<span class="pl-k">=</span>d[f<span class="pl-k">-</span><span class="pl-c1">1</span>]),b<span class="pl-k">=</span>b.<span class="pl-s3">concat</span>(d);h<span class="pl-k">&amp;&amp;</span>(b<span class="pl-k">=</span>b.<span class="pl-s3">concat</span>(h),c<span class="pl-k">=</span>c.<span class="pl-s3">concat</span>(i));<span class="pl-k">return</span>[b,c]},<span class="pl-en">step</span>:<span class="pl-st">function</span>(<span class="pl-vpf">a</span>,<span class="pl-vpf">b</span>,<span class="pl-vpf">c</span>,<span class="pl-vpf">d</span>){<span class="pl-s">var</span> e<span class="pl-k">=</span>[],f<span class="pl-k">=</span>a.<span class="pl-sc">length</span>;<span class="pl-k">if</span>(c<span class="pl-k">===</span><span class="pl-c1">1</span>)e<span class="pl-k">=</span>d;<span class="pl-k">else</span> <span class="pl-k">if</span>(f<span class="pl-k">===</span>b.<span class="pl-sc">length</span><span class="pl-k">&amp;&amp;</span>c<span class="pl-k">&lt;</span><span class="pl-c1">1</span>)<span class="pl-k">for</span>(;f<span class="pl-k">--</span>;)d<span class="pl-k">=</span><span class="pl-s3">parseFloat</span>(a[f]),e[f]<span class="pl-k">=</span><span class="pl-s3">isNaN</span>(d)<span class="pl-k">?</span>a[f]<span class="pl-k">:</span>c<span class="pl-k">*</span><span class="pl-s3">parseFloat</span>(b[f]<span class="pl-k">-</span>d)<span class="pl-k">+</span>d;<span class="pl-k">else</span> e<span class="pl-k">=</span>b;<span class="pl-k">return</span> e}};(<span class="pl-st">function</span>(<span class="pl-vpf">a</span>){G.HighchartsAdapter<span class="pl-k">=</span>G.HighchartsAdapter<span class="pl-k">||</span>a<span class="pl-k">&amp;&amp;</span>{<span class="pl-en">init</span>:<span class="pl-st">function</span>(<span class="pl-vpf">b</span>){<span class="pl-s">var</span> c<span class="pl-k">=</span>a.fx;a.extend(a.easing,{<span class="pl-en">easeOutQuad</span>:<span class="pl-st">function</span>(<span class="pl-vpf">a</span>,<span class="pl-vpf">b</span>,<span class="pl-vpf">c</span>,<span class="pl-vpf">g</span>,<span class="pl-vpf">h</span>){<span class="pl-k">return</span><span class="pl-k">-</span>g<span class="pl-k">*</span>(b<span class="pl-k">/=</span></td>
      </tr>
      <tr>
        <td id="L21" class="blob-num js-line-number" data-line-number="21"></td>
        <td id="LC21" class="blob-code js-file-line">h)<span class="pl-k">*</span>(b<span class="pl-k">-</span><span class="pl-c1">2</span>)<span class="pl-k">+</span>c}});a.each([<span class="pl-s1"><span class="pl-pds">&quot;</span>cur<span class="pl-pds">&quot;</span></span>,<span class="pl-s1"><span class="pl-pds">&quot;</span>_default<span class="pl-pds">&quot;</span></span>,<span class="pl-s1"><span class="pl-pds">&quot;</span>width<span class="pl-pds">&quot;</span></span>,<span class="pl-s1"><span class="pl-pds">&quot;</span>height<span class="pl-pds">&quot;</span></span>,<span class="pl-s1"><span class="pl-pds">&quot;</span>opacity<span class="pl-pds">&quot;</span></span>],<span class="pl-st">function</span>(<span class="pl-vpf">b</span>,<span class="pl-vpf">e</span>){<span class="pl-s">var</span> f<span class="pl-k">=</span>c.step,g;e<span class="pl-k">===</span><span class="pl-s1"><span class="pl-pds">&quot;</span>cur<span class="pl-pds">&quot;</span></span><span class="pl-k">?</span>f<span class="pl-k">=</span>c.<span class="pl-sc">prototype</span><span class="pl-k">:</span>e<span class="pl-k">===</span><span class="pl-s1"><span class="pl-pds">&quot;</span>_default<span class="pl-pds">&quot;</span></span><span class="pl-k">&amp;&amp;</span>a.Tween<span class="pl-k">&amp;&amp;</span>(f<span class="pl-k">=</span>a.Tween.propHooks[e],e<span class="pl-k">=</span><span class="pl-s1"><span class="pl-pds">&quot;</span>set<span class="pl-pds">&quot;</span></span>);(g<span class="pl-k">=</span>f[e])<span class="pl-k">&amp;&amp;</span>(f[e]<span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){<span class="pl-s">var</span> c,a<span class="pl-k">=</span>b<span class="pl-k">?</span>a<span class="pl-k">:</span><span class="pl-v">this</span>;<span class="pl-k">if</span>(a.prop<span class="pl-k">!==</span><span class="pl-s1"><span class="pl-pds">&quot;</span>align<span class="pl-pds">&quot;</span></span>)<span class="pl-k">return</span> c<span class="pl-k">=</span>a.elem,c.attr<span class="pl-k">?</span>c.attr(a.prop,e<span class="pl-k">===</span><span class="pl-s1"><span class="pl-pds">&quot;</span>cur<span class="pl-pds">&quot;</span></span><span class="pl-k">?</span>u<span class="pl-k">:</span>a.now)<span class="pl-k">:</span>g.<span class="pl-s3">apply</span>(<span class="pl-v">this</span>,arguments)})});Na(a.cssHooks.opacity,<span class="pl-s1"><span class="pl-pds">&quot;</span>get<span class="pl-pds">&quot;</span></span>,<span class="pl-st">function</span>(<span class="pl-vpf">a</span>,<span class="pl-vpf">b</span>,<span class="pl-vpf">c</span>){<span class="pl-k">return</span> b.attr<span class="pl-k">?</span>b.opacity<span class="pl-k">||</span><span class="pl-c1">0</span><span class="pl-k">:</span>a.<span class="pl-s3">call</span>(<span class="pl-v">this</span>,b,c)});<span class="pl-v">this</span>.addAnimSetter(<span class="pl-s1"><span class="pl-pds">&quot;</span>d<span class="pl-pds">&quot;</span></span>,<span class="pl-st">function</span>(<span class="pl-vpf">a</span>){<span class="pl-s">var</span> c<span class="pl-k">=</span>a.elem,f;<span class="pl-k">if</span>(<span class="pl-k">!</span>a.started)f<span class="pl-k">=</span>b.init(c,c.d,c.toD),</td>
      </tr>
      <tr>
        <td id="L22" class="blob-num js-line-number" data-line-number="22"></td>
        <td id="LC22" class="blob-code js-file-line">a.<span class="pl-sc">start</span><span class="pl-k">=</span>f[<span class="pl-c1">0</span>],a.end<span class="pl-k">=</span>f[<span class="pl-c1">1</span>],a.started<span class="pl-k">=!</span><span class="pl-c1">0</span>;c.attr(<span class="pl-s1"><span class="pl-pds">&quot;</span>d<span class="pl-pds">&quot;</span></span>,b.step(a.<span class="pl-sc">start</span>,a.end,a.pos,c.toD))});<span class="pl-v">this</span>.each<span class="pl-k">=</span><span class="pl-s3">Array</span>.<span class="pl-sc">prototype</span>.forEach<span class="pl-k">?</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>,<span class="pl-vpf">b</span>){<span class="pl-k">return</span> <span class="pl-s3">Array</span>.<span class="pl-sc">prototype</span>.forEach.<span class="pl-s3">call</span>(a,b)}<span class="pl-k">:</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>,<span class="pl-vpf">b</span>){<span class="pl-s">var</span> c,g<span class="pl-k">=</span>a.<span class="pl-sc">length</span>;<span class="pl-k">for</span>(c<span class="pl-k">=</span><span class="pl-c1">0</span>;c<span class="pl-k">&lt;</span>g;c<span class="pl-k">++</span>)<span class="pl-k">if</span>(b.<span class="pl-s3">call</span>(a[c],a[c],c,a)<span class="pl-k">===!</span><span class="pl-c1">1</span>)<span class="pl-k">return</span> c};<span class="pl-s3">a.fn</span>.<span class="pl-en">highcharts</span><span class="pl-k">=</span><span class="pl-st">function</span>(){<span class="pl-s">var</span> a<span class="pl-k">=</span><span class="pl-s1"><span class="pl-pds">&quot;</span>Chart<span class="pl-pds">&quot;</span></span>,b<span class="pl-k">=</span>arguments,c,g;<span class="pl-k">if</span>(<span class="pl-v">this</span>[<span class="pl-c1">0</span>]){Ga(b[<span class="pl-c1">0</span>])<span class="pl-k">&amp;&amp;</span>(a<span class="pl-k">=</span>b[<span class="pl-c1">0</span>],b<span class="pl-k">=</span><span class="pl-s3">Array</span>.<span class="pl-sc">prototype</span>.slice.<span class="pl-s3">call</span>(b,<span class="pl-c1">1</span>));c<span class="pl-k">=</span>b[<span class="pl-c1">0</span>];<span class="pl-k">if</span>(c<span class="pl-k">!==</span>u)c.chart<span class="pl-k">=</span>c.chart<span class="pl-k">||</span>{},c.chart.renderTo<span class="pl-k">=</span><span class="pl-v">this</span>[<span class="pl-c1">0</span>],<span class="pl-k">new</span> <span class="pl-en">K</span>[a](c,b[<span class="pl-c1">1</span>]),g<span class="pl-k">=</span><span class="pl-v">this</span>;c<span class="pl-k">===</span>u<span class="pl-k">&amp;&amp;</span>(g<span class="pl-k">=</span>W[F(<span class="pl-v">this</span>[<span class="pl-c1">0</span>],<span class="pl-s1"><span class="pl-pds">&quot;</span>data-highcharts-chart<span class="pl-pds">&quot;</span></span>)])}<span class="pl-k">return</span> g}},</td>
      </tr>
      <tr>
        <td id="L23" class="blob-num js-line-number" data-line-number="23"></td>
        <td id="LC23" class="blob-code js-file-line"><span class="pl-en">addAnimSetter</span>:<span class="pl-st">function</span>(<span class="pl-vpf">b</span>,<span class="pl-vpf">c</span>){a.Tween<span class="pl-k">?</span>a.Tween.propHooks[b]<span class="pl-k">=</span>{set<span class="pl-k">:</span>c}<span class="pl-k">:</span>a.fx.step[b]<span class="pl-k">=</span>c},getScript<span class="pl-k">:</span>a.getScript,inArray<span class="pl-k">:</span>a.inArray,<span class="pl-en">adapterRun</span>:<span class="pl-st">function</span>(<span class="pl-vpf">b</span>,<span class="pl-vpf">c</span>){<span class="pl-k">return</span> a(b)[c]()},grep<span class="pl-k">:</span>a.grep,<span class="pl-en">map</span>:<span class="pl-st">function</span>(<span class="pl-vpf">a</span>,<span class="pl-vpf">c</span>){<span class="pl-k">for</span>(<span class="pl-s">var</span> d<span class="pl-k">=</span>[],e<span class="pl-k">=</span><span class="pl-c1">0</span>,f<span class="pl-k">=</span>a.<span class="pl-sc">length</span>;e<span class="pl-k">&lt;</span>f;e<span class="pl-k">++</span>)d[e]<span class="pl-k">=</span>c.<span class="pl-s3">call</span>(a[e],a[e],e,a);<span class="pl-k">return</span> d},<span class="pl-en">offset</span>:<span class="pl-st">function</span>(<span class="pl-vpf">b</span>){<span class="pl-k">return</span> a(b).offset()},<span class="pl-en">addEvent</span>:<span class="pl-st">function</span>(<span class="pl-vpf">b</span>,<span class="pl-vpf">c</span>,<span class="pl-vpf">d</span>){a(b).bind(c,d)},<span class="pl-en">removeEvent</span>:<span class="pl-st">function</span>(<span class="pl-vpf">b</span>,<span class="pl-vpf">c</span>,<span class="pl-vpf">d</span>){<span class="pl-s">var</span> e<span class="pl-k">=</span>x.removeEventListener<span class="pl-k">?</span><span class="pl-s1"><span class="pl-pds">&quot;</span>removeEventListener<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s1"><span class="pl-pds">&quot;</span>detachEvent<span class="pl-pds">&quot;</span></span>;x[e]<span class="pl-k">&amp;&amp;</span>b<span class="pl-k">&amp;&amp;!</span>b[e]<span class="pl-k">&amp;&amp;</span>(b[e]<span class="pl-k">=</span><span class="pl-st">function</span>(){});a(b).unbind(c,d)},<span class="pl-en">fireEvent</span>:<span class="pl-st">function</span>(<span class="pl-vpf">b</span>,</td>
      </tr>
      <tr>
        <td id="L24" class="blob-num js-line-number" data-line-number="24"></td>
        <td id="LC24" class="blob-code js-file-line"><span class="pl-vpf">c</span>,<span class="pl-vpf">d</span>,<span class="pl-vpf">e</span>){<span class="pl-s">var</span> f<span class="pl-k">=</span>a.Event(c),g<span class="pl-k">=</span><span class="pl-s1"><span class="pl-pds">&quot;</span>detached<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>c,h;<span class="pl-k">!</span>Aa<span class="pl-k">&amp;&amp;</span>d<span class="pl-k">&amp;&amp;</span>(<span class="pl-k">delete</span> d.<span class="pl-sc">layerX</span>,<span class="pl-k">delete</span> d.layerY,<span class="pl-k">delete</span> d.returnValue);r(f,d);b[c]<span class="pl-k">&amp;&amp;</span>(b[g]<span class="pl-k">=</span>b[c],b[c]<span class="pl-k">=</span><span class="pl-c1">null</span>);a.each([<span class="pl-s1"><span class="pl-pds">&quot;</span>preventDefault<span class="pl-pds">&quot;</span></span>,<span class="pl-s1"><span class="pl-pds">&quot;</span>stopPropagation<span class="pl-pds">&quot;</span></span>],<span class="pl-st">function</span>(<span class="pl-vpf">a</span>,<span class="pl-vpf">b</span>){<span class="pl-s">var</span> c<span class="pl-k">=</span>f[b];f[b]<span class="pl-k">=</span><span class="pl-st">function</span>(){<span class="pl-k">try</span>{c.<span class="pl-s3">call</span>(f)}<span class="pl-k">catch</span>(a){b<span class="pl-k">===</span><span class="pl-s1"><span class="pl-pds">&quot;</span>preventDefault<span class="pl-pds">&quot;</span></span><span class="pl-k">&amp;&amp;</span>(h<span class="pl-k">=!</span><span class="pl-c1">0</span>)}}});a(b).trigger(f);b[g]<span class="pl-k">&amp;&amp;</span>(b[c]<span class="pl-k">=</span>b[g],b[g]<span class="pl-k">=</span><span class="pl-c1">null</span>);e<span class="pl-k">&amp;&amp;!</span>f.isDefaultPrevented()<span class="pl-k">&amp;&amp;!</span>h<span class="pl-k">&amp;&amp;</span>e(f)},<span class="pl-en">washMouseEvent</span>:<span class="pl-st">function</span>(<span class="pl-vpf">a</span>){<span class="pl-s">var</span> c<span class="pl-k">=</span>a.originalEvent<span class="pl-k">||</span>a;<span class="pl-k">if</span>(c.<span class="pl-sc">pageX</span><span class="pl-k">===</span>u)c.<span class="pl-sc">pageX</span><span class="pl-k">=</span>a.<span class="pl-sc">pageX</span>,c.<span class="pl-sc">pageY</span><span class="pl-k">=</span>a.<span class="pl-sc">pageY</span>;<span class="pl-k">return</span> c},<span class="pl-en">animate</span>:<span class="pl-st">function</span>(<span class="pl-vpf">b</span>,<span class="pl-vpf">c</span>,<span class="pl-vpf">d</span>){<span class="pl-s">var</span> e<span class="pl-k">=</span></td>
      </tr>
      <tr>
        <td id="L25" class="blob-num js-line-number" data-line-number="25"></td>
        <td id="LC25" class="blob-code js-file-line">a(b);<span class="pl-k">if</span>(<span class="pl-k">!</span>b.<span class="pl-sc">style</span>)b.<span class="pl-sc">style</span><span class="pl-k">=</span>{};<span class="pl-k">if</span>(c.d)b.toD<span class="pl-k">=</span>c.d,c.d<span class="pl-k">=</span><span class="pl-c1">1</span>;e.<span class="pl-s3">stop</span>();c.opacity<span class="pl-k">!==</span>u<span class="pl-k">&amp;&amp;</span>b.attr<span class="pl-k">&amp;&amp;</span>(c.opacity<span class="pl-k">+=</span><span class="pl-s1"><span class="pl-pds">&quot;</span>px<span class="pl-pds">&quot;</span></span>);b.hasAnim<span class="pl-k">=</span><span class="pl-c1">1</span>;e.animate(c,d)},<span class="pl-en">stop</span>:<span class="pl-st">function</span>(<span class="pl-vpf">b</span>){b.hasAnim<span class="pl-k">&amp;&amp;</span>a(b).<span class="pl-s3">stop</span>()}}})(G.jQuery);<span class="pl-s">var</span> T<span class="pl-k">=</span>G.HighchartsAdapter,M<span class="pl-k">=</span>T<span class="pl-k">||</span>{};T<span class="pl-k">&amp;&amp;</span>T.init.<span class="pl-s3">call</span>(T,vb);<span class="pl-s">var</span> ib<span class="pl-k">=</span>M.adapterRun,Rb<span class="pl-k">=</span>M.getScript,Ma<span class="pl-k">=</span>M.inArray,q<span class="pl-k">=</span>M.each,wb<span class="pl-k">=</span>M.grep,Sb<span class="pl-k">=</span>M.offset,Va<span class="pl-k">=</span>M.map,N<span class="pl-k">=</span>M.addEvent,X<span class="pl-k">=</span>M.removeEvent,I<span class="pl-k">=</span>M.fireEvent,Tb<span class="pl-k">=</span>M.washMouseEvent,jb<span class="pl-k">=</span>M.animate,bb<span class="pl-k">=</span>M.stop,M<span class="pl-k">=</span>{enabled<span class="pl-k">:!</span><span class="pl-c1">0</span>,x<span class="pl-k">:</span><span class="pl-c1">0</span>,y<span class="pl-k">:</span><span class="pl-c1">15</span>,style<span class="pl-k">:</span>{color<span class="pl-k">:</span><span class="pl-s1"><span class="pl-pds">&quot;</span>#606060<span class="pl-pds">&quot;</span></span>,cursor<span class="pl-k">:</span><span class="pl-s1"><span class="pl-pds">&quot;</span>default<span class="pl-pds">&quot;</span></span>,fontSize<span class="pl-k">:</span><span class="pl-s1"><span class="pl-pds">&quot;</span>11px<span class="pl-pds">&quot;</span></span>}};E<span class="pl-k">=</span>{colors<span class="pl-k">:</span><span class="pl-s1"><span class="pl-pds">&quot;</span>#7cb5ec,#434348,#90ed7d,#f7a35c,#8085e9,#f15c80,#e4d354,#8085e8,#8d4653,#91e8e1<span class="pl-pds">&quot;</span></span>.<span class="pl-s3">split</span>(<span class="pl-s1"><span class="pl-pds">&quot;</span>,<span class="pl-pds">&quot;</span></span>),</td>
      </tr>
      <tr>
        <td id="L26" class="blob-num js-line-number" data-line-number="26"></td>
        <td id="LC26" class="blob-code js-file-line">symbols<span class="pl-k">:</span>[<span class="pl-s1"><span class="pl-pds">&quot;</span>circle<span class="pl-pds">&quot;</span></span>,<span class="pl-s1"><span class="pl-pds">&quot;</span>diamond<span class="pl-pds">&quot;</span></span>,<span class="pl-s1"><span class="pl-pds">&quot;</span>square<span class="pl-pds">&quot;</span></span>,<span class="pl-s1"><span class="pl-pds">&quot;</span>triangle<span class="pl-pds">&quot;</span></span>,<span class="pl-s1"><span class="pl-pds">&quot;</span>triangle-down<span class="pl-pds">&quot;</span></span>],lang<span class="pl-k">:</span>{loading<span class="pl-k">:</span><span class="pl-s1"><span class="pl-pds">&quot;</span>Loading...<span class="pl-pds">&quot;</span></span>,months<span class="pl-k">:</span><span class="pl-s1"><span class="pl-pds">&quot;</span>January,February,March,April,May,June,July,August,September,October,November,December<span class="pl-pds">&quot;</span></span>.<span class="pl-s3">split</span>(<span class="pl-s1"><span class="pl-pds">&quot;</span>,<span class="pl-pds">&quot;</span></span>),shortMonths<span class="pl-k">:</span><span class="pl-s1"><span class="pl-pds">&quot;</span>Jan,Feb,Mar,Apr,May,Jun,Jul,Aug,Sep,Oct,Nov,Dec<span class="pl-pds">&quot;</span></span>.<span class="pl-s3">split</span>(<span class="pl-s1"><span class="pl-pds">&quot;</span>,<span class="pl-pds">&quot;</span></span>),weekdays<span class="pl-k">:</span><span class="pl-s1"><span class="pl-pds">&quot;</span>Sunday,Monday,Tuesday,Wednesday,Thursday,Friday,Saturday<span class="pl-pds">&quot;</span></span>.<span class="pl-s3">split</span>(<span class="pl-s1"><span class="pl-pds">&quot;</span>,<span class="pl-pds">&quot;</span></span>),decimalPoint<span class="pl-k">:</span><span class="pl-s1"><span class="pl-pds">&quot;</span>.<span class="pl-pds">&quot;</span></span>,numericSymbols<span class="pl-k">:</span><span class="pl-s1"><span class="pl-pds">&quot;</span>k,M,G,T,P,E<span class="pl-pds">&quot;</span></span>.<span class="pl-s3">split</span>(<span class="pl-s1"><span class="pl-pds">&quot;</span>,<span class="pl-pds">&quot;</span></span>),resetZoom<span class="pl-k">:</span><span class="pl-s1"><span class="pl-pds">&quot;</span>Reset zoom<span class="pl-pds">&quot;</span></span>,resetZoomTitle<span class="pl-k">:</span><span class="pl-s1"><span class="pl-pds">&quot;</span>Reset zoom level 1:1<span class="pl-pds">&quot;</span></span>,thousandsSep<span class="pl-k">:</span><span class="pl-s1"><span class="pl-pds">&quot;</span>,<span class="pl-pds">&quot;</span></span>},global<span class="pl-k">:</span>{useUTC<span class="pl-k">:!</span><span class="pl-c1">0</span>,</td>
      </tr>
      <tr>
        <td id="L27" class="blob-num js-line-number" data-line-number="27"></td>
        <td id="LC27" class="blob-code js-file-line">canvasToolsURL<span class="pl-k">:</span><span class="pl-s1"><span class="pl-pds">&quot;</span>http://code.highcharts.com/4.0.4/modules/canvas-tools.js<span class="pl-pds">&quot;</span></span>,VMLRadialGradientURL<span class="pl-k">:</span><span class="pl-s1"><span class="pl-pds">&quot;</span>http://code.highcharts.com/4.0.4/gfx/vml-radial-gradient.png<span class="pl-pds">&quot;</span></span>},chart<span class="pl-k">:</span>{borderColor<span class="pl-k">:</span><span class="pl-s1"><span class="pl-pds">&quot;</span>#4572A7<span class="pl-pds">&quot;</span></span>,borderRadius<span class="pl-k">:</span><span class="pl-c1">0</span>,defaultSeriesType<span class="pl-k">:</span><span class="pl-s1"><span class="pl-pds">&quot;</span>line<span class="pl-pds">&quot;</span></span>,ignoreHiddenSeries<span class="pl-k">:!</span><span class="pl-c1">0</span>,spacing<span class="pl-k">:</span>[<span class="pl-c1">10</span>,<span class="pl-c1">10</span>,<span class="pl-c1">15</span>,<span class="pl-c1">10</span>],backgroundColor<span class="pl-k">:</span><span class="pl-s1"><span class="pl-pds">&quot;</span>#FFFFFF<span class="pl-pds">&quot;</span></span>,plotBorderColor<span class="pl-k">:</span><span class="pl-s1"><span class="pl-pds">&quot;</span>#C0C0C0<span class="pl-pds">&quot;</span></span>,resetZoomButton<span class="pl-k">:</span>{theme<span class="pl-k">:</span>{zIndex<span class="pl-k">:</span><span class="pl-c1">20</span>},position<span class="pl-k">:</span>{align<span class="pl-k">:</span><span class="pl-s1"><span class="pl-pds">&quot;</span>right<span class="pl-pds">&quot;</span></span>,x<span class="pl-k">:-</span><span class="pl-c1">10</span>,y<span class="pl-k">:</span><span class="pl-c1">10</span>}}},title<span class="pl-k">:</span>{text<span class="pl-k">:</span><span class="pl-s1"><span class="pl-pds">&quot;</span>Chart title<span class="pl-pds">&quot;</span></span>,align<span class="pl-k">:</span><span class="pl-s1"><span class="pl-pds">&quot;</span>center<span class="pl-pds">&quot;</span></span>,margin<span class="pl-k">:</span><span class="pl-c1">15</span>,style<span class="pl-k">:</span>{color<span class="pl-k">:</span><span class="pl-s1"><span class="pl-pds">&quot;</span>#333333<span class="pl-pds">&quot;</span></span>,fontSize<span class="pl-k">:</span><span class="pl-s1"><span class="pl-pds">&quot;</span>18px<span class="pl-pds">&quot;</span></span>}},subtitle<span class="pl-k">:</span>{text<span class="pl-k">:</span><span class="pl-s1"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>,</td>
      </tr>
      <tr>
        <td id="L28" class="blob-num js-line-number" data-line-number="28"></td>
        <td id="LC28" class="blob-code js-file-line">align<span class="pl-k">:</span><span class="pl-s1"><span class="pl-pds">&quot;</span>center<span class="pl-pds">&quot;</span></span>,style<span class="pl-k">:</span>{color<span class="pl-k">:</span><span class="pl-s1"><span class="pl-pds">&quot;</span>#555555<span class="pl-pds">&quot;</span></span>}},plotOptions<span class="pl-k">:</span>{line<span class="pl-k">:</span>{allowPointSelect<span class="pl-k">:!</span><span class="pl-c1">1</span>,showCheckbox<span class="pl-k">:!</span><span class="pl-c1">1</span>,animation<span class="pl-k">:</span>{duration<span class="pl-k">:</span><span class="pl-c1">1E3</span>},events<span class="pl-k">:</span>{},lineWidth<span class="pl-k">:</span><span class="pl-c1">2</span>,marker<span class="pl-k">:</span>{lineWidth<span class="pl-k">:</span><span class="pl-c1">0</span>,radius<span class="pl-k">:</span><span class="pl-c1">4</span>,lineColor<span class="pl-k">:</span><span class="pl-s1"><span class="pl-pds">&quot;</span>#FFFFFF<span class="pl-pds">&quot;</span></span>,states<span class="pl-k">:</span>{hover<span class="pl-k">:</span>{enabled<span class="pl-k">:!</span><span class="pl-c1">0</span>,lineWidthPlus<span class="pl-k">:</span><span class="pl-c1">1</span>,radiusPlus<span class="pl-k">:</span><span class="pl-c1">2</span>},select<span class="pl-k">:</span>{fillColor<span class="pl-k">:</span><span class="pl-s1"><span class="pl-pds">&quot;</span>#FFFFFF<span class="pl-pds">&quot;</span></span>,lineColor<span class="pl-k">:</span><span class="pl-s1"><span class="pl-pds">&quot;</span>#000000<span class="pl-pds">&quot;</span></span>,lineWidth<span class="pl-k">:</span><span class="pl-c1">2</span>}}},point<span class="pl-k">:</span>{events<span class="pl-k">:</span>{}},dataLabels<span class="pl-k">:</span>w(M,{align<span class="pl-k">:</span><span class="pl-s1"><span class="pl-pds">&quot;</span>center<span class="pl-pds">&quot;</span></span>,enabled<span class="pl-k">:!</span><span class="pl-c1">1</span>,<span class="pl-en">formatter</span>:<span class="pl-st">function</span>(){<span class="pl-k">return</span> <span class="pl-v">this</span>.<span class="pl-sc">y</span><span class="pl-k">===</span><span class="pl-c1">null</span><span class="pl-k">?</span><span class="pl-s1"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span><span class="pl-k">:</span>Ba(<span class="pl-v">this</span>.<span class="pl-sc">y</span>,<span class="pl-k">-</span><span class="pl-c1">1</span>)},verticalAlign<span class="pl-k">:</span><span class="pl-s1"><span class="pl-pds">&quot;</span>bottom<span class="pl-pds">&quot;</span></span>,y<span class="pl-k">:</span><span class="pl-c1">0</span>}),cropThreshold<span class="pl-k">:</span><span class="pl-c1">300</span>,pointRange<span class="pl-k">:</span><span class="pl-c1">0</span>,states<span class="pl-k">:</span>{hover<span class="pl-k">:</span>{lineWidthPlus<span class="pl-k">:</span><span class="pl-c1">1</span>,</td>
      </tr>
      <tr>
        <td id="L29" class="blob-num js-line-number" data-line-number="29"></td>
        <td id="LC29" class="blob-code js-file-line">marker<span class="pl-k">:</span>{},halo<span class="pl-k">:</span>{size<span class="pl-k">:</span><span class="pl-c1">10</span>,opacity<span class="pl-k">:</span><span class="pl-c1">0.25</span>}},select<span class="pl-k">:</span>{marker<span class="pl-k">:</span>{}}},stickyTracking<span class="pl-k">:!</span><span class="pl-c1">0</span>,turboThreshold<span class="pl-k">:</span><span class="pl-c1">1E3</span>}},labels<span class="pl-k">:</span>{style<span class="pl-k">:</span>{position<span class="pl-k">:</span><span class="pl-s1"><span class="pl-pds">&quot;</span>absolute<span class="pl-pds">&quot;</span></span>,color<span class="pl-k">:</span><span class="pl-s1"><span class="pl-pds">&quot;</span>#3E576F<span class="pl-pds">&quot;</span></span>}},legend<span class="pl-k">:</span>{enabled<span class="pl-k">:!</span><span class="pl-c1">0</span>,align<span class="pl-k">:</span><span class="pl-s1"><span class="pl-pds">&quot;</span>center<span class="pl-pds">&quot;</span></span>,layout<span class="pl-k">:</span><span class="pl-s1"><span class="pl-pds">&quot;</span>horizontal<span class="pl-pds">&quot;</span></span>,<span class="pl-en">labelFormatter</span>:<span class="pl-st">function</span>(){<span class="pl-k">return</span> <span class="pl-v">this</span>.<span class="pl-sc">name</span>},borderColor<span class="pl-k">:</span><span class="pl-s1"><span class="pl-pds">&quot;</span>#909090<span class="pl-pds">&quot;</span></span>,borderRadius<span class="pl-k">:</span><span class="pl-c1">0</span>,navigation<span class="pl-k">:</span>{activeColor<span class="pl-k">:</span><span class="pl-s1"><span class="pl-pds">&quot;</span>#274b6d<span class="pl-pds">&quot;</span></span>,inactiveColor<span class="pl-k">:</span><span class="pl-s1"><span class="pl-pds">&quot;</span>#CCC<span class="pl-pds">&quot;</span></span>},shadow<span class="pl-k">:!</span><span class="pl-c1">1</span>,itemStyle<span class="pl-k">:</span>{color<span class="pl-k">:</span><span class="pl-s1"><span class="pl-pds">&quot;</span>#333333<span class="pl-pds">&quot;</span></span>,fontSize<span class="pl-k">:</span><span class="pl-s1"><span class="pl-pds">&quot;</span>12px<span class="pl-pds">&quot;</span></span>,fontWeight<span class="pl-k">:</span><span class="pl-s1"><span class="pl-pds">&quot;</span>bold<span class="pl-pds">&quot;</span></span>},itemHoverStyle<span class="pl-k">:</span>{color<span class="pl-k">:</span><span class="pl-s1"><span class="pl-pds">&quot;</span>#000<span class="pl-pds">&quot;</span></span>},itemHiddenStyle<span class="pl-k">:</span>{color<span class="pl-k">:</span><span class="pl-s1"><span class="pl-pds">&quot;</span>#CCC<span class="pl-pds">&quot;</span></span>},itemCheckboxStyle<span class="pl-k">:</span>{position<span class="pl-k">:</span><span class="pl-s1"><span class="pl-pds">&quot;</span>absolute<span class="pl-pds">&quot;</span></span>,</td>
      </tr>
      <tr>
        <td id="L30" class="blob-num js-line-number" data-line-number="30"></td>
        <td id="LC30" class="blob-code js-file-line">width<span class="pl-k">:</span><span class="pl-s1"><span class="pl-pds">&quot;</span>13px<span class="pl-pds">&quot;</span></span>,height<span class="pl-k">:</span><span class="pl-s1"><span class="pl-pds">&quot;</span>13px<span class="pl-pds">&quot;</span></span>},symbolPadding<span class="pl-k">:</span><span class="pl-c1">5</span>,verticalAlign<span class="pl-k">:</span><span class="pl-s1"><span class="pl-pds">&quot;</span>bottom<span class="pl-pds">&quot;</span></span>,x<span class="pl-k">:</span><span class="pl-c1">0</span>,y<span class="pl-k">:</span><span class="pl-c1">0</span>,title<span class="pl-k">:</span>{style<span class="pl-k">:</span>{fontWeight<span class="pl-k">:</span><span class="pl-s1"><span class="pl-pds">&quot;</span>bold<span class="pl-pds">&quot;</span></span>}}},loading<span class="pl-k">:</span>{labelStyle<span class="pl-k">:</span>{fontWeight<span class="pl-k">:</span><span class="pl-s1"><span class="pl-pds">&quot;</span>bold<span class="pl-pds">&quot;</span></span>,position<span class="pl-k">:</span><span class="pl-s1"><span class="pl-pds">&quot;</span>relative<span class="pl-pds">&quot;</span></span>,top<span class="pl-k">:</span><span class="pl-s1"><span class="pl-pds">&quot;</span>45%<span class="pl-pds">&quot;</span></span>},style<span class="pl-k">:</span>{position<span class="pl-k">:</span><span class="pl-s1"><span class="pl-pds">&quot;</span>absolute<span class="pl-pds">&quot;</span></span>,backgroundColor<span class="pl-k">:</span><span class="pl-s1"><span class="pl-pds">&quot;</span>white<span class="pl-pds">&quot;</span></span>,opacity<span class="pl-k">:</span><span class="pl-c1">0.5</span>,textAlign<span class="pl-k">:</span><span class="pl-s1"><span class="pl-pds">&quot;</span>center<span class="pl-pds">&quot;</span></span>}},tooltip<span class="pl-k">:</span>{enabled<span class="pl-k">:!</span><span class="pl-c1">0</span>,animation<span class="pl-k">:</span>ba,backgroundColor<span class="pl-k">:</span><span class="pl-s1"><span class="pl-pds">&quot;</span>rgba(249, 249, 249, .85)<span class="pl-pds">&quot;</span></span>,borderWidth<span class="pl-k">:</span><span class="pl-c1">1</span>,borderRadius<span class="pl-k">:</span><span class="pl-c1">3</span>,dateTimeLabelFormats<span class="pl-k">:</span>{millisecond<span class="pl-k">:</span><span class="pl-s1"><span class="pl-pds">&quot;</span>%A, %b %e, %H:%M:%S.%L<span class="pl-pds">&quot;</span></span>,second<span class="pl-k">:</span><span class="pl-s1"><span class="pl-pds">&quot;</span>%A, %b %e, %H:%M:%S<span class="pl-pds">&quot;</span></span>,minute<span class="pl-k">:</span><span class="pl-s1"><span class="pl-pds">&quot;</span>%A, %b %e, %H:%M<span class="pl-pds">&quot;</span></span>,hour<span class="pl-k">:</span><span class="pl-s1"><span class="pl-pds">&quot;</span>%A, %b %e, %H:%M<span class="pl-pds">&quot;</span></span>,</td>
      </tr>
      <tr>
        <td id="L31" class="blob-num js-line-number" data-line-number="31"></td>
        <td id="LC31" class="blob-code js-file-line">day<span class="pl-k">:</span><span class="pl-s1"><span class="pl-pds">&quot;</span>%A, %b %e, %Y<span class="pl-pds">&quot;</span></span>,week<span class="pl-k">:</span><span class="pl-s1"><span class="pl-pds">&quot;</span>Week from %A, %b %e, %Y<span class="pl-pds">&quot;</span></span>,month<span class="pl-k">:</span><span class="pl-s1"><span class="pl-pds">&quot;</span>%B %Y<span class="pl-pds">&quot;</span></span>,year<span class="pl-k">:</span><span class="pl-s1"><span class="pl-pds">&quot;</span>%Y<span class="pl-pds">&quot;</span></span>},headerFormat<span class="pl-k">:</span><span class="pl-s1"><span class="pl-pds">&#39;</span>&lt;span style=&quot;font-size: 10px&quot;&gt;{point.key}&lt;/span&gt;&lt;br/&gt;<span class="pl-pds">&#39;</span></span>,pointFormat<span class="pl-k">:</span><span class="pl-s1"><span class="pl-pds">&#39;</span>&lt;span style=&quot;color:{series.color}&quot;&gt;●&lt;/span&gt; {series.name}: &lt;b&gt;{point.y}&lt;/b&gt;&lt;br/&gt;<span class="pl-pds">&#39;</span></span>,shadow<span class="pl-k">:!</span><span class="pl-c1">0</span>,snap<span class="pl-k">:</span>Ib<span class="pl-k">?</span><span class="pl-c1">25</span><span class="pl-k">:</span><span class="pl-c1">10</span>,style<span class="pl-k">:</span>{color<span class="pl-k">:</span><span class="pl-s1"><span class="pl-pds">&quot;</span>#333333<span class="pl-pds">&quot;</span></span>,cursor<span class="pl-k">:</span><span class="pl-s1"><span class="pl-pds">&quot;</span>default<span class="pl-pds">&quot;</span></span>,fontSize<span class="pl-k">:</span><span class="pl-s1"><span class="pl-pds">&quot;</span>12px<span class="pl-pds">&quot;</span></span>,padding<span class="pl-k">:</span><span class="pl-s1"><span class="pl-pds">&quot;</span>8px<span class="pl-pds">&quot;</span></span>,whiteSpace<span class="pl-k">:</span><span class="pl-s1"><span class="pl-pds">&quot;</span>nowrap<span class="pl-pds">&quot;</span></span>}},credits<span class="pl-k">:</span>{enabled<span class="pl-k">:!</span><span class="pl-c1">0</span>,text<span class="pl-k">:</span><span class="pl-s1"><span class="pl-pds">&quot;</span>Highcharts.com<span class="pl-pds">&quot;</span></span>,href<span class="pl-k">:</span><span class="pl-s1"><span class="pl-pds">&quot;</span>http://www.highcharts.com<span class="pl-pds">&quot;</span></span>,position<span class="pl-k">:</span>{align<span class="pl-k">:</span><span class="pl-s1"><span class="pl-pds">&quot;</span>right<span class="pl-pds">&quot;</span></span>,x<span class="pl-k">:-</span><span class="pl-c1">10</span>,verticalAlign<span class="pl-k">:</span><span class="pl-s1"><span class="pl-pds">&quot;</span>bottom<span class="pl-pds">&quot;</span></span>,y<span class="pl-k">:-</span><span class="pl-c1">5</span>},style<span class="pl-k">:</span>{cursor<span class="pl-k">:</span><span class="pl-s1"><span class="pl-pds">&quot;</span>pointer<span class="pl-pds">&quot;</span></span>,</td>
      </tr>
      <tr>
        <td id="L32" class="blob-num js-line-number" data-line-number="32"></td>
        <td id="LC32" class="blob-code js-file-line">color<span class="pl-k">:</span><span class="pl-s1"><span class="pl-pds">&quot;</span>#909090<span class="pl-pds">&quot;</span></span>,fontSize<span class="pl-k">:</span><span class="pl-s1"><span class="pl-pds">&quot;</span>9px<span class="pl-pds">&quot;</span></span>}}};<span class="pl-s">var</span> ca<span class="pl-k">=</span>E.plotOptions,T<span class="pl-k">=</span>ca.line;Bb();<span class="pl-s">var</span> Ub<span class="pl-k">=</span><span class="pl-sr"><span class="pl-pds">/</span>rgba<span class="pl-cce">\(</span><span class="pl-c1">\s</span><span class="pl-k">*</span>(<span class="pl-c1">[<span class="pl-c1">0-9</span>]</span><span class="pl-k">{1,3}</span>)<span class="pl-c1">\s</span><span class="pl-k">*</span>,<span class="pl-c1">\s</span><span class="pl-k">*</span>(<span class="pl-c1">[<span class="pl-c1">0-9</span>]</span><span class="pl-k">{1,3}</span>)<span class="pl-c1">\s</span><span class="pl-k">*</span>,<span class="pl-c1">\s</span><span class="pl-k">*</span>(<span class="pl-c1">[<span class="pl-c1">0-9</span>]</span><span class="pl-k">{1,3}</span>)<span class="pl-c1">\s</span><span class="pl-k">*</span>,<span class="pl-c1">\s</span><span class="pl-k">*</span>(<span class="pl-c1">[<span class="pl-c1">0-9</span>]</span><span class="pl-k">?</span>(?:<span class="pl-cce">\.</span><span class="pl-c1">[<span class="pl-c1">0-9</span>]</span><span class="pl-k">+</span>)<span class="pl-k">?</span>)<span class="pl-c1">\s</span><span class="pl-k">*</span><span class="pl-cce">\)</span><span class="pl-pds">/</span></span>,Vb<span class="pl-k">=</span><span class="pl-sr"><span class="pl-pds">/</span>#(<span class="pl-c1">[<span class="pl-c1">a-fA-F0-9</span>]</span><span class="pl-k">{2}</span>)(<span class="pl-c1">[<span class="pl-c1">a-fA-F0-9</span>]</span><span class="pl-k">{2}</span>)(<span class="pl-c1">[<span class="pl-c1">a-fA-F0-9</span>]</span><span class="pl-k">{2}</span>)<span class="pl-pds">/</span></span>,Wb<span class="pl-k">=</span><span class="pl-sr"><span class="pl-pds">/</span>rgb<span class="pl-cce">\(</span><span class="pl-c1">\s</span><span class="pl-k">*</span>(<span class="pl-c1">[<span class="pl-c1">0-9</span>]</span><span class="pl-k">{1,3}</span>)<span class="pl-c1">\s</span><span class="pl-k">*</span>,<span class="pl-c1">\s</span><span class="pl-k">*</span>(<span class="pl-c1">[<span class="pl-c1">0-9</span>]</span><span class="pl-k">{1,3}</span>)<span class="pl-c1">\s</span><span class="pl-k">*</span>,<span class="pl-c1">\s</span><span class="pl-k">*</span>(<span class="pl-c1">[<span class="pl-c1">0-9</span>]</span><span class="pl-k">{1,3}</span>)<span class="pl-c1">\s</span><span class="pl-k">*</span><span class="pl-cce">\)</span><span class="pl-pds">/</span></span>,<span class="pl-en">ya</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){<span class="pl-s">var</span> b<span class="pl-k">=</span>[],c,d;(<span class="pl-st">function</span>(<span class="pl-vpf">a</span>){a<span class="pl-k">&amp;&amp;</span>a.stops<span class="pl-k">?</span>d<span class="pl-k">=</span>Va(a.stops,<span class="pl-st">function</span>(<span class="pl-vpf">a</span>){<span class="pl-k">return</span> ya(a[<span class="pl-c1">1</span>])})<span class="pl-k">:</span>(c<span class="pl-k">=</span>Ub.<span class="pl-s3">exec</span>(a))<span class="pl-k">?</span>b<span class="pl-k">=</span>[y(c[<span class="pl-c1">1</span>]),y(c[<span class="pl-c1">2</span>]),y(c[<span class="pl-c1">3</span>]),<span class="pl-s3">parseFloat</span>(c[<span class="pl-c1">4</span>],<span class="pl-c1">10</span>)]<span class="pl-k">:</span>(c<span class="pl-k">=</span>Vb.<span class="pl-s3">exec</span>(a))<span class="pl-k">?</span>b<span class="pl-k">=</span>[y(c[<span class="pl-c1">1</span>],<span class="pl-c1">16</span>),y(c[<span class="pl-c1">2</span>],<span class="pl-c1">16</span>),y(c[<span class="pl-c1">3</span>],</td>
      </tr>
      <tr>
        <td id="L33" class="blob-num js-line-number" data-line-number="33"></td>
        <td id="LC33" class="blob-code js-file-line"><span class="pl-c1">16</span>),<span class="pl-c1">1</span>]<span class="pl-k">:</span>(c<span class="pl-k">=</span>Wb.<span class="pl-s3">exec</span>(a))<span class="pl-k">&amp;&amp;</span>(b<span class="pl-k">=</span>[y(c[<span class="pl-c1">1</span>]),y(c[<span class="pl-c1">2</span>]),y(c[<span class="pl-c1">3</span>]),<span class="pl-c1">1</span>])})(a);<span class="pl-k">return</span>{<span class="pl-en">get</span>:<span class="pl-st">function</span>(<span class="pl-vpf">c</span>){<span class="pl-s">var</span> f;d<span class="pl-k">?</span>(f<span class="pl-k">=</span>w(a),f.stops<span class="pl-k">=</span>[].<span class="pl-s3">concat</span>(f.stops),q(d,<span class="pl-st">function</span>(<span class="pl-vpf">a</span>,<span class="pl-vpf">b</span>){f.stops[b]<span class="pl-k">=</span>[f.stops[b][<span class="pl-c1">0</span>],a.get(c)]}))<span class="pl-k">:</span>f<span class="pl-k">=</span>b<span class="pl-k">&amp;&amp;!</span><span class="pl-s3">isNaN</span>(b[<span class="pl-c1">0</span>])<span class="pl-k">?</span>c<span class="pl-k">===</span><span class="pl-s1"><span class="pl-pds">&quot;</span>rgb<span class="pl-pds">&quot;</span></span><span class="pl-k">?</span><span class="pl-s1"><span class="pl-pds">&quot;</span>rgb(<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>b[<span class="pl-c1">0</span>]<span class="pl-k">+</span><span class="pl-s1"><span class="pl-pds">&quot;</span>,<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>b[<span class="pl-c1">1</span>]<span class="pl-k">+</span><span class="pl-s1"><span class="pl-pds">&quot;</span>,<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>b[<span class="pl-c1">2</span>]<span class="pl-k">+</span><span class="pl-s1"><span class="pl-pds">&quot;</span>)<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span>c<span class="pl-k">===</span><span class="pl-s1"><span class="pl-pds">&quot;</span>a<span class="pl-pds">&quot;</span></span><span class="pl-k">?</span>b[<span class="pl-c1">3</span>]<span class="pl-k">:</span><span class="pl-s1"><span class="pl-pds">&quot;</span>rgba(<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>b.<span class="pl-s3">join</span>(<span class="pl-s1"><span class="pl-pds">&quot;</span>,<span class="pl-pds">&quot;</span></span>)<span class="pl-k">+</span><span class="pl-s1"><span class="pl-pds">&quot;</span>)<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span>a;<span class="pl-k">return</span> f},<span class="pl-en">brighten</span>:<span class="pl-st">function</span>(<span class="pl-vpf">a</span>){<span class="pl-k">if</span>(d)q(d,<span class="pl-st">function</span>(<span class="pl-vpf">b</span>){b.brighten(a)});<span class="pl-k">else</span> <span class="pl-k">if</span>(ja(a)<span class="pl-k">&amp;&amp;</span>a<span class="pl-k">!==</span><span class="pl-c1">0</span>){<span class="pl-s">var</span> c;<span class="pl-k">for</span>(c<span class="pl-k">=</span><span class="pl-c1">0</span>;c<span class="pl-k">&lt;</span><span class="pl-c1">3</span>;c<span class="pl-k">++</span>)b[c]<span class="pl-k">+=</span>y(a<span class="pl-k">*</span><span class="pl-c1">255</span>),b[c]<span class="pl-k">&lt;</span><span class="pl-c1">0</span><span class="pl-k">&amp;&amp;</span>(b[c]<span class="pl-k">=</span><span class="pl-c1">0</span>),b[c]<span class="pl-k">&gt;</span><span class="pl-c1">255</span><span class="pl-k">&amp;&amp;</span>(b[c]<span class="pl-k">=</span><span class="pl-c1">255</span>)}<span class="pl-k">return</span> <span class="pl-v">this</span>},rgba<span class="pl-k">:</span>b,<span class="pl-en">setOpacity</span>:<span class="pl-st">function</span>(<span class="pl-vpf">a</span>){b[<span class="pl-c1">3</span>]<span class="pl-k">=</span>a;<span class="pl-k">return</span> <span class="pl-v">this</span>}}};</td>
      </tr>
      <tr>
        <td id="L34" class="blob-num js-line-number" data-line-number="34"></td>
        <td id="LC34" class="blob-code js-file-line"><span class="pl-s3">S</span>.<span class="pl-sc">prototype</span><span class="pl-k">=</span>{opacity<span class="pl-k">:</span><span class="pl-c1">1</span>,textProps<span class="pl-k">:</span><span class="pl-s1"><span class="pl-pds">&quot;</span>fontSize,fontWeight,fontFamily,color,lineHeight,width,textDecoration,textShadow,HcTextStroke<span class="pl-pds">&quot;</span></span>.<span class="pl-s3">split</span>(<span class="pl-s1"><span class="pl-pds">&quot;</span>,<span class="pl-pds">&quot;</span></span>),<span class="pl-en">init</span>:<span class="pl-st">function</span>(<span class="pl-vpf">a</span>,<span class="pl-vpf">b</span>){<span class="pl-v">this</span>.element<span class="pl-k">=</span>b<span class="pl-k">===</span><span class="pl-s1"><span class="pl-pds">&quot;</span>span<span class="pl-pds">&quot;</span></span><span class="pl-k">?</span>$(b)<span class="pl-k">:</span>x.createElementNS(xa,b);<span class="pl-v">this</span>.renderer<span class="pl-k">=</span>a},<span class="pl-en">animate</span>:<span class="pl-st">function</span>(<span class="pl-vpf">a</span>,<span class="pl-vpf">b</span>,<span class="pl-vpf">c</span>){b<span class="pl-k">=</span>p(b,va,<span class="pl-k">!</span><span class="pl-c1">0</span>);bb(<span class="pl-v">this</span>);<span class="pl-k">if</span>(b){b<span class="pl-k">=</span>w(b,{});<span class="pl-k">if</span>(c)b.<span class="pl-sc">complete</span><span class="pl-k">=</span>c;jb(<span class="pl-v">this</span>,a,b)}<span class="pl-k">else</span> <span class="pl-v">this</span>.attr(a),c<span class="pl-k">&amp;&amp;</span>c();<span class="pl-k">return</span> <span class="pl-v">this</span>},<span class="pl-en">colorGradient</span>:<span class="pl-st">function</span>(<span class="pl-vpf">a</span>,<span class="pl-vpf">b</span>,<span class="pl-vpf">c</span>){<span class="pl-s">var</span> d<span class="pl-k">=</span><span class="pl-v">this</span>.renderer,e,f,g,h,i,j,k,l,n,m,o<span class="pl-k">=</span>[];a.linearGradient<span class="pl-k">?</span>f<span class="pl-k">=</span><span class="pl-s1"><span class="pl-pds">&quot;</span>linearGradient<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span>a.radialGradient<span class="pl-k">&amp;&amp;</span>(f<span class="pl-k">=</span><span class="pl-s1"><span class="pl-pds">&quot;</span>radialGradient<span class="pl-pds">&quot;</span></span>);</td>
      </tr>
      <tr>
        <td id="L35" class="blob-num js-line-number" data-line-number="35"></td>
        <td id="LC35" class="blob-code js-file-line"><span class="pl-k">if</span>(f){g<span class="pl-k">=</span>a[f];h<span class="pl-k">=</span>d.gradients;j<span class="pl-k">=</span>a.stops;n<span class="pl-k">=</span>c.radialReference;Ha(g)<span class="pl-k">&amp;&amp;</span>(a[f]<span class="pl-k">=</span>g<span class="pl-k">=</span>{x1<span class="pl-k">:</span>g[<span class="pl-c1">0</span>],y1<span class="pl-k">:</span>g[<span class="pl-c1">1</span>],x2<span class="pl-k">:</span>g[<span class="pl-c1">2</span>],y2<span class="pl-k">:</span>g[<span class="pl-c1">3</span>],gradientUnits<span class="pl-k">:</span><span class="pl-s1"><span class="pl-pds">&quot;</span>userSpaceOnUse<span class="pl-pds">&quot;</span></span>});f<span class="pl-k">===</span><span class="pl-s1"><span class="pl-pds">&quot;</span>radialGradient<span class="pl-pds">&quot;</span></span><span class="pl-k">&amp;&amp;</span>n<span class="pl-k">&amp;&amp;!</span>s(g.gradientUnits)<span class="pl-k">&amp;&amp;</span>(g<span class="pl-k">=</span>w(g,{cx<span class="pl-k">:</span>n[<span class="pl-c1">0</span>]<span class="pl-k">-</span>n[<span class="pl-c1">2</span>]/<span class="pl-c1">2</span><span class="pl-k">+</span>g.cx<span class="pl-k">*</span>n[<span class="pl-c1">2</span>],cy<span class="pl-k">:</span>n[<span class="pl-c1">1</span>]<span class="pl-k">-</span>n[<span class="pl-c1">2</span>]/<span class="pl-c1">2</span><span class="pl-k">+</span>g.cy<span class="pl-k">*</span>n[<span class="pl-c1">2</span>],r<span class="pl-k">:</span>g.r<span class="pl-k">*</span>n[<span class="pl-c1">2</span>],gradientUnits<span class="pl-k">:</span><span class="pl-s1"><span class="pl-pds">&quot;</span>userSpaceOnUse<span class="pl-pds">&quot;</span></span>}));<span class="pl-k">for</span>(m <span class="pl-k">in</span> g)m<span class="pl-k">!==</span><span class="pl-s1"><span class="pl-pds">&quot;</span>id<span class="pl-pds">&quot;</span></span><span class="pl-k">&amp;&amp;</span>o.<span class="pl-s3">push</span>(m,g[m]);<span class="pl-k">for</span>(m <span class="pl-k">in</span> j)o.<span class="pl-s3">push</span>(j[m]);o<span class="pl-k">=</span>o.<span class="pl-s3">join</span>(<span class="pl-s1"><span class="pl-pds">&quot;</span>,<span class="pl-pds">&quot;</span></span>);h[o]<span class="pl-k">?</span>a<span class="pl-k">=</span>h[o].attr(<span class="pl-s1"><span class="pl-pds">&quot;</span>id<span class="pl-pds">&quot;</span></span>)<span class="pl-k">:</span>(g.<span class="pl-sc">id</span><span class="pl-k">=</span>a<span class="pl-k">=</span><span class="pl-s1"><span class="pl-pds">&quot;</span>highcharts-<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>ub<span class="pl-k">++</span>,h[o]<span class="pl-k">=</span>i<span class="pl-k">=</span>d.<span class="pl-s3">createElement</span>(f).attr(g).<span class="pl-s3">add</span>(d.defs),i.stops<span class="pl-k">=</span>[],q(j,<span class="pl-st">function</span>(<span class="pl-vpf">a</span>){a[<span class="pl-c1">1</span>].<span class="pl-s3">indexOf</span>(<span class="pl-s1"><span class="pl-pds">&quot;</span>rgba<span class="pl-pds">&quot;</span></span>)<span class="pl-k">===</span></td>
      </tr>
      <tr>
        <td id="L36" class="blob-num js-line-number" data-line-number="36"></td>
        <td id="LC36" class="blob-code js-file-line"><span class="pl-c1">0</span><span class="pl-k">?</span>(e<span class="pl-k">=</span>ya(a[<span class="pl-c1">1</span>]),k<span class="pl-k">=</span>e.get(<span class="pl-s1"><span class="pl-pds">&quot;</span>rgb<span class="pl-pds">&quot;</span></span>),l<span class="pl-k">=</span>e.get(<span class="pl-s1"><span class="pl-pds">&quot;</span>a<span class="pl-pds">&quot;</span></span>))<span class="pl-k">:</span>(k<span class="pl-k">=</span>a[<span class="pl-c1">1</span>],l<span class="pl-k">=</span><span class="pl-c1">1</span>);a<span class="pl-k">=</span>d.<span class="pl-s3">createElement</span>(<span class="pl-s1"><span class="pl-pds">&quot;</span>stop<span class="pl-pds">&quot;</span></span>).attr({offset<span class="pl-k">:</span>a[<span class="pl-c1">0</span>],<span class="pl-s1"><span class="pl-pds">&quot;</span>stop-color<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span>k,<span class="pl-s1"><span class="pl-pds">&quot;</span>stop-opacity<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span>l}).<span class="pl-s3">add</span>(i);i.stops.<span class="pl-s3">push</span>(a)}));c.<span class="pl-s3">setAttribute</span>(b,<span class="pl-s1"><span class="pl-pds">&quot;</span>url(<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>d.url<span class="pl-k">+</span><span class="pl-s1"><span class="pl-pds">&quot;</span>#<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>a<span class="pl-k">+</span><span class="pl-s1"><span class="pl-pds">&quot;</span>)<span class="pl-pds">&quot;</span></span>)}},<span class="pl-en">attr</span>:<span class="pl-st">function</span>(<span class="pl-vpf">a</span>,<span class="pl-vpf">b</span>){<span class="pl-s">var</span> c,d,e<span class="pl-k">=</span><span class="pl-v">this</span>.element,f,g<span class="pl-k">=</span><span class="pl-v">this</span>,h;<span class="pl-k">typeof</span> a<span class="pl-k">===</span><span class="pl-s1"><span class="pl-pds">&quot;</span>string<span class="pl-pds">&quot;</span></span><span class="pl-k">&amp;&amp;</span>b<span class="pl-k">!==</span>u<span class="pl-k">&amp;&amp;</span>(c<span class="pl-k">=</span>a,a<span class="pl-k">=</span>{},a[c]<span class="pl-k">=</span>b);<span class="pl-k">if</span>(<span class="pl-k">typeof</span> a<span class="pl-k">===</span><span class="pl-s1"><span class="pl-pds">&quot;</span>string<span class="pl-pds">&quot;</span></span>)g<span class="pl-k">=</span>(<span class="pl-v">this</span>[a<span class="pl-k">+</span><span class="pl-s1"><span class="pl-pds">&quot;</span>Getter<span class="pl-pds">&quot;</span></span>]<span class="pl-k">||</span><span class="pl-v">this</span>._defaultGetter).<span class="pl-s3">call</span>(<span class="pl-v">this</span>,a,e);<span class="pl-k">else</span>{<span class="pl-k">for</span>(c <span class="pl-k">in</span> a){d<span class="pl-k">=</span>a[c];h<span class="pl-k">=!</span><span class="pl-c1">1</span>;<span class="pl-v">this</span>.symbolName<span class="pl-k">&amp;&amp;</span><span class="pl-sr"><span class="pl-pds">/</span><span class="pl-k">^</span>(x<span class="pl-k">|</span>y<span class="pl-k">|</span>width<span class="pl-k">|</span>height<span class="pl-k">|</span>r<span class="pl-k">|</span>start<span class="pl-k">|</span>end<span class="pl-k">|</span>innerR<span class="pl-k">|</span>anchorX<span class="pl-k">|</span>anchorY)<span class="pl-pds">/</span></span>.<span class="pl-s3">test</span>(c)<span class="pl-k">&amp;&amp;</span>(f<span class="pl-k">||</span>(<span class="pl-v">this</span>.symbolAttr(a),</td>
      </tr>
      <tr>
        <td id="L37" class="blob-num js-line-number" data-line-number="37"></td>
        <td id="LC37" class="blob-code js-file-line">f<span class="pl-k">=!</span><span class="pl-c1">0</span>),h<span class="pl-k">=!</span><span class="pl-c1">0</span>);<span class="pl-k">if</span>(<span class="pl-v">this</span>.rotation<span class="pl-k">&amp;&amp;</span>(c<span class="pl-k">===</span><span class="pl-s1"><span class="pl-pds">&quot;</span>x<span class="pl-pds">&quot;</span></span><span class="pl-k">||</span>c<span class="pl-k">===</span><span class="pl-s1"><span class="pl-pds">&quot;</span>y<span class="pl-pds">&quot;</span></span>))<span class="pl-v">this</span>.doTransform<span class="pl-k">=!</span><span class="pl-c1">0</span>;h<span class="pl-k">||</span>(<span class="pl-v">this</span>[c<span class="pl-k">+</span><span class="pl-s1"><span class="pl-pds">&quot;</span>Setter<span class="pl-pds">&quot;</span></span>]<span class="pl-k">||</span><span class="pl-v">this</span>._defaultSetter).<span class="pl-s3">call</span>(<span class="pl-v">this</span>,d,c,e);<span class="pl-v">this</span>.shadows<span class="pl-k">&amp;&amp;</span><span class="pl-sr"><span class="pl-pds">/</span><span class="pl-k">^</span>(width<span class="pl-k">|</span>height<span class="pl-k">|</span>visibility<span class="pl-k">|</span>x<span class="pl-k">|</span>y<span class="pl-k">|</span>d<span class="pl-k">|</span>transform<span class="pl-k">|</span>cx<span class="pl-k">|</span>cy<span class="pl-k">|</span>r)<span class="pl-k">$</span><span class="pl-pds">/</span></span>.<span class="pl-s3">test</span>(c)<span class="pl-k">&amp;&amp;</span><span class="pl-v">this</span>.updateShadows(c,d)}<span class="pl-k">if</span>(<span class="pl-v">this</span>.doTransform)<span class="pl-v">this</span>.updateTransform(),<span class="pl-v">this</span>.doTransform<span class="pl-k">=!</span><span class="pl-c1">1</span>}<span class="pl-k">return</span> g},<span class="pl-en">updateShadows</span>:<span class="pl-st">function</span>(<span class="pl-vpf">a</span>,<span class="pl-vpf">b</span>){<span class="pl-k">for</span>(<span class="pl-s">var</span> c<span class="pl-k">=</span><span class="pl-v">this</span>.shadows,d<span class="pl-k">=</span>c.<span class="pl-sc">length</span>;d<span class="pl-k">--</span>;)c[d].<span class="pl-s3">setAttribute</span>(a,a<span class="pl-k">===</span><span class="pl-s1"><span class="pl-pds">&quot;</span>height<span class="pl-pds">&quot;</span></span><span class="pl-k">?</span>t(b<span class="pl-k">-</span>(c[d].cutHeight<span class="pl-k">||</span><span class="pl-c1">0</span>),<span class="pl-c1">0</span>)<span class="pl-k">:</span>a<span class="pl-k">===</span><span class="pl-s1"><span class="pl-pds">&quot;</span>d<span class="pl-pds">&quot;</span></span><span class="pl-k">?</span><span class="pl-v">this</span>.d<span class="pl-k">:</span>b)},<span class="pl-en">addClass</span>:<span class="pl-st">function</span>(<span class="pl-vpf">a</span>){<span class="pl-s">var</span> b<span class="pl-k">=</span><span class="pl-v">this</span>.element,c<span class="pl-k">=</span>F(b,<span class="pl-s1"><span class="pl-pds">&quot;</span>class<span class="pl-pds">&quot;</span></span>)<span class="pl-k">||</span></td>
      </tr>
      <tr>
        <td id="L38" class="blob-num js-line-number" data-line-number="38"></td>
        <td id="LC38" class="blob-code js-file-line"><span class="pl-s1"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>;c.<span class="pl-s3">indexOf</span>(a)<span class="pl-k">===-</span><span class="pl-c1">1</span><span class="pl-k">&amp;&amp;</span>F(b,<span class="pl-s1"><span class="pl-pds">&quot;</span>class<span class="pl-pds">&quot;</span></span>,c<span class="pl-k">+</span><span class="pl-s1"><span class="pl-pds">&quot;</span> <span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>a);<span class="pl-k">return</span> <span class="pl-v">this</span>},<span class="pl-en">symbolAttr</span>:<span class="pl-st">function</span>(<span class="pl-vpf">a</span>){<span class="pl-s">var</span> b<span class="pl-k">=</span><span class="pl-v">this</span>;q(<span class="pl-s1"><span class="pl-pds">&quot;</span>x,y,r,start,end,width,height,innerR,anchorX,anchorY<span class="pl-pds">&quot;</span></span>.<span class="pl-s3">split</span>(<span class="pl-s1"><span class="pl-pds">&quot;</span>,<span class="pl-pds">&quot;</span></span>),<span class="pl-st">function</span>(<span class="pl-vpf">c</span>){b[c]<span class="pl-k">=</span>p(a[c],b[c])});b.attr({d<span class="pl-k">:</span>b.renderer.symbols[b.symbolName](b.<span class="pl-sc">x</span>,b.<span class="pl-sc">y</span>,b.<span class="pl-sc">width</span>,b.<span class="pl-sc">height</span>,b)})},<span class="pl-en">clip</span>:<span class="pl-st">function</span>(<span class="pl-vpf">a</span>){<span class="pl-k">return</span> <span class="pl-v">this</span>.attr(<span class="pl-s1"><span class="pl-pds">&quot;</span>clip-path<span class="pl-pds">&quot;</span></span>,a<span class="pl-k">?</span><span class="pl-s1"><span class="pl-pds">&quot;</span>url(<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span><span class="pl-v">this</span>.renderer.url<span class="pl-k">+</span><span class="pl-s1"><span class="pl-pds">&quot;</span>#<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>a.<span class="pl-sc">id</span><span class="pl-k">+</span><span class="pl-s1"><span class="pl-pds">&quot;</span>)<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span>P)},<span class="pl-en">crisp</span>:<span class="pl-st">function</span>(<span class="pl-vpf">a</span>){<span class="pl-s">var</span> b,c<span class="pl-k">=</span>{},d,e<span class="pl-k">=</span>a.strokeWidth<span class="pl-k">||</span><span class="pl-v">this</span>.strokeWidth<span class="pl-k">||</span><span class="pl-c1">0</span>;d<span class="pl-k">=</span>v(e)<span class="pl-k">%</span><span class="pl-c1">2</span>/<span class="pl-c1">2</span>;a.<span class="pl-sc">x</span><span class="pl-k">=</span>U(a.<span class="pl-sc">x</span><span class="pl-k">||</span><span class="pl-v">this</span>.<span class="pl-sc">x</span><span class="pl-k">||</span><span class="pl-c1">0</span>)<span class="pl-k">+</span>d;a.<span class="pl-sc">y</span><span class="pl-k">=</span>U(a.<span class="pl-sc">y</span><span class="pl-k">||</span><span class="pl-v">this</span>.<span class="pl-sc">y</span><span class="pl-k">||</span><span class="pl-c1">0</span>)<span class="pl-k">+</span>d;a.<span class="pl-sc">width</span><span class="pl-k">=</span>U((a.<span class="pl-sc">width</span><span class="pl-k">||</span><span class="pl-v">this</span>.<span class="pl-sc">width</span><span class="pl-k">||</span></td>
      </tr>
      <tr>
        <td id="L39" class="blob-num js-line-number" data-line-number="39"></td>
        <td id="LC39" class="blob-code js-file-line"><span class="pl-c1">0</span>)<span class="pl-k">-</span><span class="pl-c1">2</span><span class="pl-k">*</span>d);a.<span class="pl-sc">height</span><span class="pl-k">=</span>U((a.<span class="pl-sc">height</span><span class="pl-k">||</span><span class="pl-v">this</span>.<span class="pl-sc">height</span><span class="pl-k">||</span><span class="pl-c1">0</span>)<span class="pl-k">-</span><span class="pl-c1">2</span><span class="pl-k">*</span>d);a.strokeWidth<span class="pl-k">=</span>e;<span class="pl-k">for</span>(b <span class="pl-k">in</span> a)<span class="pl-v">this</span>[b]<span class="pl-k">!==</span>a[b]<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>[b]<span class="pl-k">=</span>c[b]<span class="pl-k">=</span>a[b]);<span class="pl-k">return</span> c},<span class="pl-en">css</span>:<span class="pl-st">function</span>(<span class="pl-vpf">a</span>){<span class="pl-s">var</span> b<span class="pl-k">=</span><span class="pl-v">this</span>.styles,c<span class="pl-k">=</span>{},d<span class="pl-k">=</span><span class="pl-v">this</span>.element,e,f,g<span class="pl-k">=</span><span class="pl-s1"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>;e<span class="pl-k">=!</span>b;<span class="pl-k">if</span>(a<span class="pl-k">&amp;&amp;</span>a.<span class="pl-sc">color</span>)a.fill<span class="pl-k">=</span>a.<span class="pl-sc">color</span>;<span class="pl-k">if</span>(b)<span class="pl-k">for</span>(f <span class="pl-k">in</span> a)a[f]<span class="pl-k">!==</span>b[f]<span class="pl-k">&amp;&amp;</span>(c[f]<span class="pl-k">=</span>a[f],e<span class="pl-k">=!</span><span class="pl-c1">0</span>);<span class="pl-k">if</span>(e){e<span class="pl-k">=</span><span class="pl-v">this</span>.textWidth<span class="pl-k">=</span>a<span class="pl-k">&amp;&amp;</span>a.<span class="pl-sc">width</span><span class="pl-k">&amp;&amp;</span>d.<span class="pl-sc">nodeName</span>.<span class="pl-s3">toLowerCase</span>()<span class="pl-k">===</span><span class="pl-s1"><span class="pl-pds">&quot;</span>text<span class="pl-pds">&quot;</span></span><span class="pl-k">&amp;&amp;</span>y(a.<span class="pl-sc">width</span>);b<span class="pl-k">&amp;&amp;</span>(a<span class="pl-k">=</span>r(b,c));<span class="pl-v">this</span>.styles<span class="pl-k">=</span>a;e<span class="pl-k">&amp;&amp;</span>(ga<span class="pl-k">||!</span>ba<span class="pl-k">&amp;&amp;</span><span class="pl-v">this</span>.renderer.forExport)<span class="pl-k">&amp;&amp;delete</span> a.<span class="pl-sc">width</span>;<span class="pl-k">if</span>(Aa<span class="pl-k">&amp;&amp;!</span>ba)B(<span class="pl-v">this</span>.element,a);<span class="pl-k">else</span>{<span class="pl-en">b</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>,<span class="pl-vpf">b</span>){<span class="pl-k">return</span><span class="pl-s1"><span class="pl-pds">&quot;</span>-<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>b.<span class="pl-s3">toLowerCase</span>()};</td>
      </tr>
      <tr>
        <td id="L40" class="blob-num js-line-number" data-line-number="40"></td>
        <td id="LC40" class="blob-code js-file-line"><span class="pl-k">for</span>(f <span class="pl-k">in</span> a)g<span class="pl-k">+=</span>f.<span class="pl-s3">replace</span>(<span class="pl-sr"><span class="pl-pds">/</span>(<span class="pl-c1">[<span class="pl-c1">A-Z</span>]</span>)<span class="pl-pds">/</span>g</span>,b)<span class="pl-k">+</span><span class="pl-s1"><span class="pl-pds">&quot;</span>:<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>a[f]<span class="pl-k">+</span><span class="pl-s1"><span class="pl-pds">&quot;</span>;<span class="pl-pds">&quot;</span></span>;F(d,<span class="pl-s1"><span class="pl-pds">&quot;</span>style<span class="pl-pds">&quot;</span></span>,g)}e<span class="pl-k">&amp;&amp;</span><span class="pl-v">this</span>.added<span class="pl-k">&amp;&amp;</span><span class="pl-v">this</span>.renderer.buildText(<span class="pl-v">this</span>)}<span class="pl-k">return</span> <span class="pl-v">this</span>},<span class="pl-en">on</span>:<span class="pl-st">function</span>(<span class="pl-vpf">a</span>,<span class="pl-vpf">b</span>){<span class="pl-s">var</span> c<span class="pl-k">=</span><span class="pl-v">this</span>,d<span class="pl-k">=</span>c.element;$a<span class="pl-k">&amp;&amp;</span>a<span class="pl-k">===</span><span class="pl-s1"><span class="pl-pds">&quot;</span>click<span class="pl-pds">&quot;</span></span><span class="pl-k">?</span>(<span class="pl-s3">d</span>.<span class="pl-en">ontouchstart</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){c.touchEventFired<span class="pl-k">=</span>Da.now();a.preventDefault();b.<span class="pl-s3">call</span>(d,a)},<span class="pl-s3">d</span>.<span class="pl-en">onclick</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){(wa.<span class="pl-s3">indexOf</span>(<span class="pl-s1"><span class="pl-pds">&quot;</span>Android<span class="pl-pds">&quot;</span></span>)<span class="pl-k">===-</span><span class="pl-c1">1</span><span class="pl-k">||</span>Da.now()<span class="pl-k">-</span>(c.touchEventFired<span class="pl-k">||</span><span class="pl-c1">0</span>)<span class="pl-k">&gt;</span><span class="pl-c1">1100</span>)<span class="pl-k">&amp;&amp;</span>b.<span class="pl-s3">call</span>(d,a)})<span class="pl-k">:</span>d[<span class="pl-s1"><span class="pl-pds">&quot;</span>on<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>a]<span class="pl-k">=</span>b;<span class="pl-k">return</span> <span class="pl-v">this</span>},<span class="pl-en">setRadialReference</span>:<span class="pl-st">function</span>(<span class="pl-vpf">a</span>){<span class="pl-v">this</span>.element.radialReference<span class="pl-k">=</span>a;<span class="pl-k">return</span> <span class="pl-v">this</span>},<span class="pl-en">translate</span>:<span class="pl-st">function</span>(<span class="pl-vpf">a</span>,<span class="pl-vpf">b</span>){<span class="pl-k">return</span> <span class="pl-v">this</span>.attr({translateX<span class="pl-k">:</span>a,</td>
      </tr>
      <tr>
        <td id="L41" class="blob-num js-line-number" data-line-number="41"></td>
        <td id="LC41" class="blob-code js-file-line">translateY<span class="pl-k">:</span>b})},<span class="pl-en">invert</span>:<span class="pl-st">function</span>(){<span class="pl-v">this</span>.inverted<span class="pl-k">=!</span><span class="pl-c1">0</span>;<span class="pl-v">this</span>.updateTransform();<span class="pl-k">return</span> <span class="pl-v">this</span>},<span class="pl-en">updateTransform</span>:<span class="pl-st">function</span>(){<span class="pl-s">var</span> a<span class="pl-k">=</span><span class="pl-v">this</span>.translateX<span class="pl-k">||</span><span class="pl-c1">0</span>,b<span class="pl-k">=</span><span class="pl-v">this</span>.translateY<span class="pl-k">||</span><span class="pl-c1">0</span>,c<span class="pl-k">=</span><span class="pl-v">this</span>.scaleX,d<span class="pl-k">=</span><span class="pl-v">this</span>.scaleY,e<span class="pl-k">=</span><span class="pl-v">this</span>.inverted,f<span class="pl-k">=</span><span class="pl-v">this</span>.rotation,g<span class="pl-k">=</span><span class="pl-v">this</span>.element;e<span class="pl-k">&amp;&amp;</span>(a<span class="pl-k">+=</span><span class="pl-v">this</span>.attr(<span class="pl-s1"><span class="pl-pds">&quot;</span>width<span class="pl-pds">&quot;</span></span>),b<span class="pl-k">+=</span><span class="pl-v">this</span>.attr(<span class="pl-s1"><span class="pl-pds">&quot;</span>height<span class="pl-pds">&quot;</span></span>));a<span class="pl-k">=</span>[<span class="pl-s1"><span class="pl-pds">&quot;</span>translate(<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>a<span class="pl-k">+</span><span class="pl-s1"><span class="pl-pds">&quot;</span>,<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>b<span class="pl-k">+</span><span class="pl-s1"><span class="pl-pds">&quot;</span>)<span class="pl-pds">&quot;</span></span>];e<span class="pl-k">?</span>a.<span class="pl-s3">push</span>(<span class="pl-s1"><span class="pl-pds">&quot;</span>rotate(90) scale(-1,1)<span class="pl-pds">&quot;</span></span>)<span class="pl-k">:</span>f<span class="pl-k">&amp;&amp;</span>a.<span class="pl-s3">push</span>(<span class="pl-s1"><span class="pl-pds">&quot;</span>rotate(<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>f<span class="pl-k">+</span><span class="pl-s1"><span class="pl-pds">&quot;</span> <span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>(g.<span class="pl-s3">getAttribute</span>(<span class="pl-s1"><span class="pl-pds">&quot;</span>x<span class="pl-pds">&quot;</span></span>)<span class="pl-k">||</span><span class="pl-c1">0</span>)<span class="pl-k">+</span><span class="pl-s1"><span class="pl-pds">&quot;</span> <span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>(g.<span class="pl-s3">getAttribute</span>(<span class="pl-s1"><span class="pl-pds">&quot;</span>y<span class="pl-pds">&quot;</span></span>)<span class="pl-k">||</span><span class="pl-c1">0</span>)<span class="pl-k">+</span><span class="pl-s1"><span class="pl-pds">&quot;</span>)<span class="pl-pds">&quot;</span></span>);(s(c)<span class="pl-k">||</span>s(d))<span class="pl-k">&amp;&amp;</span>a.<span class="pl-s3">push</span>(<span class="pl-s1"><span class="pl-pds">&quot;</span>scale(<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>p(c,<span class="pl-c1">1</span>)<span class="pl-k">+</span><span class="pl-s1"><span class="pl-pds">&quot;</span> <span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>p(d,<span class="pl-c1">1</span>)<span class="pl-k">+</span><span class="pl-s1"><span class="pl-pds">&quot;</span>)<span class="pl-pds">&quot;</span></span>);a.<span class="pl-sc">length</span><span class="pl-k">&amp;&amp;</span>g.<span class="pl-s3">setAttribute</span>(<span class="pl-s1"><span class="pl-pds">&quot;</span>transform<span class="pl-pds">&quot;</span></span>,</td>
      </tr>
      <tr>
        <td id="L42" class="blob-num js-line-number" data-line-number="42"></td>
        <td id="LC42" class="blob-code js-file-line">a.<span class="pl-s3">join</span>(<span class="pl-s1"><span class="pl-pds">&quot;</span> <span class="pl-pds">&quot;</span></span>))},<span class="pl-en">toFront</span>:<span class="pl-st">function</span>(){<span class="pl-s">var</span> a<span class="pl-k">=</span><span class="pl-v">this</span>.element;a.<span class="pl-sc">parentNode</span>.<span class="pl-s3">appendChild</span>(a);<span class="pl-k">return</span> <span class="pl-v">this</span>},<span class="pl-en">align</span>:<span class="pl-st">function</span>(<span class="pl-vpf">a</span>,<span class="pl-vpf">b</span>,<span class="pl-vpf">c</span>){<span class="pl-s">var</span> d,e,f,g,h<span class="pl-k">=</span>{};e<span class="pl-k">=</span><span class="pl-v">this</span>.renderer;f<span class="pl-k">=</span>e.alignedObjects;<span class="pl-k">if</span>(a){<span class="pl-k">if</span>(<span class="pl-v">this</span>.alignOptions<span class="pl-k">=</span>a,<span class="pl-v">this</span>.alignByTranslate<span class="pl-k">=</span>b,<span class="pl-k">!</span>c<span class="pl-k">||</span>Ga(c))<span class="pl-v">this</span>.alignTo<span class="pl-k">=</span>d<span class="pl-k">=</span>c<span class="pl-k">||</span><span class="pl-s1"><span class="pl-pds">&quot;</span>renderer<span class="pl-pds">&quot;</span></span>,la(f,<span class="pl-v">this</span>),f.<span class="pl-s3">push</span>(<span class="pl-v">this</span>),c<span class="pl-k">=</span><span class="pl-c1">null</span>}<span class="pl-k">else</span> a<span class="pl-k">=</span><span class="pl-v">this</span>.alignOptions,b<span class="pl-k">=</span><span class="pl-v">this</span>.alignByTranslate,d<span class="pl-k">=</span><span class="pl-v">this</span>.alignTo;c<span class="pl-k">=</span>p(c,e[d],e);d<span class="pl-k">=</span>a.<span class="pl-sc">align</span>;e<span class="pl-k">=</span>a.verticalAlign;f<span class="pl-k">=</span>(c.<span class="pl-sc">x</span><span class="pl-k">||</span><span class="pl-c1">0</span>)<span class="pl-k">+</span>(a.<span class="pl-sc">x</span><span class="pl-k">||</span><span class="pl-c1">0</span>);g<span class="pl-k">=</span>(c.<span class="pl-sc">y</span><span class="pl-k">||</span><span class="pl-c1">0</span>)<span class="pl-k">+</span>(a.<span class="pl-sc">y</span><span class="pl-k">||</span><span class="pl-c1">0</span>);<span class="pl-k">if</span>(d<span class="pl-k">===</span><span class="pl-s1"><span class="pl-pds">&quot;</span>right<span class="pl-pds">&quot;</span></span><span class="pl-k">||</span>d<span class="pl-k">===</span><span class="pl-s1"><span class="pl-pds">&quot;</span>center<span class="pl-pds">&quot;</span></span>)f<span class="pl-k">+=</span>(c.<span class="pl-sc">width</span><span class="pl-k">-</span>(a.<span class="pl-sc">width</span><span class="pl-k">||</span><span class="pl-c1">0</span>))/{right<span class="pl-k">:</span><span class="pl-c1">1</span>,center<span class="pl-k">:</span><span class="pl-c1">2</span>}[d];</td>
      </tr>
      <tr>
        <td id="L43" class="blob-num js-line-number" data-line-number="43"></td>
        <td id="LC43" class="blob-code js-file-line">h[b<span class="pl-k">?</span><span class="pl-s1"><span class="pl-pds">&quot;</span>translateX<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s1"><span class="pl-pds">&quot;</span>x<span class="pl-pds">&quot;</span></span>]<span class="pl-k">=</span>v(f);<span class="pl-k">if</span>(e<span class="pl-k">===</span><span class="pl-s1"><span class="pl-pds">&quot;</span>bottom<span class="pl-pds">&quot;</span></span><span class="pl-k">||</span>e<span class="pl-k">===</span><span class="pl-s1"><span class="pl-pds">&quot;</span>middle<span class="pl-pds">&quot;</span></span>)g<span class="pl-k">+=</span>(c.<span class="pl-sc">height</span><span class="pl-k">-</span>(a.<span class="pl-sc">height</span><span class="pl-k">||</span><span class="pl-c1">0</span>))/({bottom<span class="pl-k">:</span><span class="pl-c1">1</span>,middle<span class="pl-k">:</span><span class="pl-c1">2</span>}[e]<span class="pl-k">||</span><span class="pl-c1">1</span>);h[b<span class="pl-k">?</span><span class="pl-s1"><span class="pl-pds">&quot;</span>translateY<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s1"><span class="pl-pds">&quot;</span>y<span class="pl-pds">&quot;</span></span>]<span class="pl-k">=</span>v(g);<span class="pl-v">this</span>[<span class="pl-v">this</span>.placed<span class="pl-k">?</span><span class="pl-s1"><span class="pl-pds">&quot;</span>animate<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s1"><span class="pl-pds">&quot;</span>attr<span class="pl-pds">&quot;</span></span>](h);<span class="pl-v">this</span>.placed<span class="pl-k">=!</span><span class="pl-c1">0</span>;<span class="pl-v">this</span>.alignAttr<span class="pl-k">=</span>h;<span class="pl-k">return</span> <span class="pl-v">this</span>},<span class="pl-en">getBBox</span>:<span class="pl-st">function</span>(){<span class="pl-s">var</span> a<span class="pl-k">=</span><span class="pl-v">this</span>.bBox,b<span class="pl-k">=</span><span class="pl-v">this</span>.renderer,c,d,e<span class="pl-k">=</span><span class="pl-v">this</span>.rotation;c<span class="pl-k">=</span><span class="pl-v">this</span>.element;<span class="pl-s">var</span> f<span class="pl-k">=</span><span class="pl-v">this</span>.styles,g<span class="pl-k">=</span>e<span class="pl-k">*</span>Ea;d<span class="pl-k">=</span><span class="pl-v">this</span>.textStr;<span class="pl-s">var</span> h;<span class="pl-k">if</span>(d<span class="pl-k">===</span><span class="pl-s1"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span><span class="pl-k">||</span>Pb.<span class="pl-s3">test</span>(d))h<span class="pl-k">=</span><span class="pl-s1"><span class="pl-pds">&quot;</span>num.<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>d.<span class="pl-s3">toString</span>().<span class="pl-sc">length</span><span class="pl-k">+</span>(f<span class="pl-k">?</span><span class="pl-s1"><span class="pl-pds">&quot;</span>|<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>f.<span class="pl-sc">fontSize</span><span class="pl-k">+</span><span class="pl-s1"><span class="pl-pds">&quot;</span>|<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>f.<span class="pl-sc">fontFamily</span><span class="pl-k">:</span><span class="pl-s1"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>);h<span class="pl-k">&amp;&amp;</span>(a<span class="pl-k">=</span>b.cache[h]);<span class="pl-k">if</span>(<span class="pl-k">!</span>a){<span class="pl-k">if</span>(c.<span class="pl-sc">namespaceURI</span><span class="pl-k">===</span>xa<span class="pl-k">||</span>b.forExport){<span class="pl-k">try</span>{a<span class="pl-k">=</span></td>
      </tr>
      <tr>
        <td id="L44" class="blob-num js-line-number" data-line-number="44"></td>
        <td id="LC44" class="blob-code js-file-line">c.getBBox<span class="pl-k">?</span>r({},c.getBBox())<span class="pl-k">:</span>{width<span class="pl-k">:</span>c.offsetWidth,height<span class="pl-k">:</span>c.offsetHeight}}<span class="pl-k">catch</span>(i){}<span class="pl-k">if</span>(<span class="pl-k">!</span>a<span class="pl-k">||</span>a.<span class="pl-sc">width</span><span class="pl-k">&lt;</span><span class="pl-c1">0</span>)a<span class="pl-k">=</span>{width<span class="pl-k">:</span><span class="pl-c1">0</span>,height<span class="pl-k">:</span><span class="pl-c1">0</span>}}<span class="pl-k">else</span> a<span class="pl-k">=</span><span class="pl-v">this</span>.htmlGetBBox();<span class="pl-k">if</span>(b.isSVG){c<span class="pl-k">=</span>a.<span class="pl-sc">width</span>;d<span class="pl-k">=</span>a.<span class="pl-sc">height</span>;<span class="pl-k">if</span>(Aa<span class="pl-k">&amp;&amp;</span>f<span class="pl-k">&amp;&amp;</span>f.<span class="pl-sc">fontSize</span><span class="pl-k">===</span><span class="pl-s1"><span class="pl-pds">&quot;</span>11px<span class="pl-pds">&quot;</span></span><span class="pl-k">&amp;&amp;</span>d.toPrecision(<span class="pl-c1">3</span>)<span class="pl-k">===</span><span class="pl-s1"><span class="pl-pds">&quot;</span>16.9<span class="pl-pds">&quot;</span></span>)a.<span class="pl-sc">height</span><span class="pl-k">=</span>d<span class="pl-k">=</span><span class="pl-c1">14</span>;<span class="pl-k">if</span>(e)a.<span class="pl-sc">width</span><span class="pl-k">=</span>Q(d<span class="pl-k">*</span>fa(g))<span class="pl-k">+</span>Q(c<span class="pl-k">*</span>aa(g)),a.<span class="pl-sc">height</span><span class="pl-k">=</span>Q(d<span class="pl-k">*</span>aa(g))<span class="pl-k">+</span>Q(c<span class="pl-k">*</span>fa(g))}<span class="pl-v">this</span>.bBox<span class="pl-k">=</span>a;h<span class="pl-k">&amp;&amp;</span>(b.cache[h]<span class="pl-k">=</span>a)}<span class="pl-k">return</span> a},<span class="pl-en">show</span>:<span class="pl-st">function</span>(<span class="pl-vpf">a</span>){a<span class="pl-k">&amp;&amp;</span><span class="pl-v">this</span>.element.<span class="pl-sc">namespaceURI</span><span class="pl-k">===</span>xa<span class="pl-k">?</span><span class="pl-v">this</span>.element.<span class="pl-s3">removeAttribute</span>(<span class="pl-s1"><span class="pl-pds">&quot;</span>visibility<span class="pl-pds">&quot;</span></span>)<span class="pl-k">:</span><span class="pl-v">this</span>.attr({visibility<span class="pl-k">:</span>a<span class="pl-k">?</span><span class="pl-s1"><span class="pl-pds">&quot;</span>inherit<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s1"><span class="pl-pds">&quot;</span>visible<span class="pl-pds">&quot;</span></span>});<span class="pl-k">return</span> <span class="pl-v">this</span>},</td>
      </tr>
      <tr>
        <td id="L45" class="blob-num js-line-number" data-line-number="45"></td>
        <td id="LC45" class="blob-code js-file-line"><span class="pl-en">hide</span>:<span class="pl-st">function</span>(){<span class="pl-k">return</span> <span class="pl-v">this</span>.attr({visibility<span class="pl-k">:</span><span class="pl-s1"><span class="pl-pds">&quot;</span>hidden<span class="pl-pds">&quot;</span></span>})},<span class="pl-en">fadeOut</span>:<span class="pl-st">function</span>(<span class="pl-vpf">a</span>){<span class="pl-s">var</span> b<span class="pl-k">=</span><span class="pl-v">this</span>;b.animate({opacity<span class="pl-k">:</span><span class="pl-c1">0</span>},{duration<span class="pl-k">:</span>a<span class="pl-k">||</span><span class="pl-c1">150</span>,<span class="pl-en">complete</span>:<span class="pl-st">function</span>(){b.attr({y<span class="pl-k">:-</span><span class="pl-c1">9999</span>})}})},<span class="pl-en">add</span>:<span class="pl-st">function</span>(<span class="pl-vpf">a</span>){<span class="pl-s">var</span> b<span class="pl-k">=</span><span class="pl-v">this</span>.renderer,c<span class="pl-k">=</span>a<span class="pl-k">||</span>b,d<span class="pl-k">=</span>c.element<span class="pl-k">||</span>b.box,e<span class="pl-k">=</span><span class="pl-v">this</span>.element,f<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-sc">zIndex</span>,g,h;<span class="pl-k">if</span>(a)<span class="pl-v">this</span>.parentGroup<span class="pl-k">=</span>a;<span class="pl-v">this</span>.parentInverted<span class="pl-k">=</span>a<span class="pl-k">&amp;&amp;</span>a.inverted;<span class="pl-v">this</span>.textStr<span class="pl-k">!==void</span> <span class="pl-c1">0</span><span class="pl-k">&amp;&amp;</span>b.buildText(<span class="pl-v">this</span>);<span class="pl-k">if</span>(f)c.handleZ<span class="pl-k">=!</span><span class="pl-c1">0</span>,f<span class="pl-k">=</span>y(f);<span class="pl-k">if</span>(c.handleZ){a<span class="pl-k">=</span>d.<span class="pl-sc">childNodes</span>;<span class="pl-k">for</span>(g<span class="pl-k">=</span><span class="pl-c1">0</span>;g<span class="pl-k">&lt;</span>a.<span class="pl-sc">length</span>;g<span class="pl-k">++</span>)<span class="pl-k">if</span>(b<span class="pl-k">=</span>a[g],c<span class="pl-k">=</span>F(b,<span class="pl-s1"><span class="pl-pds">&quot;</span>zIndex<span class="pl-pds">&quot;</span></span>),b<span class="pl-k">!==</span>e<span class="pl-k">&amp;&amp;</span>(y(c)<span class="pl-k">&gt;</span>f<span class="pl-k">||!</span>s(f)<span class="pl-k">&amp;&amp;</span>s(c))){d.<span class="pl-s3">insertBefore</span>(e,</td>
      </tr>
      <tr>
        <td id="L46" class="blob-num js-line-number" data-line-number="46"></td>
        <td id="LC46" class="blob-code js-file-line">b);h<span class="pl-k">=!</span><span class="pl-c1">0</span>;<span class="pl-k">break</span>}}h<span class="pl-k">||</span>d.<span class="pl-s3">appendChild</span>(e);<span class="pl-v">this</span>.added<span class="pl-k">=!</span><span class="pl-c1">0</span>;<span class="pl-k">if</span>(<span class="pl-v">this</span>.onAdd)<span class="pl-v">this</span>.onAdd();<span class="pl-k">return</span> <span class="pl-v">this</span>},<span class="pl-en">safeRemoveChild</span>:<span class="pl-st">function</span>(<span class="pl-vpf">a</span>){<span class="pl-s">var</span> b<span class="pl-k">=</span>a.<span class="pl-sc">parentNode</span>;b<span class="pl-k">&amp;&amp;</span>b.<span class="pl-s3">removeChild</span>(a)},<span class="pl-en">destroy</span>:<span class="pl-st">function</span>(){<span class="pl-s">var</span> a<span class="pl-k">=</span><span class="pl-v">this</span>,b<span class="pl-k">=</span>a.element<span class="pl-k">||</span>{},c<span class="pl-k">=</span>a.shadows,d<span class="pl-k">=</span>a.renderer.isSVG<span class="pl-k">&amp;&amp;</span>b.<span class="pl-sc">nodeName</span><span class="pl-k">===</span><span class="pl-s1"><span class="pl-pds">&quot;</span>SPAN<span class="pl-pds">&quot;</span></span><span class="pl-k">&amp;&amp;</span>a.parentGroup,e,f;b.onclick<span class="pl-k">=</span>b.onmouseout<span class="pl-k">=</span>b.onmouseover<span class="pl-k">=</span>b.onmousemove<span class="pl-k">=</span>b.point<span class="pl-k">=</span><span class="pl-c1">null</span>;bb(a);<span class="pl-k">if</span>(a.clipPath)a.clipPath<span class="pl-k">=</span>a.clipPath.destroy();<span class="pl-k">if</span>(a.stops){<span class="pl-k">for</span>(f<span class="pl-k">=</span><span class="pl-c1">0</span>;f<span class="pl-k">&lt;</span>a.stops.<span class="pl-sc">length</span>;f<span class="pl-k">++</span>)a.stops[f]<span class="pl-k">=</span>a.stops[f].destroy();a.stops<span class="pl-k">=</span><span class="pl-c1">null</span>}a.safeRemoveChild(b);<span class="pl-k">for</span>(c<span class="pl-k">&amp;&amp;</span></td>
      </tr>
      <tr>
        <td id="L47" class="blob-num js-line-number" data-line-number="47"></td>
        <td id="LC47" class="blob-code js-file-line">q(c,<span class="pl-st">function</span>(<span class="pl-vpf">b</span>){a.safeRemoveChild(b)});d<span class="pl-k">&amp;&amp;</span>d.div<span class="pl-k">&amp;&amp;</span>d.div.<span class="pl-sc">childNodes</span>.<span class="pl-sc">length</span><span class="pl-k">===</span><span class="pl-c1">0</span>;)b<span class="pl-k">=</span>d.parentGroup,a.safeRemoveChild(d.div),<span class="pl-k">delete</span> d.div,d<span class="pl-k">=</span>b;a.alignTo<span class="pl-k">&amp;&amp;</span>la(a.renderer.alignedObjects,a);<span class="pl-k">for</span>(e <span class="pl-k">in</span> a)<span class="pl-k">delete</span> a[e];<span class="pl-k">return</span> <span class="pl-c1">null</span>},<span class="pl-en">shadow</span>:<span class="pl-st">function</span>(<span class="pl-vpf">a</span>,<span class="pl-vpf">b</span>,<span class="pl-vpf">c</span>){<span class="pl-s">var</span> d<span class="pl-k">=</span>[],e,f,g<span class="pl-k">=</span><span class="pl-v">this</span>.element,h,i,j,k;<span class="pl-k">if</span>(a){i<span class="pl-k">=</span>p(a.<span class="pl-sc">width</span>,<span class="pl-c1">3</span>);j<span class="pl-k">=</span>(a.opacity<span class="pl-k">||</span><span class="pl-c1">0.15</span>)/i;k<span class="pl-k">=</span><span class="pl-v">this</span>.parentInverted<span class="pl-k">?</span><span class="pl-s1"><span class="pl-pds">&quot;</span>(-1,-1)<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s1"><span class="pl-pds">&quot;</span>(<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>p(a.offsetX,<span class="pl-c1">1</span>)<span class="pl-k">+</span><span class="pl-s1"><span class="pl-pds">&quot;</span>, <span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>p(a.offsetY,<span class="pl-c1">1</span>)<span class="pl-k">+</span><span class="pl-s1"><span class="pl-pds">&quot;</span>)<span class="pl-pds">&quot;</span></span>;<span class="pl-k">for</span>(e<span class="pl-k">=</span><span class="pl-c1">1</span>;e<span class="pl-k">&lt;=</span>i;e<span class="pl-k">++</span>){f<span class="pl-k">=</span>g.<span class="pl-s3">cloneNode</span>(<span class="pl-c1">0</span>);h<span class="pl-k">=</span>i<span class="pl-k">*</span><span class="pl-c1">2</span><span class="pl-k">+</span><span class="pl-c1">1</span><span class="pl-k">-</span><span class="pl-c1">2</span><span class="pl-k">*</span>e;F(f,{isShadow<span class="pl-k">:</span><span class="pl-s1"><span class="pl-pds">&quot;</span>true<span class="pl-pds">&quot;</span></span>,stroke<span class="pl-k">:</span>a.<span class="pl-sc">color</span><span class="pl-k">||</span><span class="pl-s1"><span class="pl-pds">&quot;</span>black<span class="pl-pds">&quot;</span></span>,<span class="pl-s1"><span class="pl-pds">&quot;</span>stroke-opacity<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span>j<span class="pl-k">*</span></td>
      </tr>
      <tr>
        <td id="L48" class="blob-num js-line-number" data-line-number="48"></td>
        <td id="LC48" class="blob-code js-file-line">e,<span class="pl-s1"><span class="pl-pds">&quot;</span>stroke-width<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span>h,transform<span class="pl-k">:</span><span class="pl-s1"><span class="pl-pds">&quot;</span>translate<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>k,fill<span class="pl-k">:</span>P});<span class="pl-k">if</span>(c)F(f,<span class="pl-s1"><span class="pl-pds">&quot;</span>height<span class="pl-pds">&quot;</span></span>,t(F(f,<span class="pl-s1"><span class="pl-pds">&quot;</span>height<span class="pl-pds">&quot;</span></span>)<span class="pl-k">-</span>h,<span class="pl-c1">0</span>)),f.cutHeight<span class="pl-k">=</span>h;b<span class="pl-k">?</span>b.element.<span class="pl-s3">appendChild</span>(f)<span class="pl-k">:</span>g.<span class="pl-sc">parentNode</span>.<span class="pl-s3">insertBefore</span>(f,g);d.<span class="pl-s3">push</span>(f)}<span class="pl-v">this</span>.shadows<span class="pl-k">=</span>d}<span class="pl-k">return</span> <span class="pl-v">this</span>},<span class="pl-en">xGetter</span>:<span class="pl-st">function</span>(<span class="pl-vpf">a</span>){<span class="pl-v">this</span>.element.<span class="pl-sc">nodeName</span><span class="pl-k">===</span><span class="pl-s1"><span class="pl-pds">&quot;</span>circle<span class="pl-pds">&quot;</span></span><span class="pl-k">&amp;&amp;</span>(a<span class="pl-k">=</span>{x<span class="pl-k">:</span><span class="pl-s1"><span class="pl-pds">&quot;</span>cx<span class="pl-pds">&quot;</span></span>,y<span class="pl-k">:</span><span class="pl-s1"><span class="pl-pds">&quot;</span>cy<span class="pl-pds">&quot;</span></span>}[a]<span class="pl-k">||</span>a);<span class="pl-k">return</span> <span class="pl-v">this</span>._defaultGetter(a)},<span class="pl-en">_defaultGetter</span>:<span class="pl-st">function</span>(<span class="pl-vpf">a</span>){a<span class="pl-k">=</span>p(<span class="pl-v">this</span>[a],<span class="pl-v">this</span>.element<span class="pl-k">?</span><span class="pl-v">this</span>.element.<span class="pl-s3">getAttribute</span>(a)<span class="pl-k">:</span><span class="pl-c1">null</span>,<span class="pl-c1">0</span>);/<span class="pl-k">^</span>[\<span class="pl-k">-</span><span class="pl-c1">0</span><span class="pl-k">-</span><span class="pl-c1">9</span>\.]<span class="pl-k">+</span>$/.<span class="pl-s3">test</span>(a)<span class="pl-k">&amp;&amp;</span>(a<span class="pl-k">=</span><span class="pl-s3">parseFloat</span>(a));<span class="pl-k">return</span> a},<span class="pl-en">dSetter</span>:<span class="pl-st">function</span>(<span class="pl-vpf">a</span>,<span class="pl-vpf">b</span>,<span class="pl-vpf">c</span>){a<span class="pl-k">&amp;&amp;</span>a.join<span class="pl-k">&amp;&amp;</span>(a<span class="pl-k">=</span>a.<span class="pl-s3">join</span>(<span class="pl-s1"><span class="pl-pds">&quot;</span> <span class="pl-pds">&quot;</span></span>));</td>
      </tr>
      <tr>
        <td id="L49" class="blob-num js-line-number" data-line-number="49"></td>
        <td id="LC49" class="blob-code js-file-line"><span class="pl-sr"><span class="pl-pds">/</span>(NaN<span class="pl-k">|</span> <span class="pl-k">{2}</span><span class="pl-k">|</span><span class="pl-k">^$</span>)<span class="pl-pds">/</span></span>.<span class="pl-s3">test</span>(a)<span class="pl-k">&amp;&amp;</span>(a<span class="pl-k">=</span><span class="pl-s1"><span class="pl-pds">&quot;</span>M 0 0<span class="pl-pds">&quot;</span></span>);c.<span class="pl-s3">setAttribute</span>(b,a);<span class="pl-v">this</span>[b]<span class="pl-k">=</span>a},<span class="pl-en">dashstyleSetter</span>:<span class="pl-st">function</span>(<span class="pl-vpf">a</span>){<span class="pl-s">var</span> b;<span class="pl-k">if</span>(a<span class="pl-k">=</span>a<span class="pl-k">&amp;&amp;</span>a.<span class="pl-s3">toLowerCase</span>()){a<span class="pl-k">=</span>a.<span class="pl-s3">replace</span>(<span class="pl-s1"><span class="pl-pds">&quot;</span>shortdashdotdot<span class="pl-pds">&quot;</span></span>,<span class="pl-s1"><span class="pl-pds">&quot;</span>3,1,1,1,1,1,<span class="pl-pds">&quot;</span></span>).<span class="pl-s3">replace</span>(<span class="pl-s1"><span class="pl-pds">&quot;</span>shortdashdot<span class="pl-pds">&quot;</span></span>,<span class="pl-s1"><span class="pl-pds">&quot;</span>3,1,1,1<span class="pl-pds">&quot;</span></span>).<span class="pl-s3">replace</span>(<span class="pl-s1"><span class="pl-pds">&quot;</span>shortdot<span class="pl-pds">&quot;</span></span>,<span class="pl-s1"><span class="pl-pds">&quot;</span>1,1,<span class="pl-pds">&quot;</span></span>).<span class="pl-s3">replace</span>(<span class="pl-s1"><span class="pl-pds">&quot;</span>shortdash<span class="pl-pds">&quot;</span></span>,<span class="pl-s1"><span class="pl-pds">&quot;</span>3,1,<span class="pl-pds">&quot;</span></span>).<span class="pl-s3">replace</span>(<span class="pl-s1"><span class="pl-pds">&quot;</span>longdash<span class="pl-pds">&quot;</span></span>,<span class="pl-s1"><span class="pl-pds">&quot;</span>8,3,<span class="pl-pds">&quot;</span></span>).<span class="pl-s3">replace</span>(<span class="pl-sr"><span class="pl-pds">/</span>dot<span class="pl-pds">/</span>g</span>,<span class="pl-s1"><span class="pl-pds">&quot;</span>1,3,<span class="pl-pds">&quot;</span></span>).<span class="pl-s3">replace</span>(<span class="pl-s1"><span class="pl-pds">&quot;</span>dash<span class="pl-pds">&quot;</span></span>,<span class="pl-s1"><span class="pl-pds">&quot;</span>4,3,<span class="pl-pds">&quot;</span></span>).<span class="pl-s3">replace</span>(<span class="pl-sr"><span class="pl-pds">/</span>,<span class="pl-k">$</span><span class="pl-pds">/</span></span>,<span class="pl-s1"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>).<span class="pl-s3">split</span>(<span class="pl-s1"><span class="pl-pds">&quot;</span>,<span class="pl-pds">&quot;</span></span>);<span class="pl-k">for</span>(b<span class="pl-k">=</span>a.<span class="pl-sc">length</span>;b<span class="pl-k">--</span>;)a[b]<span class="pl-k">=</span>y(a[b])<span class="pl-k">*</span><span class="pl-v">this</span>[<span class="pl-s1"><span class="pl-pds">&quot;</span>stroke-width<span class="pl-pds">&quot;</span></span>];a<span class="pl-k">=</span>a.<span class="pl-s3">join</span>(<span class="pl-s1"><span class="pl-pds">&quot;</span>,<span class="pl-pds">&quot;</span></span>).<span class="pl-s3">replace</span>(<span class="pl-s1"><span class="pl-pds">&quot;</span>NaN<span class="pl-pds">&quot;</span></span>,<span class="pl-s1"><span class="pl-pds">&quot;</span>none<span class="pl-pds">&quot;</span></span>);<span class="pl-v">this</span>.element.<span class="pl-s3">setAttribute</span>(<span class="pl-s1"><span class="pl-pds">&quot;</span>stroke-dasharray<span class="pl-pds">&quot;</span></span>,a)}},</td>
      </tr>
      <tr>
        <td id="L50" class="blob-num js-line-number" data-line-number="50"></td>
        <td id="LC50" class="blob-code js-file-line"><span class="pl-en">alignSetter</span>:<span class="pl-st">function</span>(<span class="pl-vpf">a</span>){<span class="pl-v">this</span>.element.<span class="pl-s3">setAttribute</span>(<span class="pl-s1"><span class="pl-pds">&quot;</span>text-anchor<span class="pl-pds">&quot;</span></span>,{left<span class="pl-k">:</span><span class="pl-s1"><span class="pl-pds">&quot;</span>start<span class="pl-pds">&quot;</span></span>,center<span class="pl-k">:</span><span class="pl-s1"><span class="pl-pds">&quot;</span>middle<span class="pl-pds">&quot;</span></span>,right<span class="pl-k">:</span><span class="pl-s1"><span class="pl-pds">&quot;</span>end<span class="pl-pds">&quot;</span></span>}[a])},<span class="pl-en">opacitySetter</span>:<span class="pl-st">function</span>(<span class="pl-vpf">a</span>,<span class="pl-vpf">b</span>,<span class="pl-vpf">c</span>){<span class="pl-v">this</span>[b]<span class="pl-k">=</span>a;c.<span class="pl-s3">setAttribute</span>(b,a)},<span class="pl-en">titleSetter</span>:<span class="pl-st">function</span>(<span class="pl-vpf">a</span>){<span class="pl-s">var</span> b<span class="pl-k">=</span><span class="pl-v">this</span>.element.<span class="pl-s3">getElementsByTagName</span>(<span class="pl-s1"><span class="pl-pds">&quot;</span>title<span class="pl-pds">&quot;</span></span>)[<span class="pl-c1">0</span>];b<span class="pl-k">||</span>(b<span class="pl-k">=</span>x.createElementNS(xa,<span class="pl-s1"><span class="pl-pds">&quot;</span>title<span class="pl-pds">&quot;</span></span>),<span class="pl-v">this</span>.element.<span class="pl-s3">appendChild</span>(b));b.textContent<span class="pl-k">=</span>p(a,<span class="pl-s1"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>).<span class="pl-s3">replace</span>(<span class="pl-sr"><span class="pl-pds">/</span>&lt;<span class="pl-c1">[<span class="pl-k">^</span>&gt;]</span><span class="pl-k">*</span>&gt;<span class="pl-pds">/</span>g</span>,<span class="pl-s1"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>)},<span class="pl-en">textSetter</span>:<span class="pl-st">function</span>(<span class="pl-vpf">a</span>){<span class="pl-k">if</span>(a<span class="pl-k">!==</span><span class="pl-v">this</span>.textStr)<span class="pl-k">delete</span> <span class="pl-v">this</span>.bBox,<span class="pl-v">this</span>.textStr<span class="pl-k">=</span>a,<span class="pl-v">this</span>.added<span class="pl-k">&amp;&amp;</span><span class="pl-v">this</span>.renderer.buildText(<span class="pl-v">this</span>)},<span class="pl-en">fillSetter</span>:<span class="pl-st">function</span>(<span class="pl-vpf">a</span>,<span class="pl-vpf">b</span>,</td>
      </tr>
      <tr>
        <td id="L51" class="blob-num js-line-number" data-line-number="51"></td>
        <td id="LC51" class="blob-code js-file-line"><span class="pl-vpf">c</span>){<span class="pl-k">typeof</span> a<span class="pl-k">===</span><span class="pl-s1"><span class="pl-pds">&quot;</span>string<span class="pl-pds">&quot;</span></span><span class="pl-k">?</span>c.<span class="pl-s3">setAttribute</span>(b,a)<span class="pl-k">:</span>a<span class="pl-k">&amp;&amp;</span><span class="pl-v">this</span>.colorGradient(a,b,c)},<span class="pl-en">zIndexSetter</span>:<span class="pl-st">function</span>(<span class="pl-vpf">a</span>,<span class="pl-vpf">b</span>,<span class="pl-vpf">c</span>){c.<span class="pl-s3">setAttribute</span>(b,a);<span class="pl-v">this</span>[b]<span class="pl-k">=</span>a},<span class="pl-en">_defaultSetter</span>:<span class="pl-st">function</span>(<span class="pl-vpf">a</span>,<span class="pl-vpf">b</span>,<span class="pl-vpf">c</span>){c.<span class="pl-s3">setAttribute</span>(b,a)}};<span class="pl-s3">S</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">yGetter</span><span class="pl-k">=</span>S.<span class="pl-sc">prototype</span>.xGetter;<span class="pl-s3">S</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">translateXSetter</span><span class="pl-k">=</span><span class="pl-s3">S</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">translateYSetter</span><span class="pl-k">=</span><span class="pl-s3">S</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">rotationSetter</span><span class="pl-k">=</span><span class="pl-s3">S</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">verticalAlignSetter</span><span class="pl-k">=</span><span class="pl-s3">S</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">scaleXSetter</span><span class="pl-k">=</span><span class="pl-s3">S</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">scaleYSetter</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>,<span class="pl-vpf">b</span>){<span class="pl-v">this</span>[b]<span class="pl-k">=</span>a;<span class="pl-v">this</span>.doTransform<span class="pl-k">=!</span><span class="pl-c1">0</span>};S.<span class="pl-sc">prototype</span>[<span class="pl-s1"><span class="pl-pds">&quot;</span>stroke-widthSetter<span class="pl-pds">&quot;</span></span>]<span class="pl-k">=</span><span class="pl-s3">S</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">strokeSetter</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>,</td>
      </tr>
      <tr>
        <td id="L52" class="blob-num js-line-number" data-line-number="52"></td>
        <td id="LC52" class="blob-code js-file-line"><span class="pl-vpf">b</span>,<span class="pl-vpf">c</span>){<span class="pl-v">this</span>[b]<span class="pl-k">=</span>a;<span class="pl-k">if</span>(<span class="pl-v">this</span>.stroke<span class="pl-k">&amp;&amp;</span><span class="pl-v">this</span>[<span class="pl-s1"><span class="pl-pds">&quot;</span>stroke-width<span class="pl-pds">&quot;</span></span>])<span class="pl-v">this</span>.strokeWidth<span class="pl-k">=</span><span class="pl-v">this</span>[<span class="pl-s1"><span class="pl-pds">&quot;</span>stroke-width<span class="pl-pds">&quot;</span></span>],S.<span class="pl-sc">prototype</span>.fillSetter.<span class="pl-s3">call</span>(<span class="pl-v">this</span>,<span class="pl-v">this</span>.stroke,<span class="pl-s1"><span class="pl-pds">&quot;</span>stroke<span class="pl-pds">&quot;</span></span>,c),c.<span class="pl-s3">setAttribute</span>(<span class="pl-s1"><span class="pl-pds">&quot;</span>stroke-width<span class="pl-pds">&quot;</span></span>,<span class="pl-v">this</span>[<span class="pl-s1"><span class="pl-pds">&quot;</span>stroke-width<span class="pl-pds">&quot;</span></span>]),<span class="pl-v">this</span>.hasStroke<span class="pl-k">=!</span><span class="pl-c1">0</span>;<span class="pl-k">else</span> <span class="pl-k">if</span>(b<span class="pl-k">===</span><span class="pl-s1"><span class="pl-pds">&quot;</span>stroke-width<span class="pl-pds">&quot;</span></span><span class="pl-k">&amp;&amp;</span>a<span class="pl-k">===</span><span class="pl-c1">0</span><span class="pl-k">&amp;&amp;</span><span class="pl-v">this</span>.hasStroke)c.<span class="pl-s3">removeAttribute</span>(<span class="pl-s1"><span class="pl-pds">&quot;</span>stroke<span class="pl-pds">&quot;</span></span>),<span class="pl-v">this</span>.hasStroke<span class="pl-k">=!</span><span class="pl-c1">1</span>};<span class="pl-s">var</span> <span class="pl-en">ta</span><span class="pl-k">=</span><span class="pl-st">function</span>(){<span class="pl-v">this</span>.init.<span class="pl-s3">apply</span>(<span class="pl-v">this</span>,arguments)};<span class="pl-s3">ta</span>.<span class="pl-sc">prototype</span><span class="pl-k">=</span>{Element<span class="pl-k">:</span>S,<span class="pl-en">init</span>:<span class="pl-st">function</span>(<span class="pl-vpf">a</span>,<span class="pl-vpf">b</span>,<span class="pl-vpf">c</span>,<span class="pl-vpf">d</span>,<span class="pl-vpf">e</span>){<span class="pl-s">var</span> f<span class="pl-k">=</span>location,g,d<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-s3">createElement</span>(<span class="pl-s1"><span class="pl-pds">&quot;</span>svg<span class="pl-pds">&quot;</span></span>).attr({version<span class="pl-k">:</span><span class="pl-s1"><span class="pl-pds">&quot;</span>1.1<span class="pl-pds">&quot;</span></span>}).css(<span class="pl-v">this</span>.getStyle(d));</td>
      </tr>
      <tr>
        <td id="L53" class="blob-num js-line-number" data-line-number="53"></td>
        <td id="LC53" class="blob-code js-file-line">g<span class="pl-k">=</span>d.element;a.<span class="pl-s3">appendChild</span>(g);a.innerHTML.<span class="pl-s3">indexOf</span>(<span class="pl-s1"><span class="pl-pds">&quot;</span>xmlns<span class="pl-pds">&quot;</span></span>)<span class="pl-k">===-</span><span class="pl-c1">1</span><span class="pl-k">&amp;&amp;</span>F(g,<span class="pl-s1"><span class="pl-pds">&quot;</span>xmlns<span class="pl-pds">&quot;</span></span>,xa);<span class="pl-v">this</span>.isSVG<span class="pl-k">=!</span><span class="pl-c1">0</span>;<span class="pl-v">this</span>.box<span class="pl-k">=</span>g;<span class="pl-v">this</span>.boxWrapper<span class="pl-k">=</span>d;<span class="pl-v">this</span>.alignedObjects<span class="pl-k">=</span>[];<span class="pl-v">this</span>.url<span class="pl-k">=</span>(Ua<span class="pl-k">||</span>tb)<span class="pl-k">&amp;&amp;</span>x.<span class="pl-s3">getElementsByTagName</span>(<span class="pl-s1"><span class="pl-pds">&quot;</span>base<span class="pl-pds">&quot;</span></span>).<span class="pl-sc">length</span><span class="pl-k">?</span>f.<span class="pl-sc">href</span>.<span class="pl-s3">replace</span>(<span class="pl-sr"><span class="pl-pds">/</span>#<span class="pl-c1">.</span><span class="pl-k">*?</span><span class="pl-k">$</span><span class="pl-pds">/</span></span>,<span class="pl-s1"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>).<span class="pl-s3">replace</span>(<span class="pl-sr"><span class="pl-pds">/</span>(<span class="pl-c1">[<span class="pl-cce">\(</span>&#39;<span class="pl-cce">\)</span>]</span>)<span class="pl-pds">/</span>g</span>,<span class="pl-s1"><span class="pl-pds">&quot;</span><span class="pl-cce">\\</span>$1<span class="pl-pds">&quot;</span></span>).<span class="pl-s3">replace</span>(<span class="pl-sr"><span class="pl-pds">/</span> <span class="pl-pds">/</span>g</span>,<span class="pl-s1"><span class="pl-pds">&quot;</span>%20<span class="pl-pds">&quot;</span></span>)<span class="pl-k">:</span><span class="pl-s1"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>;<span class="pl-v">this</span>.<span class="pl-s3">createElement</span>(<span class="pl-s1"><span class="pl-pds">&quot;</span>desc<span class="pl-pds">&quot;</span></span>).<span class="pl-s3">add</span>().element.<span class="pl-s3">appendChild</span>(x.<span class="pl-s3">createTextNode</span>(<span class="pl-s1"><span class="pl-pds">&quot;</span>Created with Highcharts 4.0.4<span class="pl-pds">&quot;</span></span>));<span class="pl-v">this</span>.defs<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-s3">createElement</span>(<span class="pl-s1"><span class="pl-pds">&quot;</span>defs<span class="pl-pds">&quot;</span></span>).<span class="pl-s3">add</span>();<span class="pl-v">this</span>.forExport<span class="pl-k">=</span>e;<span class="pl-v">this</span>.gradients<span class="pl-k">=</span>{};<span class="pl-v">this</span>.cache<span class="pl-k">=</span>{};<span class="pl-v">this</span>.setSize(b,c,<span class="pl-k">!</span><span class="pl-c1">1</span>);<span class="pl-s">var</span> h;</td>
      </tr>
      <tr>
        <td id="L54" class="blob-num js-line-number" data-line-number="54"></td>
        <td id="LC54" class="blob-code js-file-line"><span class="pl-k">if</span>(Ua<span class="pl-k">&amp;&amp;</span>a.getBoundingClientRect)<span class="pl-v">this</span>.subPixelFix<span class="pl-k">=</span><span class="pl-en">b</span><span class="pl-k">=</span><span class="pl-st">function</span>(){B(a,{left<span class="pl-k">:</span><span class="pl-c1">0</span>,top<span class="pl-k">:</span><span class="pl-c1">0</span>});h<span class="pl-k">=</span>a.getBoundingClientRect();B(a,{left<span class="pl-k">:</span>La(h.<span class="pl-sc">left</span>)<span class="pl-k">-</span>h.<span class="pl-sc">left</span><span class="pl-k">+</span><span class="pl-s1"><span class="pl-pds">&quot;</span>px<span class="pl-pds">&quot;</span></span>,top<span class="pl-k">:</span>La(h.<span class="pl-sc">top</span>)<span class="pl-k">-</span>h.<span class="pl-sc">top</span><span class="pl-k">+</span><span class="pl-s1"><span class="pl-pds">&quot;</span>px<span class="pl-pds">&quot;</span></span>})},b(),N(G,<span class="pl-s1"><span class="pl-pds">&quot;</span>resize<span class="pl-pds">&quot;</span></span>,b)},<span class="pl-en">getStyle</span>:<span class="pl-st">function</span>(<span class="pl-vpf">a</span>){<span class="pl-k">return</span> <span class="pl-v">this</span>.<span class="pl-sc">style</span><span class="pl-k">=</span>r({fontFamily<span class="pl-k">:</span><span class="pl-s1"><span class="pl-pds">&#39;</span>&quot;Lucida Grande&quot;, &quot;Lucida Sans Unicode&quot;, Arial, Helvetica, sans-serif<span class="pl-pds">&#39;</span></span>,fontSize<span class="pl-k">:</span><span class="pl-s1"><span class="pl-pds">&quot;</span>12px<span class="pl-pds">&quot;</span></span>},a)},<span class="pl-en">isHidden</span>:<span class="pl-st">function</span>(){<span class="pl-k">return</span><span class="pl-k">!</span><span class="pl-v">this</span>.boxWrapper.getBBox().<span class="pl-sc">width</span>},<span class="pl-en">destroy</span>:<span class="pl-st">function</span>(){<span class="pl-s">var</span> a<span class="pl-k">=</span><span class="pl-v">this</span>.defs;<span class="pl-v">this</span>.box<span class="pl-k">=</span><span class="pl-c1">null</span>;<span class="pl-v">this</span>.boxWrapper<span class="pl-k">=</span><span class="pl-v">this</span>.boxWrapper.destroy();Pa(<span class="pl-v">this</span>.gradients<span class="pl-k">||</span></td>
      </tr>
      <tr>
        <td id="L55" class="blob-num js-line-number" data-line-number="55"></td>
        <td id="LC55" class="blob-code js-file-line">{});<span class="pl-v">this</span>.gradients<span class="pl-k">=</span><span class="pl-c1">null</span>;<span class="pl-k">if</span>(a)<span class="pl-v">this</span>.defs<span class="pl-k">=</span>a.destroy();<span class="pl-v">this</span>.subPixelFix<span class="pl-k">&amp;&amp;</span>X(G,<span class="pl-s1"><span class="pl-pds">&quot;</span>resize<span class="pl-pds">&quot;</span></span>,<span class="pl-v">this</span>.subPixelFix);<span class="pl-k">return</span> <span class="pl-v">this</span>.alignedObjects<span class="pl-k">=</span><span class="pl-c1">null</span>},<span class="pl-en">createElement</span>:<span class="pl-st">function</span>(<span class="pl-vpf">a</span>){<span class="pl-s">var</span> b<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">this.Element</span>;b.init(<span class="pl-v">this</span>,a);<span class="pl-k">return</span> b},<span class="pl-en">draw</span>:<span class="pl-st">function</span>(){},<span class="pl-en">buildText</span>:<span class="pl-st">function</span>(<span class="pl-vpf">a</span>){<span class="pl-k">for</span>(<span class="pl-s">var</span> b<span class="pl-k">=</span>a.element,c<span class="pl-k">=</span><span class="pl-v">this</span>,d<span class="pl-k">=</span>c.forExport,e<span class="pl-k">=</span>p(a.textStr,<span class="pl-s1"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>).<span class="pl-s3">toString</span>(),f<span class="pl-k">=</span>e.<span class="pl-s3">indexOf</span>(<span class="pl-s1"><span class="pl-pds">&quot;</span>&lt;<span class="pl-pds">&quot;</span></span>)<span class="pl-k">!==-</span><span class="pl-c1">1</span>,g<span class="pl-k">=</span>b.<span class="pl-sc">childNodes</span>,h,i,j<span class="pl-k">=</span>F(b,<span class="pl-s1"><span class="pl-pds">&quot;</span>x<span class="pl-pds">&quot;</span></span>),k<span class="pl-k">=</span>a.styles,l<span class="pl-k">=</span>a.textWidth,n<span class="pl-k">=</span>k<span class="pl-k">&amp;&amp;</span>k.<span class="pl-sc">lineHeight</span>,m<span class="pl-k">=</span>k<span class="pl-k">&amp;&amp;</span>k.HcTextStroke,o<span class="pl-k">=</span>g.<span class="pl-sc">length</span>,<span class="pl-en">Y</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){<span class="pl-k">return</span> n<span class="pl-k">?</span>y(n)<span class="pl-k">:</span>c.fontMetrics(<span class="pl-sr"><span class="pl-pds">/</span>(px<span class="pl-k">|</span>em)<span class="pl-k">$</span><span class="pl-pds">/</span></span>.<span class="pl-s3">test</span>(a<span class="pl-k">&amp;&amp;</span></td>
      </tr>
      <tr>
        <td id="L56" class="blob-num js-line-number" data-line-number="56"></td>
        <td id="LC56" class="blob-code js-file-line">a.<span class="pl-sc">style</span>.<span class="pl-sc">fontSize</span>)<span class="pl-k">?</span>a.<span class="pl-sc">style</span>.<span class="pl-sc">fontSize</span><span class="pl-k">:</span>k<span class="pl-k">&amp;&amp;</span>k.<span class="pl-sc">fontSize</span><span class="pl-k">||</span>c.<span class="pl-sc">style</span>.<span class="pl-sc">fontSize</span><span class="pl-k">||</span><span class="pl-c1">12</span>,a).h};o<span class="pl-k">--</span>;)b.<span class="pl-s3">removeChild</span>(g[o]);<span class="pl-k">!</span>f<span class="pl-k">&amp;&amp;!</span>m<span class="pl-k">&amp;&amp;</span>e.<span class="pl-s3">indexOf</span>(<span class="pl-s1"><span class="pl-pds">&quot;</span> <span class="pl-pds">&quot;</span></span>)<span class="pl-k">===-</span><span class="pl-c1">1</span><span class="pl-k">?</span>b.<span class="pl-s3">appendChild</span>(x.<span class="pl-s3">createTextNode</span>(e))<span class="pl-k">:</span>(h<span class="pl-k">=</span><span class="pl-sr"><span class="pl-pds">/</span>&lt;<span class="pl-c1">.</span><span class="pl-k">*</span>style=&quot;(<span class="pl-c1">[<span class="pl-k">^</span>&quot;]</span><span class="pl-k">+</span>)&quot;<span class="pl-c1">.</span><span class="pl-k">*</span>&gt;<span class="pl-pds">/</span></span>,i<span class="pl-k">=</span><span class="pl-sr"><span class="pl-pds">/</span>&lt;<span class="pl-c1">.</span><span class="pl-k">*</span>href=&quot;(http<span class="pl-c1">[<span class="pl-k">^</span>&quot;]</span><span class="pl-k">+</span>)&quot;<span class="pl-c1">.</span><span class="pl-k">*</span>&gt;<span class="pl-pds">/</span></span>,l<span class="pl-k">&amp;&amp;!</span>a.added<span class="pl-k">&amp;&amp;</span><span class="pl-v">this</span>.box.<span class="pl-s3">appendChild</span>(b),e<span class="pl-k">=</span>f<span class="pl-k">?</span>e.<span class="pl-s3">replace</span>(<span class="pl-sr"><span class="pl-pds">/</span>&lt;(b<span class="pl-k">|</span>strong)&gt;<span class="pl-pds">/</span>g</span>,<span class="pl-s1"><span class="pl-pds">&#39;</span>&lt;span style=&quot;font-weight:bold&quot;&gt;<span class="pl-pds">&#39;</span></span>).<span class="pl-s3">replace</span>(<span class="pl-sr"><span class="pl-pds">/</span>&lt;(i<span class="pl-k">|</span>em)&gt;<span class="pl-pds">/</span>g</span>,<span class="pl-s1"><span class="pl-pds">&#39;</span>&lt;span style=&quot;font-style:italic&quot;&gt;<span class="pl-pds">&#39;</span></span>).<span class="pl-s3">replace</span>(<span class="pl-sr"><span class="pl-pds">/</span>&lt;a<span class="pl-pds">/</span>g</span>,<span class="pl-s1"><span class="pl-pds">&quot;</span>&lt;span<span class="pl-pds">&quot;</span></span>).<span class="pl-s3">replace</span>(<span class="pl-sr"><span class="pl-pds">/</span>&lt;<span class="pl-cce">\/</span>(b<span class="pl-k">|</span>strong<span class="pl-k">|</span>i<span class="pl-k">|</span>em<span class="pl-k">|</span>a)&gt;<span class="pl-pds">/</span>g</span>,<span class="pl-s1"><span class="pl-pds">&quot;</span>&lt;/span&gt;<span class="pl-pds">&quot;</span></span>).<span class="pl-s3">split</span>(<span class="pl-sr"><span class="pl-pds">/</span>&lt;br<span class="pl-c1">.</span><span class="pl-k">*?</span>&gt;<span class="pl-pds">/</span>g</span>)<span class="pl-k">:</span>[e],e[e.<span class="pl-sc">length</span><span class="pl-k">-</span><span class="pl-c1">1</span>]<span class="pl-k">===</span><span class="pl-s1"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span><span class="pl-k">&amp;&amp;</span>e.<span class="pl-s3">pop</span>(),q(e,<span class="pl-st">function</span>(<span class="pl-vpf">e</span>,</td>
      </tr>
      <tr>
        <td id="L57" class="blob-num js-line-number" data-line-number="57"></td>
        <td id="LC57" class="blob-code js-file-line"><span class="pl-vpf">f</span>){<span class="pl-s">var</span> g,n<span class="pl-k">=</span><span class="pl-c1">0</span>,e<span class="pl-k">=</span>e.<span class="pl-s3">replace</span>(<span class="pl-sr"><span class="pl-pds">/</span>&lt;span<span class="pl-pds">/</span>g</span>,<span class="pl-s1"><span class="pl-pds">&quot;</span>|||&lt;span<span class="pl-pds">&quot;</span></span>).<span class="pl-s3">replace</span>(<span class="pl-sr"><span class="pl-pds">/</span>&lt;<span class="pl-cce">\/</span>span&gt;<span class="pl-pds">/</span>g</span>,<span class="pl-s1"><span class="pl-pds">&quot;</span>&lt;/span&gt;|||<span class="pl-pds">&quot;</span></span>);g<span class="pl-k">=</span>e.<span class="pl-s3">split</span>(<span class="pl-s1"><span class="pl-pds">&quot;</span>|||<span class="pl-pds">&quot;</span></span>);q(g,<span class="pl-st">function</span>(<span class="pl-vpf">e</span>){<span class="pl-k">if</span>(e<span class="pl-k">!==</span><span class="pl-s1"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span><span class="pl-k">||</span>g.<span class="pl-sc">length</span><span class="pl-k">===</span><span class="pl-c1">1</span>){<span class="pl-s">var</span> m<span class="pl-k">=</span>{},o<span class="pl-k">=</span>x.createElementNS(xa,<span class="pl-s1"><span class="pl-pds">&quot;</span>tspan<span class="pl-pds">&quot;</span></span>),p;h.<span class="pl-s3">test</span>(e)<span class="pl-k">&amp;&amp;</span>(p<span class="pl-k">=</span>e.<span class="pl-s3">match</span>(h)[<span class="pl-c1">1</span>].<span class="pl-s3">replace</span>(<span class="pl-sr"><span class="pl-pds">/</span>(;<span class="pl-k">|</span> <span class="pl-k">|</span><span class="pl-k">^</span>)color(<span class="pl-c1">[ :]</span>)<span class="pl-pds">/</span></span>,<span class="pl-s1"><span class="pl-pds">&quot;</span>$1fill$2<span class="pl-pds">&quot;</span></span>),F(o,<span class="pl-s1"><span class="pl-pds">&quot;</span>style<span class="pl-pds">&quot;</span></span>,p));i.<span class="pl-s3">test</span>(e)<span class="pl-k">&amp;&amp;!</span>d<span class="pl-k">&amp;&amp;</span>(F(o,<span class="pl-s1"><span class="pl-pds">&quot;</span>onclick<span class="pl-pds">&quot;</span></span>,<span class="pl-s1"><span class="pl-pds">&#39;</span>location.href=&quot;<span class="pl-pds">&#39;</span></span><span class="pl-k">+</span>e.<span class="pl-s3">match</span>(i)[<span class="pl-c1">1</span>]<span class="pl-k">+</span><span class="pl-s1"><span class="pl-pds">&#39;</span>&quot;<span class="pl-pds">&#39;</span></span>),B(o,{cursor<span class="pl-k">:</span><span class="pl-s1"><span class="pl-pds">&quot;</span>pointer<span class="pl-pds">&quot;</span></span>}));e<span class="pl-k">=</span>(e.<span class="pl-s3">replace</span>(<span class="pl-sr"><span class="pl-pds">/</span>&lt;(<span class="pl-c1">.</span><span class="pl-k">|</span><span class="pl-cce">\n</span>)<span class="pl-k">*?</span>&gt;<span class="pl-pds">/</span>g</span>,<span class="pl-s1"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>)<span class="pl-k">||</span><span class="pl-s1"><span class="pl-pds">&quot;</span> <span class="pl-pds">&quot;</span></span>).<span class="pl-s3">replace</span>(<span class="pl-sr"><span class="pl-pds">/</span>&amp;lt;<span class="pl-pds">/</span>g</span>,<span class="pl-s1"><span class="pl-pds">&quot;</span>&lt;<span class="pl-pds">&quot;</span></span>).<span class="pl-s3">replace</span>(<span class="pl-sr"><span class="pl-pds">/</span>&amp;gt;<span class="pl-pds">/</span>g</span>,<span class="pl-s1"><span class="pl-pds">&quot;</span>&gt;<span class="pl-pds">&quot;</span></span>);<span class="pl-k">if</span>(e<span class="pl-k">!==</span><span class="pl-s1"><span class="pl-pds">&quot;</span> <span class="pl-pds">&quot;</span></span>){o.<span class="pl-s3">appendChild</span>(x.<span class="pl-s3">createTextNode</span>(e));<span class="pl-k">if</span>(n)m.dx<span class="pl-k">=</span><span class="pl-c1">0</span>;<span class="pl-k">else</span> <span class="pl-k">if</span>(f<span class="pl-k">&amp;&amp;</span></td>
      </tr>
      <tr>
        <td id="L58" class="blob-num js-line-number" data-line-number="58"></td>
        <td id="LC58" class="blob-code js-file-line">j<span class="pl-k">!==</span><span class="pl-c1">null</span>)m.<span class="pl-sc">x</span><span class="pl-k">=</span>j;F(o,m);b.<span class="pl-s3">appendChild</span>(o);<span class="pl-k">!</span>n<span class="pl-k">&amp;&amp;</span>f<span class="pl-k">&amp;&amp;</span>(<span class="pl-k">!</span>ba<span class="pl-k">&amp;&amp;</span>d<span class="pl-k">&amp;&amp;</span>B(o,{display<span class="pl-k">:</span><span class="pl-s1"><span class="pl-pds">&quot;</span>block<span class="pl-pds">&quot;</span></span>}),F(o,<span class="pl-s1"><span class="pl-pds">&quot;</span>dy<span class="pl-pds">&quot;</span></span>,Y(o)));<span class="pl-k">if</span>(l)<span class="pl-k">for</span>(<span class="pl-s">var</span> e<span class="pl-k">=</span>e.<span class="pl-s3">replace</span>(<span class="pl-sr"><span class="pl-pds">/</span>(<span class="pl-c1">[<span class="pl-k">^</span><span class="pl-cce">\^</span>]</span>)-<span class="pl-pds">/</span>g</span>,<span class="pl-s1"><span class="pl-pds">&quot;</span>$1- <span class="pl-pds">&quot;</span></span>).<span class="pl-s3">split</span>(<span class="pl-s1"><span class="pl-pds">&quot;</span> <span class="pl-pds">&quot;</span></span>),m<span class="pl-k">=</span>g.<span class="pl-sc">length</span><span class="pl-k">&gt;</span><span class="pl-c1">1</span><span class="pl-k">||</span>e.<span class="pl-sc">length</span><span class="pl-k">&gt;</span><span class="pl-c1">1</span><span class="pl-k">&amp;&amp;</span>k.<span class="pl-sc">whiteSpace</span><span class="pl-k">!==</span><span class="pl-s1"><span class="pl-pds">&quot;</span>nowrap<span class="pl-pds">&quot;</span></span>,q,D,s<span class="pl-k">=</span>k.HcHeight,t<span class="pl-k">=</span>[],u<span class="pl-k">=</span>Y(o),Lb<span class="pl-k">=</span><span class="pl-c1">1</span>;m<span class="pl-k">&amp;&amp;</span>(e.<span class="pl-sc">length</span><span class="pl-k">||</span>t.<span class="pl-sc">length</span>);)<span class="pl-k">delete</span> a.bBox,q<span class="pl-k">=</span>a.getBBox(),D<span class="pl-k">=</span>q.<span class="pl-sc">width</span>,<span class="pl-k">!</span>ba<span class="pl-k">&amp;&amp;</span>c.forExport<span class="pl-k">&amp;&amp;</span>(D<span class="pl-k">=</span>c.measureSpanWidth(o.<span class="pl-sc">firstChild</span>.<span class="pl-sc">data</span>,a.styles)),q<span class="pl-k">=</span>D<span class="pl-k">&gt;</span>l,<span class="pl-k">!</span>q<span class="pl-k">||</span>e.<span class="pl-sc">length</span><span class="pl-k">===</span><span class="pl-c1">1</span><span class="pl-k">?</span>(e<span class="pl-k">=</span>t,t<span class="pl-k">=</span>[],e.<span class="pl-sc">length</span><span class="pl-k">&amp;&amp;</span>(Lb<span class="pl-k">++</span>,s<span class="pl-k">&amp;&amp;</span>Lb<span class="pl-k">*</span>u<span class="pl-k">&gt;</span>s<span class="pl-k">?</span>(e<span class="pl-k">=</span>[<span class="pl-s1"><span class="pl-pds">&quot;</span>...<span class="pl-pds">&quot;</span></span>],a.attr(<span class="pl-s1"><span class="pl-pds">&quot;</span>title<span class="pl-pds">&quot;</span></span>,a.textStr))<span class="pl-k">:</span>(o<span class="pl-k">=</span>x.createElementNS(xa,<span class="pl-s1"><span class="pl-pds">&quot;</span>tspan<span class="pl-pds">&quot;</span></span>),F(o,{dy<span class="pl-k">:</span>u,</td>
      </tr>
      <tr>
        <td id="L59" class="blob-num js-line-number" data-line-number="59"></td>
        <td id="LC59" class="blob-code js-file-line">x<span class="pl-k">:</span>j}),p<span class="pl-k">&amp;&amp;</span>F(o,<span class="pl-s1"><span class="pl-pds">&quot;</span>style<span class="pl-pds">&quot;</span></span>,p),b.<span class="pl-s3">appendChild</span>(o))),D<span class="pl-k">&gt;</span>l<span class="pl-k">&amp;&amp;</span>(l<span class="pl-k">=</span>D))<span class="pl-k">:</span>(o.<span class="pl-s3">removeChild</span>(o.<span class="pl-sc">firstChild</span>),t.<span class="pl-s3">unshift</span>(e.<span class="pl-s3">pop</span>())),e.<span class="pl-sc">length</span><span class="pl-k">&amp;&amp;</span>o.<span class="pl-s3">appendChild</span>(x.<span class="pl-s3">createTextNode</span>(e.<span class="pl-s3">join</span>(<span class="pl-s1"><span class="pl-pds">&quot;</span> <span class="pl-pds">&quot;</span></span>).<span class="pl-s3">replace</span>(<span class="pl-sr"><span class="pl-pds">/</span>- <span class="pl-pds">/</span>g</span>,<span class="pl-s1"><span class="pl-pds">&quot;</span>-<span class="pl-pds">&quot;</span></span>)));n<span class="pl-k">++</span>}}})}))},<span class="pl-en">button</span>:<span class="pl-st">function</span>(<span class="pl-vpf">a</span>,<span class="pl-vpf">b</span>,<span class="pl-vpf">c</span>,<span class="pl-vpf">d</span>,<span class="pl-vpf">e</span>,<span class="pl-vpf">f</span>,<span class="pl-vpf">g</span>,<span class="pl-vpf">h</span>,<span class="pl-vpf">i</span>){<span class="pl-s">var</span> j<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-sc">label</span>(a,b,c,i,<span class="pl-c1">null</span>,<span class="pl-c1">null</span>,<span class="pl-c1">null</span>,<span class="pl-c1">null</span>,<span class="pl-s1"><span class="pl-pds">&quot;</span>button<span class="pl-pds">&quot;</span></span>),k<span class="pl-k">=</span><span class="pl-c1">0</span>,l,n,m,o,p,q,a<span class="pl-k">=</span>{x1<span class="pl-k">:</span><span class="pl-c1">0</span>,y1<span class="pl-k">:</span><span class="pl-c1">0</span>,x2<span class="pl-k">:</span><span class="pl-c1">0</span>,y2<span class="pl-k">:</span><span class="pl-c1">1</span>},e<span class="pl-k">=</span>w({<span class="pl-s1"><span class="pl-pds">&quot;</span>stroke-width<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-c1">1</span>,stroke<span class="pl-k">:</span><span class="pl-s1"><span class="pl-pds">&quot;</span>#CCCCCC<span class="pl-pds">&quot;</span></span>,fill<span class="pl-k">:</span>{linearGradient<span class="pl-k">:</span>a,stops<span class="pl-k">:</span>[[<span class="pl-c1">0</span>,<span class="pl-s1"><span class="pl-pds">&quot;</span>#FEFEFE<span class="pl-pds">&quot;</span></span>],[<span class="pl-c1">1</span>,<span class="pl-s1"><span class="pl-pds">&quot;</span>#F6F6F6<span class="pl-pds">&quot;</span></span>]]},r<span class="pl-k">:</span><span class="pl-c1">2</span>,padding<span class="pl-k">:</span><span class="pl-c1">5</span>,style<span class="pl-k">:</span>{color<span class="pl-k">:</span><span class="pl-s1"><span class="pl-pds">&quot;</span>black<span class="pl-pds">&quot;</span></span>}},e);m<span class="pl-k">=</span>e.<span class="pl-sc">style</span>;<span class="pl-k">delete</span> e.<span class="pl-sc">style</span>;f<span class="pl-k">=</span>w(e,{stroke<span class="pl-k">:</span><span class="pl-s1"><span class="pl-pds">&quot;</span>#68A<span class="pl-pds">&quot;</span></span>,</td>
      </tr>
      <tr>
        <td id="L60" class="blob-num js-line-number" data-line-number="60"></td>
        <td id="LC60" class="blob-code js-file-line">fill<span class="pl-k">:</span>{linearGradient<span class="pl-k">:</span>a,stops<span class="pl-k">:</span>[[<span class="pl-c1">0</span>,<span class="pl-s1"><span class="pl-pds">&quot;</span>#FFF<span class="pl-pds">&quot;</span></span>],[<span class="pl-c1">1</span>,<span class="pl-s1"><span class="pl-pds">&quot;</span>#ACF<span class="pl-pds">&quot;</span></span>]]}},f);o<span class="pl-k">=</span>f.<span class="pl-sc">style</span>;<span class="pl-k">delete</span> f.<span class="pl-sc">style</span>;g<span class="pl-k">=</span>w(e,{stroke<span class="pl-k">:</span><span class="pl-s1"><span class="pl-pds">&quot;</span>#68A<span class="pl-pds">&quot;</span></span>,fill<span class="pl-k">:</span>{linearGradient<span class="pl-k">:</span>a,stops<span class="pl-k">:</span>[[<span class="pl-c1">0</span>,<span class="pl-s1"><span class="pl-pds">&quot;</span>#9BD<span class="pl-pds">&quot;</span></span>],[<span class="pl-c1">1</span>,<span class="pl-s1"><span class="pl-pds">&quot;</span>#CDF<span class="pl-pds">&quot;</span></span>]]}},g);p<span class="pl-k">=</span>g.<span class="pl-sc">style</span>;<span class="pl-k">delete</span> g.<span class="pl-sc">style</span>;h<span class="pl-k">=</span>w(e,{style<span class="pl-k">:</span>{color<span class="pl-k">:</span><span class="pl-s1"><span class="pl-pds">&quot;</span>#CCC<span class="pl-pds">&quot;</span></span>}},h);q<span class="pl-k">=</span>h.<span class="pl-sc">style</span>;<span class="pl-k">delete</span> h.<span class="pl-sc">style</span>;N(j.element,Aa<span class="pl-k">?</span><span class="pl-s1"><span class="pl-pds">&quot;</span>mouseover<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s1"><span class="pl-pds">&quot;</span>mouseenter<span class="pl-pds">&quot;</span></span>,<span class="pl-st">function</span>(){k<span class="pl-k">!==</span><span class="pl-c1">3</span><span class="pl-k">&amp;&amp;</span>j.attr(f).css(o)});N(j.element,Aa<span class="pl-k">?</span><span class="pl-s1"><span class="pl-pds">&quot;</span>mouseout<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s1"><span class="pl-pds">&quot;</span>mouseleave<span class="pl-pds">&quot;</span></span>,<span class="pl-st">function</span>(){k<span class="pl-k">!==</span><span class="pl-c1">3</span><span class="pl-k">&amp;&amp;</span>(l<span class="pl-k">=</span>[e,f,g][k],n<span class="pl-k">=</span>[m,o,p][k],j.attr(l).css(n))});<span class="pl-s3">j</span>.<span class="pl-en">setState</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){(j.state<span class="pl-k">=</span>k<span class="pl-k">=</span>a)<span class="pl-k">?</span>a<span class="pl-k">===</span><span class="pl-c1">2</span><span class="pl-k">?</span>j.attr(g).css(p)<span class="pl-k">:</span>a<span class="pl-k">===</span><span class="pl-c1">3</span><span class="pl-k">&amp;&amp;</span>j.attr(h).css(q)<span class="pl-k">:</span></td>
      </tr>
      <tr>
        <td id="L61" class="blob-num js-line-number" data-line-number="61"></td>
        <td id="LC61" class="blob-code js-file-line">j.attr(e).css(m)};<span class="pl-k">return</span> j.on(<span class="pl-s1"><span class="pl-pds">&quot;</span>click<span class="pl-pds">&quot;</span></span>,<span class="pl-st">function</span>(){k<span class="pl-k">!==</span><span class="pl-c1">3</span><span class="pl-k">&amp;&amp;</span>d.<span class="pl-s3">call</span>(j)}).attr(e).css(r({cursor<span class="pl-k">:</span><span class="pl-s1"><span class="pl-pds">&quot;</span>default<span class="pl-pds">&quot;</span></span>},m))},<span class="pl-en">crispLine</span>:<span class="pl-st">function</span>(<span class="pl-vpf">a</span>,<span class="pl-vpf">b</span>){a[<span class="pl-c1">1</span>]<span class="pl-k">===</span>a[<span class="pl-c1">4</span>]<span class="pl-k">&amp;&amp;</span>(a[<span class="pl-c1">1</span>]<span class="pl-k">=</span>a[<span class="pl-c1">4</span>]<span class="pl-k">=</span>v(a[<span class="pl-c1">1</span>])<span class="pl-k">-</span>b<span class="pl-k">%</span><span class="pl-c1">2</span>/<span class="pl-c1">2</span>);a[<span class="pl-c1">2</span>]<span class="pl-k">===</span>a[<span class="pl-c1">5</span>]<span class="pl-k">&amp;&amp;</span>(a[<span class="pl-c1">2</span>]<span class="pl-k">=</span>a[<span class="pl-c1">5</span>]<span class="pl-k">=</span>v(a[<span class="pl-c1">2</span>])<span class="pl-k">+</span>b<span class="pl-k">%</span><span class="pl-c1">2</span>/<span class="pl-c1">2</span>);<span class="pl-k">return</span> a},<span class="pl-en">path</span>:<span class="pl-st">function</span>(<span class="pl-vpf">a</span>){<span class="pl-s">var</span> b<span class="pl-k">=</span>{fill<span class="pl-k">:</span>P};Ha(a)<span class="pl-k">?</span>b.d<span class="pl-k">=</span>a<span class="pl-k">:</span>da(a)<span class="pl-k">&amp;&amp;</span>r(b,a);<span class="pl-k">return</span> <span class="pl-v">this</span>.<span class="pl-s3">createElement</span>(<span class="pl-s1"><span class="pl-pds">&quot;</span>path<span class="pl-pds">&quot;</span></span>).attr(b)},<span class="pl-en">circle</span>:<span class="pl-st">function</span>(<span class="pl-vpf">a</span>,<span class="pl-vpf">b</span>,<span class="pl-vpf">c</span>){a<span class="pl-k">=</span>da(a)<span class="pl-k">?</span>a<span class="pl-k">:</span>{x<span class="pl-k">:</span>a,y<span class="pl-k">:</span>b,r<span class="pl-k">:</span>c};b<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-s3">createElement</span>(<span class="pl-s1"><span class="pl-pds">&quot;</span>circle<span class="pl-pds">&quot;</span></span>);<span class="pl-s3">b</span>.<span class="pl-en">xSetter</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){<span class="pl-v">this</span>.element.<span class="pl-s3">setAttribute</span>(<span class="pl-s1"><span class="pl-pds">&quot;</span>cx<span class="pl-pds">&quot;</span></span>,a)};<span class="pl-s3">b</span>.<span class="pl-en">ySetter</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){<span class="pl-v">this</span>.element.<span class="pl-s3">setAttribute</span>(<span class="pl-s1"><span class="pl-pds">&quot;</span>cy<span class="pl-pds">&quot;</span></span>,</td>
      </tr>
      <tr>
        <td id="L62" class="blob-num js-line-number" data-line-number="62"></td>
        <td id="LC62" class="blob-code js-file-line">a)};<span class="pl-k">return</span> b.attr(a)},<span class="pl-en">arc</span>:<span class="pl-st">function</span>(<span class="pl-vpf">a</span>,<span class="pl-vpf">b</span>,<span class="pl-vpf">c</span>,<span class="pl-vpf">d</span>,<span class="pl-vpf">e</span>,<span class="pl-vpf">f</span>){<span class="pl-k">if</span>(da(a))b<span class="pl-k">=</span>a.<span class="pl-sc">y</span>,c<span class="pl-k">=</span>a.r,d<span class="pl-k">=</span>a.innerR,e<span class="pl-k">=</span>a.<span class="pl-sc">start</span>,f<span class="pl-k">=</span>a.end,a<span class="pl-k">=</span>a.<span class="pl-sc">x</span>;a<span class="pl-k">=</span><span class="pl-v">this</span>.symbol(<span class="pl-s1"><span class="pl-pds">&quot;</span>arc<span class="pl-pds">&quot;</span></span>,a<span class="pl-k">||</span><span class="pl-c1">0</span>,b<span class="pl-k">||</span><span class="pl-c1">0</span>,c<span class="pl-k">||</span><span class="pl-c1">0</span>,c<span class="pl-k">||</span><span class="pl-c1">0</span>,{innerR<span class="pl-k">:</span>d<span class="pl-k">||</span><span class="pl-c1">0</span>,start<span class="pl-k">:</span>e<span class="pl-k">||</span><span class="pl-c1">0</span>,end<span class="pl-k">:</span>f<span class="pl-k">||</span><span class="pl-c1">0</span>});a.r<span class="pl-k">=</span>c;<span class="pl-k">return</span> a},<span class="pl-en">rect</span>:<span class="pl-st">function</span>(<span class="pl-vpf">a</span>,<span class="pl-vpf">b</span>,<span class="pl-vpf">c</span>,<span class="pl-vpf">d</span>,<span class="pl-vpf">e</span>,<span class="pl-vpf">f</span>){<span class="pl-s">var</span> e<span class="pl-k">=</span>da(a)<span class="pl-k">?</span>a.r<span class="pl-k">:</span>e,g<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-s3">createElement</span>(<span class="pl-s1"><span class="pl-pds">&quot;</span>rect<span class="pl-pds">&quot;</span></span>),a<span class="pl-k">=</span>da(a)<span class="pl-k">?</span>a<span class="pl-k">:</span>a<span class="pl-k">===</span>u<span class="pl-k">?</span>{}<span class="pl-k">:</span>{x<span class="pl-k">:</span>a,y<span class="pl-k">:</span>b,width<span class="pl-k">:</span>t(c,<span class="pl-c1">0</span>),height<span class="pl-k">:</span>t(d,<span class="pl-c1">0</span>)};<span class="pl-k">if</span>(f<span class="pl-k">!==</span>u)a.strokeWidth<span class="pl-k">=</span>f,a<span class="pl-k">=</span>g.crisp(a);<span class="pl-k">if</span>(e)a.r<span class="pl-k">=</span>e;<span class="pl-s3">g</span>.<span class="pl-en">rSetter</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){F(<span class="pl-v">this</span>.element,{rx<span class="pl-k">:</span>a,ry<span class="pl-k">:</span>a})};<span class="pl-k">return</span> g.attr(a)},<span class="pl-en">setSize</span>:<span class="pl-st">function</span>(<span class="pl-vpf">a</span>,<span class="pl-vpf">b</span>,<span class="pl-vpf">c</span>){<span class="pl-s">var</span> d<span class="pl-k">=</span><span class="pl-v">this</span>.alignedObjects,e<span class="pl-k">=</span>d.<span class="pl-sc">length</span>;</td>
      </tr>
      <tr>
        <td id="L63" class="blob-num js-line-number" data-line-number="63"></td>
        <td id="LC63" class="blob-code js-file-line"><span class="pl-v">this</span>.<span class="pl-sc">width</span><span class="pl-k">=</span>a;<span class="pl-v">this</span>.<span class="pl-sc">height</span><span class="pl-k">=</span>b;<span class="pl-k">for</span>(<span class="pl-v">this</span>.boxWrapper[p(c,<span class="pl-k">!</span><span class="pl-c1">0</span>)<span class="pl-k">?</span><span class="pl-s1"><span class="pl-pds">&quot;</span>animate<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s1"><span class="pl-pds">&quot;</span>attr<span class="pl-pds">&quot;</span></span>]({width<span class="pl-k">:</span>a,height<span class="pl-k">:</span>b});e<span class="pl-k">--</span>;)d[e].<span class="pl-sc">align</span>()},<span class="pl-en">g</span>:<span class="pl-st">function</span>(<span class="pl-vpf">a</span>){<span class="pl-s">var</span> b<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-s3">createElement</span>(<span class="pl-s1"><span class="pl-pds">&quot;</span>g<span class="pl-pds">&quot;</span></span>);<span class="pl-k">return</span> s(a)<span class="pl-k">?</span>b.attr({<span class="pl-s1"><span class="pl-pds">&quot;</span>class<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s1"><span class="pl-pds">&quot;</span>highcharts-<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>a})<span class="pl-k">:</span>b},<span class="pl-en">image</span>:<span class="pl-st">function</span>(<span class="pl-vpf">a</span>,<span class="pl-vpf">b</span>,<span class="pl-vpf">c</span>,<span class="pl-vpf">d</span>,<span class="pl-vpf">e</span>){<span class="pl-s">var</span> f<span class="pl-k">=</span>{preserveAspectRatio<span class="pl-k">:</span>P};arguments.<span class="pl-sc">length</span><span class="pl-k">&gt;</span><span class="pl-c1">1</span><span class="pl-k">&amp;&amp;</span>r(f,{x<span class="pl-k">:</span>b,y<span class="pl-k">:</span>c,width<span class="pl-k">:</span>d,height<span class="pl-k">:</span>e});f<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-s3">createElement</span>(<span class="pl-s1"><span class="pl-pds">&quot;</span>image<span class="pl-pds">&quot;</span></span>).attr(f);f.element.setAttributeNS<span class="pl-k">?</span>f.element.setAttributeNS(<span class="pl-s1"><span class="pl-pds">&quot;</span>http://www.w3.org/1999/xlink<span class="pl-pds">&quot;</span></span>,<span class="pl-s1"><span class="pl-pds">&quot;</span>href<span class="pl-pds">&quot;</span></span>,a)<span class="pl-k">:</span>f.element.<span class="pl-s3">setAttribute</span>(<span class="pl-s1"><span class="pl-pds">&quot;</span>hc-svg-href<span class="pl-pds">&quot;</span></span>,a);<span class="pl-k">return</span> f},<span class="pl-en">symbol</span>:<span class="pl-st">function</span>(<span class="pl-vpf">a</span>,</td>
      </tr>
      <tr>
        <td id="L64" class="blob-num js-line-number" data-line-number="64"></td>
        <td id="LC64" class="blob-code js-file-line"><span class="pl-vpf">b</span>,<span class="pl-vpf">c</span>,<span class="pl-vpf">d</span>,<span class="pl-vpf">e</span>,<span class="pl-vpf">f</span>){<span class="pl-s">var</span> g,h<span class="pl-k">=</span><span class="pl-v">this</span>.symbols[a],h<span class="pl-k">=</span>h<span class="pl-k">&amp;&amp;</span>h(v(b),v(c),d,e,f),i<span class="pl-k">=</span><span class="pl-sr"><span class="pl-pds">/</span><span class="pl-k">^</span>url<span class="pl-cce">\(</span>(<span class="pl-c1">.</span><span class="pl-k">*?</span>)<span class="pl-cce">\)</span><span class="pl-k">$</span><span class="pl-pds">/</span></span>,j,k;<span class="pl-k">if</span>(h)g<span class="pl-k">=</span><span class="pl-v">this</span>.path(h),r(g,{symbolName<span class="pl-k">:</span>a,x<span class="pl-k">:</span>b,y<span class="pl-k">:</span>c,width<span class="pl-k">:</span>d,height<span class="pl-k">:</span>e}),f<span class="pl-k">&amp;&amp;</span>r(g,f);<span class="pl-k">else</span> <span class="pl-k">if</span>(i.<span class="pl-s3">test</span>(a))<span class="pl-en">k</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>,<span class="pl-vpf">b</span>){a.element<span class="pl-k">&amp;&amp;</span>(a.attr({width<span class="pl-k">:</span>b[<span class="pl-c1">0</span>],height<span class="pl-k">:</span>b[<span class="pl-c1">1</span>]}),a.alignByTranslate<span class="pl-k">||</span>a.translate(v((d<span class="pl-k">-</span>b[<span class="pl-c1">0</span>])/<span class="pl-c1">2</span>),v((e<span class="pl-k">-</span>b[<span class="pl-c1">1</span>])/<span class="pl-c1">2</span>)))},j<span class="pl-k">=</span>a.<span class="pl-s3">match</span>(i)[<span class="pl-c1">1</span>],a<span class="pl-k">=</span>Jb[j]<span class="pl-k">||</span>f<span class="pl-k">&amp;&amp;</span>f.<span class="pl-sc">width</span><span class="pl-k">&amp;&amp;</span>f.<span class="pl-sc">height</span><span class="pl-k">&amp;&amp;</span>[f.<span class="pl-sc">width</span>,f.<span class="pl-sc">height</span>],g<span class="pl-k">=</span><span class="pl-v">this</span>.image(j).attr({x<span class="pl-k">:</span>b,y<span class="pl-k">:</span>c}),g.isImg<span class="pl-k">=!</span><span class="pl-c1">0</span>,a<span class="pl-k">?</span>k(g,a)<span class="pl-k">:</span>(g.attr({width<span class="pl-k">:</span><span class="pl-c1">0</span>,height<span class="pl-k">:</span><span class="pl-c1">0</span>}),$(<span class="pl-s1"><span class="pl-pds">&quot;</span>img<span class="pl-pds">&quot;</span></span>,{<span class="pl-en">onload</span>:<span class="pl-st">function</span>(){k(g,Jb[j]<span class="pl-k">=</span>[<span class="pl-v">this</span>.<span class="pl-sc">width</span>,<span class="pl-v">this</span>.<span class="pl-sc">height</span>])},</td>
      </tr>
      <tr>
        <td id="L65" class="blob-num js-line-number" data-line-number="65"></td>
        <td id="LC65" class="blob-code js-file-line">src<span class="pl-k">:</span>j}));<span class="pl-k">return</span> g},symbols<span class="pl-k">:</span>{<span class="pl-en">circle</span>:<span class="pl-st">function</span>(<span class="pl-vpf">a</span>,<span class="pl-vpf">b</span>,<span class="pl-vpf">c</span>,<span class="pl-vpf">d</span>){<span class="pl-s">var</span> e<span class="pl-k">=</span><span class="pl-c1">0.166</span><span class="pl-k">*</span>c;<span class="pl-k">return</span>[<span class="pl-s1"><span class="pl-pds">&quot;</span><span class="pl-en">M&quot;,a+c/2,b,&quot;C&quot;,a+c+e,b,a+c+e,b+d,a+c/2,b+d,&quot;C&quot;,a-e,b+d,a-e,b,a+c/2,b,&quot;Z&quot;]},square:function(a,b,c,d){return[&quot;M&quot;,a,b,&quot;L&quot;,a+c,b,a+c,b+d,a,b+d,&quot;Z&quot;]},triangle:function(a,b,c,d){return[&quot;M&quot;,a+c/2,b,&quot;L&quot;,a+c,b+d,a,b+d,&quot;Z&quot;]},&quot;triangle-down</span><span class="pl-pds">&quot;</span></span>:<span class="pl-st">function</span>(<span class="pl-vpf">a</span>,<span class="pl-vpf">b</span>,<span class="pl-vpf">c</span>,<span class="pl-vpf">d</span>){<span class="pl-k">return</span>[<span class="pl-s1"><span class="pl-pds">&quot;</span>M<span class="pl-pds">&quot;</span></span>,a,b,<span class="pl-s1"><span class="pl-pds">&quot;</span>L<span class="pl-pds">&quot;</span></span>,a<span class="pl-k">+</span>c,b,a<span class="pl-k">+</span>c/<span class="pl-c1">2</span>,b<span class="pl-k">+</span>d,<span class="pl-s1"><span class="pl-pds">&quot;</span>Z<span class="pl-pds">&quot;</span></span>]},<span class="pl-en">diamond</span>:<span class="pl-st">function</span>(<span class="pl-vpf">a</span>,<span class="pl-vpf">b</span>,<span class="pl-vpf">c</span>,<span class="pl-vpf">d</span>){<span class="pl-k">return</span>[<span class="pl-s1"><span class="pl-pds">&quot;</span>M<span class="pl-pds">&quot;</span></span>,a<span class="pl-k">+</span>c/<span class="pl-c1">2</span>,b,<span class="pl-s1"><span class="pl-pds">&quot;</span>L<span class="pl-pds">&quot;</span></span>,a<span class="pl-k">+</span>c,b<span class="pl-k">+</span>d/<span class="pl-c1">2</span>,a<span class="pl-k">+</span>c/<span class="pl-c1">2</span>,b<span class="pl-k">+</span>d,a,b<span class="pl-k">+</span>d/<span class="pl-c1">2</span>,<span class="pl-s1"><span class="pl-pds">&quot;</span>Z<span class="pl-pds">&quot;</span></span>]},<span class="pl-en">arc</span>:<span class="pl-st">function</span>(<span class="pl-vpf">a</span>,<span class="pl-vpf">b</span>,<span class="pl-vpf">c</span>,<span class="pl-vpf">d</span>,<span class="pl-vpf">e</span>){<span class="pl-s">var</span> f<span class="pl-k">=</span>e.<span class="pl-sc">start</span>,c<span class="pl-k">=</span>e.r<span class="pl-k">||</span>c<span class="pl-k">||</span>d,g<span class="pl-k">=</span>e.end<span class="pl-k">-</span></td>
      </tr>
      <tr>
        <td id="L66" class="blob-num js-line-number" data-line-number="66"></td>
        <td id="LC66" class="blob-code js-file-line"><span class="pl-c1">0.001</span>,d<span class="pl-k">=</span>e.innerR,h<span class="pl-k">=</span>e.open,i<span class="pl-k">=</span>aa(f),j<span class="pl-k">=</span>fa(f),k<span class="pl-k">=</span>aa(g),g<span class="pl-k">=</span>fa(g),e<span class="pl-k">=</span>e.end<span class="pl-k">-</span>f<span class="pl-k">&lt;</span>oa<span class="pl-k">?</span><span class="pl-c1">0</span><span class="pl-k">:</span><span class="pl-c1">1</span>;<span class="pl-k">return</span>[<span class="pl-s1"><span class="pl-pds">&quot;</span>M<span class="pl-pds">&quot;</span></span>,a<span class="pl-k">+</span>c<span class="pl-k">*</span>i,b<span class="pl-k">+</span>c<span class="pl-k">*</span>j,<span class="pl-s1"><span class="pl-pds">&quot;</span>A<span class="pl-pds">&quot;</span></span>,c,c,<span class="pl-c1">0</span>,e,<span class="pl-c1">1</span>,a<span class="pl-k">+</span>c<span class="pl-k">*</span>k,b<span class="pl-k">+</span>c<span class="pl-k">*</span>g,h<span class="pl-k">?</span><span class="pl-s1"><span class="pl-pds">&quot;</span>M<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s1"><span class="pl-pds">&quot;</span>L<span class="pl-pds">&quot;</span></span>,a<span class="pl-k">+</span>d<span class="pl-k">*</span>k,b<span class="pl-k">+</span>d<span class="pl-k">*</span>g,<span class="pl-s1"><span class="pl-pds">&quot;</span>A<span class="pl-pds">&quot;</span></span>,d,d,<span class="pl-c1">0</span>,e,<span class="pl-c1">0</span>,a<span class="pl-k">+</span>d<span class="pl-k">*</span>i,b<span class="pl-k">+</span>d<span class="pl-k">*</span>j,h<span class="pl-k">?</span><span class="pl-s1"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s1"><span class="pl-pds">&quot;</span>Z<span class="pl-pds">&quot;</span></span>]},<span class="pl-en">callout</span>:<span class="pl-st">function</span>(<span class="pl-vpf">a</span>,<span class="pl-vpf">b</span>,<span class="pl-vpf">c</span>,<span class="pl-vpf">d</span>,<span class="pl-vpf">e</span>){<span class="pl-s">var</span> f<span class="pl-k">=</span>L(e<span class="pl-k">&amp;&amp;</span>e.r<span class="pl-k">||</span><span class="pl-c1">0</span>,c,d),g<span class="pl-k">=</span>f<span class="pl-k">+</span><span class="pl-c1">6</span>,h<span class="pl-k">=</span>e<span class="pl-k">&amp;&amp;</span>e.anchorX,i<span class="pl-k">=</span>e<span class="pl-k">&amp;&amp;</span>e.anchorY,e<span class="pl-k">=</span>v(e.strokeWidth<span class="pl-k">||</span><span class="pl-c1">0</span>)<span class="pl-k">%</span><span class="pl-c1">2</span>/<span class="pl-c1">2</span>;a<span class="pl-k">+=</span>e;b<span class="pl-k">+=</span>e;e<span class="pl-k">=</span>[<span class="pl-s1"><span class="pl-pds">&quot;</span>M<span class="pl-pds">&quot;</span></span>,a<span class="pl-k">+</span>f,b,<span class="pl-s1"><span class="pl-pds">&quot;</span>L<span class="pl-pds">&quot;</span></span>,a<span class="pl-k">+</span>c<span class="pl-k">-</span>f,b,<span class="pl-s1"><span class="pl-pds">&quot;</span>C<span class="pl-pds">&quot;</span></span>,a<span class="pl-k">+</span>c,b,a<span class="pl-k">+</span>c,b,a<span class="pl-k">+</span>c,b<span class="pl-k">+</span>f,<span class="pl-s1"><span class="pl-pds">&quot;</span>L<span class="pl-pds">&quot;</span></span>,a<span class="pl-k">+</span>c,b<span class="pl-k">+</span>d<span class="pl-k">-</span>f,<span class="pl-s1"><span class="pl-pds">&quot;</span>C<span class="pl-pds">&quot;</span></span>,a<span class="pl-k">+</span>c,b<span class="pl-k">+</span>d,a<span class="pl-k">+</span>c,b<span class="pl-k">+</span>d,a<span class="pl-k">+</span>c<span class="pl-k">-</span>f,b<span class="pl-k">+</span>d,<span class="pl-s1"><span class="pl-pds">&quot;</span>L<span class="pl-pds">&quot;</span></span>,a<span class="pl-k">+</span>f,b<span class="pl-k">+</span>d,<span class="pl-s1"><span class="pl-pds">&quot;</span>C<span class="pl-pds">&quot;</span></span>,a,b<span class="pl-k">+</span>d,a,b<span class="pl-k">+</span>d,a,b<span class="pl-k">+</span>d<span class="pl-k">-</span>f,<span class="pl-s1"><span class="pl-pds">&quot;</span>L<span class="pl-pds">&quot;</span></span>,a,b<span class="pl-k">+</span>f,<span class="pl-s1"><span class="pl-pds">&quot;</span>C<span class="pl-pds">&quot;</span></span>,a,b,a,b,a<span class="pl-k">+</span>f,b];h<span class="pl-k">&amp;&amp;</span>h<span class="pl-k">&gt;</span>c<span class="pl-k">&amp;&amp;</span>i<span class="pl-k">&gt;</span>b<span class="pl-k">+</span>g<span class="pl-k">&amp;&amp;</span>i<span class="pl-k">&lt;</span>b<span class="pl-k">+</span>d<span class="pl-k">-</span>g<span class="pl-k">?</span>e.<span class="pl-s3">splice</span>(<span class="pl-c1">13</span>,<span class="pl-c1">3</span>,</td>
      </tr>
      <tr>
        <td id="L67" class="blob-num js-line-number" data-line-number="67"></td>
        <td id="LC67" class="blob-code js-file-line"><span class="pl-s1"><span class="pl-pds">&quot;</span>L<span class="pl-pds">&quot;</span></span>,a<span class="pl-k">+</span>c,i<span class="pl-k">-</span><span class="pl-c1">6</span>,a<span class="pl-k">+</span>c<span class="pl-k">+</span><span class="pl-c1">6</span>,i,a<span class="pl-k">+</span>c,i<span class="pl-k">+</span><span class="pl-c1">6</span>,a<span class="pl-k">+</span>c,b<span class="pl-k">+</span>d<span class="pl-k">-</span>f)<span class="pl-k">:</span>h<span class="pl-k">&amp;&amp;</span>h<span class="pl-k">&lt;</span><span class="pl-c1">0</span><span class="pl-k">&amp;&amp;</span>i<span class="pl-k">&gt;</span>b<span class="pl-k">+</span>g<span class="pl-k">&amp;&amp;</span>i<span class="pl-k">&lt;</span>b<span class="pl-k">+</span>d<span class="pl-k">-</span>g<span class="pl-k">?</span>e.<span class="pl-s3">splice</span>(<span class="pl-c1">33</span>,<span class="pl-c1">3</span>,<span class="pl-s1"><span class="pl-pds">&quot;</span>L<span class="pl-pds">&quot;</span></span>,a,i<span class="pl-k">+</span><span class="pl-c1">6</span>,a<span class="pl-k">-</span><span class="pl-c1">6</span>,i,a,i<span class="pl-k">-</span><span class="pl-c1">6</span>,a,b<span class="pl-k">+</span>f)<span class="pl-k">:</span>i<span class="pl-k">&amp;&amp;</span>i<span class="pl-k">&gt;</span>d<span class="pl-k">&amp;&amp;</span>h<span class="pl-k">&gt;</span>a<span class="pl-k">+</span>g<span class="pl-k">&amp;&amp;</span>h<span class="pl-k">&lt;</span>a<span class="pl-k">+</span>c<span class="pl-k">-</span>g<span class="pl-k">?</span>e.<span class="pl-s3">splice</span>(<span class="pl-c1">23</span>,<span class="pl-c1">3</span>,<span class="pl-s1"><span class="pl-pds">&quot;</span>L<span class="pl-pds">&quot;</span></span>,h<span class="pl-k">+</span><span class="pl-c1">6</span>,b<span class="pl-k">+</span>d,h,b<span class="pl-k">+</span>d<span class="pl-k">+</span><span class="pl-c1">6</span>,h<span class="pl-k">-</span><span class="pl-c1">6</span>,b<span class="pl-k">+</span>d,a<span class="pl-k">+</span>f,b<span class="pl-k">+</span>d)<span class="pl-k">:</span>i<span class="pl-k">&amp;&amp;</span>i<span class="pl-k">&lt;</span><span class="pl-c1">0</span><span class="pl-k">&amp;&amp;</span>h<span class="pl-k">&gt;</span>a<span class="pl-k">+</span>g<span class="pl-k">&amp;&amp;</span>h<span class="pl-k">&lt;</span>a<span class="pl-k">+</span>c<span class="pl-k">-</span>g<span class="pl-k">&amp;&amp;</span>e.<span class="pl-s3">splice</span>(<span class="pl-c1">3</span>,<span class="pl-c1">3</span>,<span class="pl-s1"><span class="pl-pds">&quot;</span>L<span class="pl-pds">&quot;</span></span>,h<span class="pl-k">-</span><span class="pl-c1">6</span>,b,h,b<span class="pl-k">-</span><span class="pl-c1">6</span>,h<span class="pl-k">+</span><span class="pl-c1">6</span>,b,c<span class="pl-k">-</span>f,b);<span class="pl-k">return</span> e}},<span class="pl-en">clipRect</span>:<span class="pl-st">function</span>(<span class="pl-vpf">a</span>,<span class="pl-vpf">b</span>,<span class="pl-vpf">c</span>,<span class="pl-vpf">d</span>){<span class="pl-s">var</span> e<span class="pl-k">=</span><span class="pl-s1"><span class="pl-pds">&quot;</span>highcharts-<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>ub<span class="pl-k">++</span>,f<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-s3">createElement</span>(<span class="pl-s1"><span class="pl-pds">&quot;</span>clipPath<span class="pl-pds">&quot;</span></span>).attr({id<span class="pl-k">:</span>e}).<span class="pl-s3">add</span>(<span class="pl-v">this</span>.defs),a<span class="pl-k">=</span><span class="pl-v">this</span>.rect(a,b,c,d,<span class="pl-c1">0</span>).<span class="pl-s3">add</span>(f);a.<span class="pl-sc">id</span><span class="pl-k">=</span>e;a.clipPath<span class="pl-k">=</span>f;<span class="pl-k">return</span> a},<span class="pl-en">text</span>:<span class="pl-st">function</span>(<span class="pl-vpf">a</span>,<span class="pl-vpf">b</span>,<span class="pl-vpf">c</span>,<span class="pl-vpf">d</span>){<span class="pl-s">var</span> e<span class="pl-k">=</span>ga<span class="pl-k">||!</span>ba<span class="pl-k">&amp;&amp;</span><span class="pl-v">this</span>.forExport,f<span class="pl-k">=</span>{};<span class="pl-k">if</span>(d<span class="pl-k">&amp;&amp;!</span><span class="pl-v">this</span>.forExport)<span class="pl-k">return</span> <span class="pl-v">this</span>.html(a,</td>
      </tr>
      <tr>
        <td id="L68" class="blob-num js-line-number" data-line-number="68"></td>
        <td id="LC68" class="blob-code js-file-line">b,c);f.<span class="pl-sc">x</span><span class="pl-k">=</span><span class="pl-s3">Math</span>.<span class="pl-s3">round</span>(b<span class="pl-k">||</span><span class="pl-c1">0</span>);<span class="pl-k">if</span>(c)f.<span class="pl-sc">y</span><span class="pl-k">=</span><span class="pl-s3">Math</span>.<span class="pl-s3">round</span>(c);<span class="pl-k">if</span>(a<span class="pl-k">||</span>a<span class="pl-k">===</span><span class="pl-c1">0</span>)f.<span class="pl-sc">text</span><span class="pl-k">=</span>a;a<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-s3">createElement</span>(<span class="pl-s1"><span class="pl-pds">&quot;</span>text<span class="pl-pds">&quot;</span></span>).attr(f);e<span class="pl-k">&amp;&amp;</span>a.css({position<span class="pl-k">:</span><span class="pl-s1"><span class="pl-pds">&quot;</span>absolute<span class="pl-pds">&quot;</span></span>});<span class="pl-k">if</span>(<span class="pl-k">!</span>d)<span class="pl-s3">a</span>.<span class="pl-en">xSetter</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>,<span class="pl-vpf">b</span>,<span class="pl-vpf">c</span>){<span class="pl-s">var</span> d<span class="pl-k">=</span>c.<span class="pl-s3">getElementsByTagName</span>(<span class="pl-s1"><span class="pl-pds">&quot;</span>tspan<span class="pl-pds">&quot;</span></span>),e,f<span class="pl-k">=</span>c.<span class="pl-s3">getAttribute</span>(b),n;<span class="pl-k">for</span>(n<span class="pl-k">=</span><span class="pl-c1">0</span>;n<span class="pl-k">&lt;</span>d.<span class="pl-sc">length</span>;n<span class="pl-k">++</span>)e<span class="pl-k">=</span>d[n],e.<span class="pl-s3">getAttribute</span>(b)<span class="pl-k">===</span>f<span class="pl-k">&amp;&amp;</span>e.<span class="pl-s3">setAttribute</span>(b,a);c.<span class="pl-s3">setAttribute</span>(b,a)};<span class="pl-k">return</span> a},<span class="pl-en">fontMetrics</span>:<span class="pl-st">function</span>(<span class="pl-vpf">a</span>,<span class="pl-vpf">b</span>){a<span class="pl-k">=</span>a<span class="pl-k">||</span><span class="pl-v">this</span>.<span class="pl-sc">style</span>.<span class="pl-sc">fontSize</span>;<span class="pl-k">if</span>(b<span class="pl-k">&amp;&amp;</span>G.getComputedStyle)b<span class="pl-k">=</span>b.element<span class="pl-k">||</span>b,a<span class="pl-k">=</span>G.getComputedStyle(b,<span class="pl-s1"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>).<span class="pl-sc">fontSize</span>;<span class="pl-s">var</span> a<span class="pl-k">=</span><span class="pl-sr"><span class="pl-pds">/</span>px<span class="pl-pds">/</span></span>.<span class="pl-s3">test</span>(a)<span class="pl-k">?</span>y(a)<span class="pl-k">:</span><span class="pl-sr"><span class="pl-pds">/</span>em<span class="pl-pds">/</span></span>.<span class="pl-s3">test</span>(a)<span class="pl-k">?</span></td>
      </tr>
      <tr>
        <td id="L69" class="blob-num js-line-number" data-line-number="69"></td>
        <td id="LC69" class="blob-code js-file-line"><span class="pl-s3">parseFloat</span>(a)<span class="pl-k">*</span><span class="pl-c1">12</span><span class="pl-k">:</span><span class="pl-c1">12</span>,c<span class="pl-k">=</span>a<span class="pl-k">&lt;</span><span class="pl-c1">24</span><span class="pl-k">?</span>a<span class="pl-k">+</span><span class="pl-c1">4</span><span class="pl-k">:</span>v(a<span class="pl-k">*</span><span class="pl-c1">1.2</span>),d<span class="pl-k">=</span>v(c<span class="pl-k">*</span><span class="pl-c1">0.8</span>);<span class="pl-k">return</span>{h<span class="pl-k">:</span>c,b<span class="pl-k">:</span>d,f<span class="pl-k">:</span>a}},<span class="pl-en">label</span>:<span class="pl-st">function</span>(<span class="pl-vpf">a</span>,<span class="pl-vpf">b</span>,<span class="pl-vpf">c</span>,<span class="pl-vpf">d</span>,<span class="pl-vpf">e</span>,<span class="pl-vpf">f</span>,<span class="pl-vpf">g</span>,<span class="pl-vpf">h</span>,<span class="pl-vpf">i</span>){<span class="pl-st">function</span> <span class="pl-en">j</span>(){<span class="pl-s">var</span> a,b;a<span class="pl-k">=</span>o.element.<span class="pl-sc">style</span>;D<span class="pl-k">=</span>(t<span class="pl-k">===void</span> <span class="pl-c1">0</span><span class="pl-k">||</span>xb<span class="pl-k">===void</span> <span class="pl-c1">0</span><span class="pl-k">||</span>m.styles.<span class="pl-sc">textAlign</span>)<span class="pl-k">&amp;&amp;</span>o.textStr<span class="pl-k">&amp;&amp;</span>o.getBBox();m.<span class="pl-sc">width</span><span class="pl-k">=</span>(t<span class="pl-k">||</span>D.<span class="pl-sc">width</span><span class="pl-k">||</span><span class="pl-c1">0</span>)<span class="pl-k">+</span><span class="pl-c1">2</span><span class="pl-k">*</span>C<span class="pl-k">+</span>kb;m.<span class="pl-sc">height</span><span class="pl-k">=</span>(xb<span class="pl-k">||</span>D.<span class="pl-sc">height</span><span class="pl-k">||</span><span class="pl-c1">0</span>)<span class="pl-k">+</span><span class="pl-c1">2</span><span class="pl-k">*</span>C;R<span class="pl-k">=</span>C<span class="pl-k">+</span>n.fontMetrics(a<span class="pl-k">&amp;&amp;</span>a.<span class="pl-sc">fontSize</span>,o).b;<span class="pl-k">if</span>(y){<span class="pl-k">if</span>(<span class="pl-k">!</span>p)a<span class="pl-k">=</span>v(<span class="pl-k">-</span>J<span class="pl-k">*</span>C),b<span class="pl-k">=</span>h<span class="pl-k">?-</span>R<span class="pl-k">:</span><span class="pl-c1">0</span>,m.box<span class="pl-k">=</span>p<span class="pl-k">=</span>d<span class="pl-k">?</span>n.symbol(d,a,b,m.<span class="pl-sc">width</span>,m.<span class="pl-sc">height</span>,z)<span class="pl-k">:</span>n.rect(a,b,m.<span class="pl-sc">width</span>,m.<span class="pl-sc">height</span>,<span class="pl-c1">0</span>,z[Qb]),p.attr(<span class="pl-s1"><span class="pl-pds">&quot;</span>fill<span class="pl-pds">&quot;</span></span>,P).<span class="pl-s3">add</span>(m);p.isImg<span class="pl-k">||</span>p.attr(r({width<span class="pl-k">:</span>v(m.<span class="pl-sc">width</span>),height<span class="pl-k">:</span>v(m.<span class="pl-sc">height</span>)},</td>
      </tr>
      <tr>
        <td id="L70" class="blob-num js-line-number" data-line-number="70"></td>
        <td id="LC70" class="blob-code js-file-line">z));z<span class="pl-k">=</span><span class="pl-c1">null</span>}}<span class="pl-st">function</span> <span class="pl-en">k</span>(){<span class="pl-s">var</span> a<span class="pl-k">=</span>m.styles,a<span class="pl-k">=</span>a<span class="pl-k">&amp;&amp;</span>a.<span class="pl-sc">textAlign</span>,b<span class="pl-k">=</span>kb<span class="pl-k">+</span>C<span class="pl-k">*</span>(<span class="pl-c1">1</span><span class="pl-k">-</span>J),c;c<span class="pl-k">=</span>h<span class="pl-k">?</span><span class="pl-c1">0</span><span class="pl-k">:</span>R;<span class="pl-k">if</span>(s(t)<span class="pl-k">&amp;&amp;</span>D<span class="pl-k">&amp;&amp;</span>(a<span class="pl-k">===</span><span class="pl-s1"><span class="pl-pds">&quot;</span>center<span class="pl-pds">&quot;</span></span><span class="pl-k">||</span>a<span class="pl-k">===</span><span class="pl-s1"><span class="pl-pds">&quot;</span>right<span class="pl-pds">&quot;</span></span>))b<span class="pl-k">+=</span>{center<span class="pl-k">:</span><span class="pl-c1">0.5</span>,right<span class="pl-k">:</span><span class="pl-c1">1</span>}[a]<span class="pl-k">*</span>(t<span class="pl-k">-</span>D.<span class="pl-sc">width</span>);<span class="pl-k">if</span>(b<span class="pl-k">!==</span>o.<span class="pl-sc">x</span><span class="pl-k">||</span>c<span class="pl-k">!==</span>o.<span class="pl-sc">y</span>)o.attr(<span class="pl-s1"><span class="pl-pds">&quot;</span>x<span class="pl-pds">&quot;</span></span>,b),c<span class="pl-k">!==</span>u<span class="pl-k">&amp;&amp;</span>o.attr(<span class="pl-s1"><span class="pl-pds">&quot;</span>y<span class="pl-pds">&quot;</span></span>,c);o.<span class="pl-sc">x</span><span class="pl-k">=</span>b;o.<span class="pl-sc">y</span><span class="pl-k">=</span>c}<span class="pl-st">function</span> <span class="pl-en">l</span>(<span class="pl-vpf">a</span>,<span class="pl-vpf">b</span>){p<span class="pl-k">?</span>p.attr(a,b)<span class="pl-k">:</span>z[a]<span class="pl-k">=</span>b}<span class="pl-s">var</span> n<span class="pl-k">=</span><span class="pl-v">this</span>,m<span class="pl-k">=</span>n.g(i),o<span class="pl-k">=</span>n.<span class="pl-sc">text</span>(<span class="pl-s1"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>,<span class="pl-c1">0</span>,<span class="pl-c1">0</span>,g).attr({zIndex<span class="pl-k">:</span><span class="pl-c1">1</span>}),p,D,J<span class="pl-k">=</span><span class="pl-c1">0</span>,C<span class="pl-k">=</span><span class="pl-c1">3</span>,kb<span class="pl-k">=</span><span class="pl-c1">0</span>,t,xb,yb,x,Kb<span class="pl-k">=</span><span class="pl-c1">0</span>,z<span class="pl-k">=</span>{},R,y;<span class="pl-s3">m</span>.<span class="pl-en">onAdd</span><span class="pl-k">=</span><span class="pl-st">function</span>(){o.<span class="pl-s3">add</span>(m);m.attr({text<span class="pl-k">:</span>a<span class="pl-k">||</span>a<span class="pl-k">===</span><span class="pl-c1">0</span><span class="pl-k">?</span>a<span class="pl-k">:</span><span class="pl-s1"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>,x<span class="pl-k">:</span>b,y<span class="pl-k">:</span>c});p<span class="pl-k">&amp;&amp;</span>s(e)<span class="pl-k">&amp;&amp;</span>m.attr({anchorX<span class="pl-k">:</span>e,anchorY<span class="pl-k">:</span>f})};<span class="pl-s3">m</span>.<span class="pl-en">widthSetter</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){t<span class="pl-k">=</span>a};m.heightSetter<span class="pl-k">=</span></td>
      </tr>
      <tr>
        <td id="L71" class="blob-num js-line-number" data-line-number="71"></td>
        <td id="LC71" class="blob-code js-file-line"><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){xb<span class="pl-k">=</span>a};<span class="pl-s3">m</span>.<span class="pl-en">paddingSetter</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){s(a)<span class="pl-k">&amp;&amp;</span>a<span class="pl-k">!==</span>C<span class="pl-k">&amp;&amp;</span>(C<span class="pl-k">=</span>a,k())};<span class="pl-s3">m</span>.<span class="pl-en">paddingLeftSetter</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){s(a)<span class="pl-k">&amp;&amp;</span>a<span class="pl-k">!==</span>kb<span class="pl-k">&amp;&amp;</span>(kb<span class="pl-k">=</span>a,k())};<span class="pl-s3">m</span>.<span class="pl-en">alignSetter</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){J<span class="pl-k">=</span>{left<span class="pl-k">:</span><span class="pl-c1">0</span>,center<span class="pl-k">:</span><span class="pl-c1">0.5</span>,right<span class="pl-k">:</span><span class="pl-c1">1</span>}[a]};<span class="pl-s3">m</span>.<span class="pl-en">textSetter</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){a<span class="pl-k">!==</span>u<span class="pl-k">&amp;&amp;</span>o.textSetter(a);j();k()};m[<span class="pl-s1"><span class="pl-pds">&quot;</span>stroke-widthSetter<span class="pl-pds">&quot;</span></span>]<span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>,<span class="pl-vpf">b</span>){a<span class="pl-k">&amp;&amp;</span>(y<span class="pl-k">=!</span><span class="pl-c1">0</span>);Kb<span class="pl-k">=</span>a<span class="pl-k">%</span><span class="pl-c1">2</span>/<span class="pl-c1">2</span>;l(b,a)};m.strokeSetter<span class="pl-k">=</span>m.fillSetter<span class="pl-k">=</span><span class="pl-s3">m</span>.<span class="pl-en">rSetter</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>,<span class="pl-vpf">b</span>){b<span class="pl-k">===</span><span class="pl-s1"><span class="pl-pds">&quot;</span>fill<span class="pl-pds">&quot;</span></span><span class="pl-k">&amp;&amp;</span>a<span class="pl-k">&amp;&amp;</span>(y<span class="pl-k">=!</span><span class="pl-c1">0</span>);l(b,a)};<span class="pl-s3">m</span>.<span class="pl-en">anchorXSetter</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>,<span class="pl-vpf">b</span>){e<span class="pl-k">=</span>a;l(b,a<span class="pl-k">+</span>Kb<span class="pl-k">-</span>yb)};<span class="pl-s3">m</span>.<span class="pl-en">anchorYSetter</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>,<span class="pl-vpf">b</span>){f<span class="pl-k">=</span>a;l(b,a<span class="pl-k">-</span>x)};<span class="pl-s3">m</span>.<span class="pl-en">xSetter</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){m.<span class="pl-sc">x</span><span class="pl-k">=</span></td>
      </tr>
      <tr>
        <td id="L72" class="blob-num js-line-number" data-line-number="72"></td>
        <td id="LC72" class="blob-code js-file-line">a;J<span class="pl-k">&amp;&amp;</span>(a<span class="pl-k">-=</span>J<span class="pl-k">*</span>((t<span class="pl-k">||</span>D.<span class="pl-sc">width</span>)<span class="pl-k">+</span>C));yb<span class="pl-k">=</span>v(a);m.attr(<span class="pl-s1"><span class="pl-pds">&quot;</span>translateX<span class="pl-pds">&quot;</span></span>,yb)};<span class="pl-s3">m</span>.<span class="pl-en">ySetter</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){x<span class="pl-k">=</span>m.<span class="pl-sc">y</span><span class="pl-k">=</span>v(a);m.attr(<span class="pl-s1"><span class="pl-pds">&quot;</span>translateY<span class="pl-pds">&quot;</span></span>,x)};<span class="pl-s">var</span> A<span class="pl-k">=</span>m.css;<span class="pl-k">return</span> r(m,{<span class="pl-en">css</span>:<span class="pl-st">function</span>(<span class="pl-vpf">a</span>){<span class="pl-k">if</span>(a){<span class="pl-s">var</span> b<span class="pl-k">=</span>{},a<span class="pl-k">=</span>w(a);q(m.textProps,<span class="pl-st">function</span>(<span class="pl-vpf">c</span>){a[c]<span class="pl-k">!==</span>u<span class="pl-k">&amp;&amp;</span>(b[c]<span class="pl-k">=</span>a[c],<span class="pl-k">delete</span> a[c])});o.css(b)}<span class="pl-k">return</span> A.<span class="pl-s3">call</span>(m,a)},<span class="pl-en">getBBox</span>:<span class="pl-st">function</span>(){<span class="pl-k">return</span>{width<span class="pl-k">:</span>D.<span class="pl-sc">width</span><span class="pl-k">+</span><span class="pl-c1">2</span><span class="pl-k">*</span>C,height<span class="pl-k">:</span>D.<span class="pl-sc">height</span><span class="pl-k">+</span><span class="pl-c1">2</span><span class="pl-k">*</span>C,x<span class="pl-k">:</span>D.<span class="pl-sc">x</span><span class="pl-k">-</span>C,y<span class="pl-k">:</span>D.<span class="pl-sc">y</span><span class="pl-k">-</span>C}},<span class="pl-en">shadow</span>:<span class="pl-st">function</span>(<span class="pl-vpf">a</span>){p<span class="pl-k">&amp;&amp;</span>p.shadow(a);<span class="pl-k">return</span> m},<span class="pl-en">destroy</span>:<span class="pl-st">function</span>(){X(m.element,<span class="pl-s1"><span class="pl-pds">&quot;</span>mouseenter<span class="pl-pds">&quot;</span></span>);X(m.element,<span class="pl-s1"><span class="pl-pds">&quot;</span>mouseleave<span class="pl-pds">&quot;</span></span>);o<span class="pl-k">&amp;&amp;</span>(o<span class="pl-k">=</span>o.destroy());p<span class="pl-k">&amp;&amp;</span>(p<span class="pl-k">=</span>p.destroy());</td>
      </tr>
      <tr>
        <td id="L73" class="blob-num js-line-number" data-line-number="73"></td>
        <td id="LC73" class="blob-code js-file-line">S.<span class="pl-sc">prototype</span>.destroy.<span class="pl-s3">call</span>(m);m<span class="pl-k">=</span>n<span class="pl-k">=</span>j<span class="pl-k">=</span>k<span class="pl-k">=</span>l<span class="pl-k">=</span><span class="pl-c1">null</span>}})}};Za<span class="pl-k">=</span>ta;r(S.<span class="pl-sc">prototype</span>,{<span class="pl-en">htmlCss</span>:<span class="pl-st">function</span>(<span class="pl-vpf">a</span>){<span class="pl-s">var</span> b<span class="pl-k">=</span><span class="pl-v">this</span>.element;<span class="pl-k">if</span>(b<span class="pl-k">=</span>a<span class="pl-k">&amp;&amp;</span>b.<span class="pl-sc">tagName</span><span class="pl-k">===</span><span class="pl-s1"><span class="pl-pds">&quot;</span>SPAN<span class="pl-pds">&quot;</span></span><span class="pl-k">&amp;&amp;</span>a.<span class="pl-sc">width</span>)<span class="pl-k">delete</span> a.<span class="pl-sc">width</span>,<span class="pl-v">this</span>.textWidth<span class="pl-k">=</span>b,<span class="pl-v">this</span>.updateTransform();<span class="pl-v">this</span>.styles<span class="pl-k">=</span>r(<span class="pl-v">this</span>.styles,a);B(<span class="pl-v">this</span>.element,a);<span class="pl-k">return</span> <span class="pl-v">this</span>},<span class="pl-en">htmlGetBBox</span>:<span class="pl-st">function</span>(){<span class="pl-s">var</span> a<span class="pl-k">=</span><span class="pl-v">this</span>.element,b<span class="pl-k">=</span><span class="pl-v">this</span>.bBox;<span class="pl-k">if</span>(<span class="pl-k">!</span>b){<span class="pl-k">if</span>(a.<span class="pl-sc">nodeName</span><span class="pl-k">===</span><span class="pl-s1"><span class="pl-pds">&quot;</span>text<span class="pl-pds">&quot;</span></span>)a.<span class="pl-sc">style</span>.position<span class="pl-k">=</span><span class="pl-s1"><span class="pl-pds">&quot;</span>absolute<span class="pl-pds">&quot;</span></span>;b<span class="pl-k">=</span><span class="pl-v">this</span>.bBox<span class="pl-k">=</span>{x<span class="pl-k">:</span>a.offsetLeft,y<span class="pl-k">:</span>a.offsetTop,width<span class="pl-k">:</span>a.offsetWidth,height<span class="pl-k">:</span>a.offsetHeight}}<span class="pl-k">return</span> b},<span class="pl-en">htmlUpdateTransform</span>:<span class="pl-st">function</span>(){<span class="pl-k">if</span>(<span class="pl-v">this</span>.added){<span class="pl-s">var</span> a<span class="pl-k">=</span></td>
      </tr>
      <tr>
        <td id="L74" class="blob-num js-line-number" data-line-number="74"></td>
        <td id="LC74" class="blob-code js-file-line"><span class="pl-v">this</span>.renderer,b<span class="pl-k">=</span><span class="pl-v">this</span>.element,c<span class="pl-k">=</span><span class="pl-v">this</span>.translateX<span class="pl-k">||</span><span class="pl-c1">0</span>,d<span class="pl-k">=</span><span class="pl-v">this</span>.translateY<span class="pl-k">||</span><span class="pl-c1">0</span>,e<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-sc">x</span><span class="pl-k">||</span><span class="pl-c1">0</span>,f<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-sc">y</span><span class="pl-k">||</span><span class="pl-c1">0</span>,g<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-sc">textAlign</span><span class="pl-k">||</span><span class="pl-s1"><span class="pl-pds">&quot;</span>left<span class="pl-pds">&quot;</span></span>,h<span class="pl-k">=</span>{left<span class="pl-k">:</span><span class="pl-c1">0</span>,center<span class="pl-k">:</span><span class="pl-c1">0.5</span>,right<span class="pl-k">:</span><span class="pl-c1">1</span>}[g],i<span class="pl-k">=</span><span class="pl-v">this</span>.shadows;B(b,{marginLeft<span class="pl-k">:</span>c,marginTop<span class="pl-k">:</span>d});i<span class="pl-k">&amp;&amp;</span>q(i,<span class="pl-st">function</span>(<span class="pl-vpf">a</span>){B(a,{marginLeft<span class="pl-k">:</span>c<span class="pl-k">+</span><span class="pl-c1">1</span>,marginTop<span class="pl-k">:</span>d<span class="pl-k">+</span><span class="pl-c1">1</span>})});<span class="pl-v">this</span>.inverted<span class="pl-k">&amp;&amp;</span>q(b.<span class="pl-sc">childNodes</span>,<span class="pl-st">function</span>(<span class="pl-vpf">c</span>){a.invertChild(c,b)});<span class="pl-k">if</span>(b.<span class="pl-sc">tagName</span><span class="pl-k">===</span><span class="pl-s1"><span class="pl-pds">&quot;</span>SPAN<span class="pl-pds">&quot;</span></span>){<span class="pl-s">var</span> j<span class="pl-k">=</span><span class="pl-v">this</span>.rotation,k,l<span class="pl-k">=</span>y(<span class="pl-v">this</span>.textWidth),n<span class="pl-k">=</span>[j,g,b.innerHTML,<span class="pl-v">this</span>.textWidth].<span class="pl-s3">join</span>(<span class="pl-s1"><span class="pl-pds">&quot;</span>,<span class="pl-pds">&quot;</span></span>);<span class="pl-k">if</span>(n<span class="pl-k">!==</span><span class="pl-v">this</span>.cTT){k<span class="pl-k">=</span>a.fontMetrics(b.<span class="pl-sc">style</span>.<span class="pl-sc">fontSize</span>).b;s(j)<span class="pl-k">&amp;&amp;</span><span class="pl-v">this</span>.setSpanRotation(j,</td>
      </tr>
      <tr>
        <td id="L75" class="blob-num js-line-number" data-line-number="75"></td>
        <td id="LC75" class="blob-code js-file-line">h,k);i<span class="pl-k">=</span>p(<span class="pl-v">this</span>.elemWidth,b.offsetWidth);<span class="pl-k">if</span>(i<span class="pl-k">&gt;</span>l<span class="pl-k">&amp;&amp;</span><span class="pl-sr"><span class="pl-pds">/</span><span class="pl-c1">[ <span class="pl-cce">\-</span>]</span><span class="pl-pds">/</span></span>.<span class="pl-s3">test</span>(b.textContent<span class="pl-k">||</span>b.innerText))B(b,{width<span class="pl-k">:</span>l<span class="pl-k">+</span><span class="pl-s1"><span class="pl-pds">&quot;</span>px<span class="pl-pds">&quot;</span></span>,display<span class="pl-k">:</span><span class="pl-s1"><span class="pl-pds">&quot;</span>block<span class="pl-pds">&quot;</span></span>,whiteSpace<span class="pl-k">:</span><span class="pl-s1"><span class="pl-pds">&quot;</span>normal<span class="pl-pds">&quot;</span></span>}),i<span class="pl-k">=</span>l;<span class="pl-v">this</span>.getSpanCorrection(i,k,h,j,g)}B(b,{left<span class="pl-k">:</span>e<span class="pl-k">+</span>(<span class="pl-v">this</span>.xCorr<span class="pl-k">||</span><span class="pl-c1">0</span>)<span class="pl-k">+</span><span class="pl-s1"><span class="pl-pds">&quot;</span>px<span class="pl-pds">&quot;</span></span>,top<span class="pl-k">:</span>f<span class="pl-k">+</span>(<span class="pl-v">this</span>.yCorr<span class="pl-k">||</span><span class="pl-c1">0</span>)<span class="pl-k">+</span><span class="pl-s1"><span class="pl-pds">&quot;</span>px<span class="pl-pds">&quot;</span></span>});<span class="pl-k">if</span>(tb)k<span class="pl-k">=</span>b.offsetHeight;<span class="pl-v">this</span>.cTT<span class="pl-k">=</span>n}}<span class="pl-k">else</span> <span class="pl-v">this</span>.alignOnAdd<span class="pl-k">=!</span><span class="pl-c1">0</span>},<span class="pl-en">setSpanRotation</span>:<span class="pl-st">function</span>(<span class="pl-vpf">a</span>,<span class="pl-vpf">b</span>,<span class="pl-vpf">c</span>){<span class="pl-s">var</span> d<span class="pl-k">=</span>{},e<span class="pl-k">=</span>Aa<span class="pl-k">?</span><span class="pl-s1"><span class="pl-pds">&quot;</span>-ms-transform<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span>tb<span class="pl-k">?</span><span class="pl-s1"><span class="pl-pds">&quot;</span>-webkit-transform<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span>Ua<span class="pl-k">?</span><span class="pl-s1"><span class="pl-pds">&quot;</span>MozTransform<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span>Hb<span class="pl-k">?</span><span class="pl-s1"><span class="pl-pds">&quot;</span>-o-transform<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s1"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>;d[e]<span class="pl-k">=</span>d.transform<span class="pl-k">=</span><span class="pl-s1"><span class="pl-pds">&quot;</span>rotate(<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>a<span class="pl-k">+</span><span class="pl-s1"><span class="pl-pds">&quot;</span>deg)<span class="pl-pds">&quot;</span></span>;d[e<span class="pl-k">+</span>(Ua<span class="pl-k">?</span><span class="pl-s1"><span class="pl-pds">&quot;</span>Origin<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s1"><span class="pl-pds">&quot;</span>-origin<span class="pl-pds">&quot;</span></span>)]<span class="pl-k">=</span>d.transformOrigin<span class="pl-k">=</span></td>
      </tr>
      <tr>
        <td id="L76" class="blob-num js-line-number" data-line-number="76"></td>
        <td id="LC76" class="blob-code js-file-line">b<span class="pl-k">*</span><span class="pl-c1">100</span><span class="pl-k">+</span><span class="pl-s1"><span class="pl-pds">&quot;</span>% <span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>c<span class="pl-k">+</span><span class="pl-s1"><span class="pl-pds">&quot;</span>px<span class="pl-pds">&quot;</span></span>;B(<span class="pl-v">this</span>.element,d)},<span class="pl-en">getSpanCorrection</span>:<span class="pl-st">function</span>(<span class="pl-vpf">a</span>,<span class="pl-vpf">b</span>,<span class="pl-vpf">c</span>){<span class="pl-v">this</span>.xCorr<span class="pl-k">=-</span>a<span class="pl-k">*</span>c;<span class="pl-v">this</span>.yCorr<span class="pl-k">=-</span>b}});r(ta.<span class="pl-sc">prototype</span>,{<span class="pl-en">html</span>:<span class="pl-st">function</span>(<span class="pl-vpf">a</span>,<span class="pl-vpf">b</span>,<span class="pl-vpf">c</span>){<span class="pl-s">var</span> d<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-s3">createElement</span>(<span class="pl-s1"><span class="pl-pds">&quot;</span>span<span class="pl-pds">&quot;</span></span>),e<span class="pl-k">=</span>d.element,f<span class="pl-k">=</span>d.renderer;<span class="pl-s3">d</span>.<span class="pl-en">textSetter</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){a<span class="pl-k">!==</span>e.innerHTML<span class="pl-k">&amp;&amp;delete</span> <span class="pl-v">this</span>.bBox;e.innerHTML<span class="pl-k">=</span><span class="pl-v">this</span>.textStr<span class="pl-k">=</span>a};d.xSetter<span class="pl-k">=</span>d.ySetter<span class="pl-k">=</span>d.alignSetter<span class="pl-k">=</span><span class="pl-s3">d</span>.<span class="pl-en">rotationSetter</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>,<span class="pl-vpf">b</span>){b<span class="pl-k">===</span><span class="pl-s1"><span class="pl-pds">&quot;</span>align<span class="pl-pds">&quot;</span></span><span class="pl-k">&amp;&amp;</span>(b<span class="pl-k">=</span><span class="pl-s1"><span class="pl-pds">&quot;</span>textAlign<span class="pl-pds">&quot;</span></span>);d[b]<span class="pl-k">=</span>a;d.htmlUpdateTransform()};d.attr({text<span class="pl-k">:</span>a,x<span class="pl-k">:</span>v(b),y<span class="pl-k">:</span>v(c)}).css({position<span class="pl-k">:</span><span class="pl-s1"><span class="pl-pds">&quot;</span>absolute<span class="pl-pds">&quot;</span></span>,whiteSpace<span class="pl-k">:</span><span class="pl-s1"><span class="pl-pds">&quot;</span>nowrap<span class="pl-pds">&quot;</span></span>,fontFamily<span class="pl-k">:</span><span class="pl-v">this</span>.<span class="pl-sc">style</span>.<span class="pl-sc">fontFamily</span>,</td>
      </tr>
      <tr>
        <td id="L77" class="blob-num js-line-number" data-line-number="77"></td>
        <td id="LC77" class="blob-code js-file-line">fontSize<span class="pl-k">:</span><span class="pl-v">this</span>.<span class="pl-sc">style</span>.<span class="pl-sc">fontSize</span>});d.css<span class="pl-k">=</span>d.htmlCss;<span class="pl-k">if</span>(f.isSVG)<span class="pl-s3">d</span>.<span class="pl-en">add</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){<span class="pl-s">var</span> b,c<span class="pl-k">=</span>f.box.<span class="pl-sc">parentNode</span>,j<span class="pl-k">=</span>[];<span class="pl-k">if</span>(<span class="pl-v">this</span>.parentGroup<span class="pl-k">=</span>a){<span class="pl-k">if</span>(b<span class="pl-k">=</span>a.div,<span class="pl-k">!</span>b){<span class="pl-k">for</span>(;a;)j.<span class="pl-s3">push</span>(a),a<span class="pl-k">=</span>a.parentGroup;q(j.<span class="pl-s3">reverse</span>(),<span class="pl-st">function</span>(<span class="pl-vpf">a</span>){<span class="pl-s">var</span> d;b<span class="pl-k">=</span>a.div<span class="pl-k">=</span>a.div<span class="pl-k">||</span>$(Ka,{className<span class="pl-k">:</span>F(a.element,<span class="pl-s1"><span class="pl-pds">&quot;</span>class<span class="pl-pds">&quot;</span></span>)},{position<span class="pl-k">:</span><span class="pl-s1"><span class="pl-pds">&quot;</span>absolute<span class="pl-pds">&quot;</span></span>,left<span class="pl-k">:</span>(a.translateX<span class="pl-k">||</span><span class="pl-c1">0</span>)<span class="pl-k">+</span><span class="pl-s1"><span class="pl-pds">&quot;</span>px<span class="pl-pds">&quot;</span></span>,top<span class="pl-k">:</span>(a.translateY<span class="pl-k">||</span><span class="pl-c1">0</span>)<span class="pl-k">+</span><span class="pl-s1"><span class="pl-pds">&quot;</span>px<span class="pl-pds">&quot;</span></span>},b<span class="pl-k">||</span>c);d<span class="pl-k">=</span>b.<span class="pl-sc">style</span>;r(a,{<span class="pl-en">translateXSetter</span>:<span class="pl-st">function</span>(<span class="pl-vpf">b</span>,<span class="pl-vpf">c</span>){d.<span class="pl-sc">left</span><span class="pl-k">=</span>b<span class="pl-k">+</span><span class="pl-s1"><span class="pl-pds">&quot;</span>px<span class="pl-pds">&quot;</span></span>;a[c]<span class="pl-k">=</span>b;a.doTransform<span class="pl-k">=!</span><span class="pl-c1">0</span>},<span class="pl-en">translateYSetter</span>:<span class="pl-st">function</span>(<span class="pl-vpf">b</span>,<span class="pl-vpf">c</span>){d.<span class="pl-sc">top</span><span class="pl-k">=</span>b<span class="pl-k">+</span><span class="pl-s1"><span class="pl-pds">&quot;</span>px<span class="pl-pds">&quot;</span></span>;a[c]<span class="pl-k">=</span>b;a.doTransform<span class="pl-k">=!</span><span class="pl-c1">0</span>},<span class="pl-en">visibilitySetter</span>:<span class="pl-st">function</span>(<span class="pl-vpf">a</span>,</td>
      </tr>
      <tr>
        <td id="L78" class="blob-num js-line-number" data-line-number="78"></td>
        <td id="LC78" class="blob-code js-file-line"><span class="pl-vpf">b</span>){d[b]<span class="pl-k">=</span>a}})})}}<span class="pl-k">else</span> b<span class="pl-k">=</span>c;b.<span class="pl-s3">appendChild</span>(e);d.added<span class="pl-k">=!</span><span class="pl-c1">0</span>;d.alignOnAdd<span class="pl-k">&amp;&amp;</span>d.htmlUpdateTransform();<span class="pl-k">return</span> d};<span class="pl-k">return</span> d}});<span class="pl-s">var</span> Z;<span class="pl-k">if</span>(<span class="pl-k">!</span>ba<span class="pl-k">&amp;&amp;!</span>ga){Z<span class="pl-k">=</span>{<span class="pl-en">init</span>:<span class="pl-st">function</span>(<span class="pl-vpf">a</span>,<span class="pl-vpf">b</span>){<span class="pl-s">var</span> c<span class="pl-k">=</span>[<span class="pl-s1"><span class="pl-pds">&quot;</span>&lt;<span class="pl-pds">&quot;</span></span>,b,<span class="pl-s1"><span class="pl-pds">&#39;</span> filled=&quot;f&quot; stroked=&quot;f&quot;<span class="pl-pds">&#39;</span></span>],d<span class="pl-k">=</span>[<span class="pl-s1"><span class="pl-pds">&quot;</span>position: <span class="pl-pds">&quot;</span></span>,<span class="pl-s1"><span class="pl-pds">&quot;</span>absolute<span class="pl-pds">&quot;</span></span>,<span class="pl-s1"><span class="pl-pds">&quot;</span>;<span class="pl-pds">&quot;</span></span>],e<span class="pl-k">=</span>b<span class="pl-k">===</span>Ka;(b<span class="pl-k">===</span><span class="pl-s1"><span class="pl-pds">&quot;</span>shape<span class="pl-pds">&quot;</span></span><span class="pl-k">||</span>e)<span class="pl-k">&amp;&amp;</span>d.<span class="pl-s3">push</span>(<span class="pl-s1"><span class="pl-pds">&quot;</span>left:0;top:0;width:1px;height:1px;<span class="pl-pds">&quot;</span></span>);d.<span class="pl-s3">push</span>(<span class="pl-s1"><span class="pl-pds">&quot;</span>visibility: <span class="pl-pds">&quot;</span></span>,e<span class="pl-k">?</span><span class="pl-s1"><span class="pl-pds">&quot;</span>hidden<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s1"><span class="pl-pds">&quot;</span>visible<span class="pl-pds">&quot;</span></span>);c.<span class="pl-s3">push</span>(<span class="pl-s1"><span class="pl-pds">&#39;</span> style=&quot;<span class="pl-pds">&#39;</span></span>,d.<span class="pl-s3">join</span>(<span class="pl-s1"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>),<span class="pl-s1"><span class="pl-pds">&#39;</span>&quot;/&gt;<span class="pl-pds">&#39;</span></span>);<span class="pl-k">if</span>(b)c<span class="pl-k">=</span>e<span class="pl-k">||</span>b<span class="pl-k">===</span><span class="pl-s1"><span class="pl-pds">&quot;</span>span<span class="pl-pds">&quot;</span></span><span class="pl-k">||</span>b<span class="pl-k">===</span><span class="pl-s1"><span class="pl-pds">&quot;</span>img<span class="pl-pds">&quot;</span></span><span class="pl-k">?</span>c.<span class="pl-s3">join</span>(<span class="pl-s1"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>)<span class="pl-k">:</span>a.prepVML(c),<span class="pl-v">this</span>.element<span class="pl-k">=</span>$(c);<span class="pl-v">this</span>.renderer<span class="pl-k">=</span>a},<span class="pl-en">add</span>:<span class="pl-st">function</span>(<span class="pl-vpf">a</span>){<span class="pl-s">var</span> b<span class="pl-k">=</span><span class="pl-v">this</span>.renderer,</td>
      </tr>
      <tr>
        <td id="L79" class="blob-num js-line-number" data-line-number="79"></td>
        <td id="LC79" class="blob-code js-file-line">c<span class="pl-k">=</span><span class="pl-v">this</span>.element,d<span class="pl-k">=</span>b.box,d<span class="pl-k">=</span>a<span class="pl-k">?</span>a.element<span class="pl-k">||</span>a<span class="pl-k">:</span>d;a<span class="pl-k">&amp;&amp;</span>a.inverted<span class="pl-k">&amp;&amp;</span>b.invertChild(c,d);d.<span class="pl-s3">appendChild</span>(c);<span class="pl-v">this</span>.added<span class="pl-k">=!</span><span class="pl-c1">0</span>;<span class="pl-v">this</span>.alignOnAdd<span class="pl-k">&amp;&amp;!</span><span class="pl-v">this</span>.deferUpdateTransform<span class="pl-k">&amp;&amp;</span><span class="pl-v">this</span>.updateTransform();<span class="pl-k">if</span>(<span class="pl-v">this</span>.onAdd)<span class="pl-v">this</span>.onAdd();<span class="pl-k">return</span> <span class="pl-v">this</span>},updateTransform<span class="pl-k">:</span>S.<span class="pl-sc">prototype</span>.htmlUpdateTransform,<span class="pl-en">setSpanRotation</span>:<span class="pl-st">function</span>(){<span class="pl-s">var</span> a<span class="pl-k">=</span><span class="pl-v">this</span>.rotation,b<span class="pl-k">=</span>aa(a<span class="pl-k">*</span>Ea),c<span class="pl-k">=</span>fa(a<span class="pl-k">*</span>Ea);B(<span class="pl-v">this</span>.element,{filter<span class="pl-k">:</span>a<span class="pl-k">?</span>[<span class="pl-s1"><span class="pl-pds">&quot;</span>progid:DXImageTransform.Microsoft.Matrix(M11=<span class="pl-pds">&quot;</span></span>,b,<span class="pl-s1"><span class="pl-pds">&quot;</span>, M12=<span class="pl-pds">&quot;</span></span>,<span class="pl-k">-</span>c,<span class="pl-s1"><span class="pl-pds">&quot;</span>, M21=<span class="pl-pds">&quot;</span></span>,c,<span class="pl-s1"><span class="pl-pds">&quot;</span>, M22=<span class="pl-pds">&quot;</span></span>,b,<span class="pl-s1"><span class="pl-pds">&quot;</span>, sizingMethod=&#39;auto expand&#39;)<span class="pl-pds">&quot;</span></span>].<span class="pl-s3">join</span>(<span class="pl-s1"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>)<span class="pl-k">:</span>P})},<span class="pl-en">getSpanCorrection</span>:<span class="pl-st">function</span>(<span class="pl-vpf">a</span>,</td>
      </tr>
      <tr>
        <td id="L80" class="blob-num js-line-number" data-line-number="80"></td>
        <td id="LC80" class="blob-code js-file-line"><span class="pl-vpf">b</span>,<span class="pl-vpf">c</span>,<span class="pl-vpf">d</span>,<span class="pl-vpf">e</span>){<span class="pl-s">var</span> f<span class="pl-k">=</span>d<span class="pl-k">?</span>aa(d<span class="pl-k">*</span>Ea)<span class="pl-k">:</span><span class="pl-c1">1</span>,g<span class="pl-k">=</span>d<span class="pl-k">?</span>fa(d<span class="pl-k">*</span>Ea)<span class="pl-k">:</span><span class="pl-c1">0</span>,h<span class="pl-k">=</span>p(<span class="pl-v">this</span>.elemHeight,<span class="pl-v">this</span>.element.offsetHeight),i;<span class="pl-v">this</span>.xCorr<span class="pl-k">=</span>f<span class="pl-k">&lt;</span><span class="pl-c1">0</span><span class="pl-k">&amp;&amp;-</span>a;<span class="pl-v">this</span>.yCorr<span class="pl-k">=</span>g<span class="pl-k">&lt;</span><span class="pl-c1">0</span><span class="pl-k">&amp;&amp;-</span>h;i<span class="pl-k">=</span>f<span class="pl-k">*</span>g<span class="pl-k">&lt;</span><span class="pl-c1">0</span>;<span class="pl-v">this</span>.xCorr<span class="pl-k">+=</span>g<span class="pl-k">*</span>b<span class="pl-k">*</span>(i<span class="pl-k">?</span><span class="pl-c1">1</span><span class="pl-k">-</span>c<span class="pl-k">:</span>c);<span class="pl-v">this</span>.yCorr<span class="pl-k">-=</span>f<span class="pl-k">*</span>b<span class="pl-k">*</span>(d<span class="pl-k">?</span>i<span class="pl-k">?</span>c<span class="pl-k">:</span><span class="pl-c1">1</span><span class="pl-k">-</span>c<span class="pl-k">:</span><span class="pl-c1">1</span>);e<span class="pl-k">&amp;&amp;</span>e<span class="pl-k">!==</span><span class="pl-s1"><span class="pl-pds">&quot;</span>left<span class="pl-pds">&quot;</span></span><span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.xCorr<span class="pl-k">-=</span>a<span class="pl-k">*</span>c<span class="pl-k">*</span>(f<span class="pl-k">&lt;</span><span class="pl-c1">0</span><span class="pl-k">?-</span><span class="pl-c1">1</span><span class="pl-k">:</span><span class="pl-c1">1</span>),d<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.yCorr<span class="pl-k">-=</span>h<span class="pl-k">*</span>c<span class="pl-k">*</span>(g<span class="pl-k">&lt;</span><span class="pl-c1">0</span><span class="pl-k">?-</span><span class="pl-c1">1</span><span class="pl-k">:</span><span class="pl-c1">1</span>)),B(<span class="pl-v">this</span>.element,{textAlign<span class="pl-k">:</span>e}))},<span class="pl-en">pathToVML</span>:<span class="pl-st">function</span>(<span class="pl-vpf">a</span>){<span class="pl-k">for</span>(<span class="pl-s">var</span> b<span class="pl-k">=</span>a.<span class="pl-sc">length</span>,c<span class="pl-k">=</span>[];b<span class="pl-k">--</span>;)<span class="pl-k">if</span>(ja(a[b]))c[b]<span class="pl-k">=</span>v(a[b]<span class="pl-k">*</span><span class="pl-c1">10</span>)<span class="pl-k">-</span><span class="pl-c1">5</span>;<span class="pl-k">else</span> <span class="pl-k">if</span>(a[b]<span class="pl-k">===</span><span class="pl-s1"><span class="pl-pds">&quot;</span>Z<span class="pl-pds">&quot;</span></span>)c[b]<span class="pl-k">=</span><span class="pl-s1"><span class="pl-pds">&quot;</span>x<span class="pl-pds">&quot;</span></span>;<span class="pl-k">else</span> <span class="pl-k">if</span>(c[b]<span class="pl-k">=</span>a[b],a.isArc<span class="pl-k">&amp;&amp;</span>(a[b]<span class="pl-k">===</span><span class="pl-s1"><span class="pl-pds">&quot;</span>wa<span class="pl-pds">&quot;</span></span><span class="pl-k">||</span>a[b]<span class="pl-k">===</span><span class="pl-s1"><span class="pl-pds">&quot;</span>at<span class="pl-pds">&quot;</span></span>))c[b<span class="pl-k">+</span><span class="pl-c1">5</span>]<span class="pl-k">===</span>c[b<span class="pl-k">+</span><span class="pl-c1">7</span>]<span class="pl-k">&amp;&amp;</span>(c[b<span class="pl-k">+</span><span class="pl-c1">7</span>]<span class="pl-k">+=</span>a[b<span class="pl-k">+</span><span class="pl-c1">7</span>]<span class="pl-k">&gt;</span>a[b<span class="pl-k">+</span></td>
      </tr>
      <tr>
        <td id="L81" class="blob-num js-line-number" data-line-number="81"></td>
        <td id="LC81" class="blob-code js-file-line"><span class="pl-c1">5</span>]<span class="pl-k">?</span><span class="pl-c1">1</span><span class="pl-k">:-</span><span class="pl-c1">1</span>),c[b<span class="pl-k">+</span><span class="pl-c1">6</span>]<span class="pl-k">===</span>c[b<span class="pl-k">+</span><span class="pl-c1">8</span>]<span class="pl-k">&amp;&amp;</span>(c[b<span class="pl-k">+</span><span class="pl-c1">8</span>]<span class="pl-k">+=</span>a[b<span class="pl-k">+</span><span class="pl-c1">8</span>]<span class="pl-k">&gt;</span>a[b<span class="pl-k">+</span><span class="pl-c1">6</span>]<span class="pl-k">?</span><span class="pl-c1">1</span><span class="pl-k">:-</span><span class="pl-c1">1</span>);<span class="pl-k">return</span> c.<span class="pl-s3">join</span>(<span class="pl-s1"><span class="pl-pds">&quot;</span> <span class="pl-pds">&quot;</span></span>)<span class="pl-k">||</span><span class="pl-s1"><span class="pl-pds">&quot;</span>x<span class="pl-pds">&quot;</span></span>},<span class="pl-en">clip</span>:<span class="pl-st">function</span>(<span class="pl-vpf">a</span>){<span class="pl-s">var</span> b<span class="pl-k">=</span><span class="pl-v">this</span>,c;a<span class="pl-k">?</span>(c<span class="pl-k">=</span>a.members,la(c,b),c.<span class="pl-s3">push</span>(b),<span class="pl-s3">b</span>.<span class="pl-en">destroyClip</span><span class="pl-k">=</span><span class="pl-st">function</span>(){la(c,b)},a<span class="pl-k">=</span>a.getCSS(b))<span class="pl-k">:</span>(b.destroyClip<span class="pl-k">&amp;&amp;</span>b.destroyClip(),a<span class="pl-k">=</span>{clip<span class="pl-k">:</span>hb<span class="pl-k">?</span><span class="pl-s1"><span class="pl-pds">&quot;</span>inherit<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s1"><span class="pl-pds">&quot;</span>rect(auto)<span class="pl-pds">&quot;</span></span>});<span class="pl-k">return</span> b.css(a)},css<span class="pl-k">:</span>S.<span class="pl-sc">prototype</span>.htmlCss,<span class="pl-en">safeRemoveChild</span>:<span class="pl-st">function</span>(<span class="pl-vpf">a</span>){a.<span class="pl-sc">parentNode</span><span class="pl-k">&amp;&amp;</span>Qa(a)},<span class="pl-en">destroy</span>:<span class="pl-st">function</span>(){<span class="pl-v">this</span>.destroyClip<span class="pl-k">&amp;&amp;</span><span class="pl-v">this</span>.destroyClip();<span class="pl-k">return</span> S.<span class="pl-sc">prototype</span>.destroy.<span class="pl-s3">apply</span>(<span class="pl-v">this</span>)},<span class="pl-en">on</span>:<span class="pl-st">function</span>(<span class="pl-vpf">a</span>,<span class="pl-vpf">b</span>){<span class="pl-v">this</span>.element[<span class="pl-s1"><span class="pl-pds">&quot;</span>on<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>a]<span class="pl-k">=</span><span class="pl-st">function</span>(){<span class="pl-s">var</span> a<span class="pl-k">=</span></td>
      </tr>
      <tr>
        <td id="L82" class="blob-num js-line-number" data-line-number="82"></td>
        <td id="LC82" class="blob-code js-file-line">G.<span class="pl-s3">event</span>;a.<span class="pl-sc">target</span><span class="pl-k">=</span>a.srcElement;b(a)};<span class="pl-k">return</span> <span class="pl-v">this</span>},<span class="pl-en">cutOffPath</span>:<span class="pl-st">function</span>(<span class="pl-vpf">a</span>,<span class="pl-vpf">b</span>){<span class="pl-s">var</span> c,a<span class="pl-k">=</span>a.<span class="pl-s3">split</span>(<span class="pl-sr"><span class="pl-pds">/</span><span class="pl-c1">[ ,]</span><span class="pl-pds">/</span></span>);c<span class="pl-k">=</span>a.<span class="pl-sc">length</span>;<span class="pl-k">if</span>(c<span class="pl-k">===</span><span class="pl-c1">9</span><span class="pl-k">||</span>c<span class="pl-k">===</span><span class="pl-c1">11</span>)a[c<span class="pl-k">-</span><span class="pl-c1">4</span>]<span class="pl-k">=</span>a[c<span class="pl-k">-</span><span class="pl-c1">2</span>]<span class="pl-k">=</span>y(a[c<span class="pl-k">-</span><span class="pl-c1">2</span>])<span class="pl-k">-</span><span class="pl-c1">10</span><span class="pl-k">*</span>b;<span class="pl-k">return</span> a.<span class="pl-s3">join</span>(<span class="pl-s1"><span class="pl-pds">&quot;</span> <span class="pl-pds">&quot;</span></span>)},<span class="pl-en">shadow</span>:<span class="pl-st">function</span>(<span class="pl-vpf">a</span>,<span class="pl-vpf">b</span>,<span class="pl-vpf">c</span>){<span class="pl-s">var</span> d<span class="pl-k">=</span>[],e,f<span class="pl-k">=</span><span class="pl-v">this</span>.element,g<span class="pl-k">=</span><span class="pl-v">this</span>.renderer,h,i<span class="pl-k">=</span>f.<span class="pl-sc">style</span>,j,k<span class="pl-k">=</span>f.path,l,n,m,o;k<span class="pl-k">&amp;&amp;typeof</span> k.<span class="pl-sc">value</span><span class="pl-k">!==</span><span class="pl-s1"><span class="pl-pds">&quot;</span>string<span class="pl-pds">&quot;</span></span><span class="pl-k">&amp;&amp;</span>(k<span class="pl-k">=</span><span class="pl-s1"><span class="pl-pds">&quot;</span>x<span class="pl-pds">&quot;</span></span>);n<span class="pl-k">=</span>k;<span class="pl-k">if</span>(a){m<span class="pl-k">=</span>p(a.<span class="pl-sc">width</span>,<span class="pl-c1">3</span>);o<span class="pl-k">=</span>(a.opacity<span class="pl-k">||</span><span class="pl-c1">0.15</span>)/m;<span class="pl-k">for</span>(e<span class="pl-k">=</span><span class="pl-c1">1</span>;e<span class="pl-k">&lt;=</span><span class="pl-c1">3</span>;e<span class="pl-k">++</span>){l<span class="pl-k">=</span>m<span class="pl-k">*</span><span class="pl-c1">2</span><span class="pl-k">+</span><span class="pl-c1">1</span><span class="pl-k">-</span><span class="pl-c1">2</span><span class="pl-k">*</span>e;c<span class="pl-k">&amp;&amp;</span>(n<span class="pl-k">=</span><span class="pl-v">this</span>.cutOffPath(k.<span class="pl-sc">value</span>,l<span class="pl-k">+</span><span class="pl-c1">0.5</span>));j<span class="pl-k">=</span>[<span class="pl-s1"><span class="pl-pds">&#39;</span>&lt;shape isShadow=&quot;true&quot; strokeweight=&quot;<span class="pl-pds">&#39;</span></span>,l,<span class="pl-s1"><span class="pl-pds">&#39;</span>&quot; filled=&quot;false&quot; path=&quot;<span class="pl-pds">&#39;</span></span>,n,<span class="pl-s1"><span class="pl-pds">&#39;</span>&quot; coordsize=&quot;10 10&quot; style=&quot;<span class="pl-pds">&#39;</span></span>,</td>
      </tr>
      <tr>
        <td id="L83" class="blob-num js-line-number" data-line-number="83"></td>
        <td id="LC83" class="blob-code js-file-line">f.<span class="pl-sc">style</span>.cssText,<span class="pl-s1"><span class="pl-pds">&#39;</span>&quot; /&gt;<span class="pl-pds">&#39;</span></span>];h<span class="pl-k">=</span>$(g.prepVML(j),<span class="pl-c1">null</span>,{left<span class="pl-k">:</span>y(i.<span class="pl-sc">left</span>)<span class="pl-k">+</span>p(a.offsetX,<span class="pl-c1">1</span>),top<span class="pl-k">:</span>y(i.<span class="pl-sc">top</span>)<span class="pl-k">+</span>p(a.offsetY,<span class="pl-c1">1</span>)});<span class="pl-k">if</span>(c)h.cutOff<span class="pl-k">=</span>l<span class="pl-k">+</span><span class="pl-c1">1</span>;j<span class="pl-k">=</span>[<span class="pl-s1"><span class="pl-pds">&#39;</span>&lt;stroke color=&quot;<span class="pl-pds">&#39;</span></span>,a.<span class="pl-sc">color</span><span class="pl-k">||</span><span class="pl-s1"><span class="pl-pds">&quot;</span>black<span class="pl-pds">&quot;</span></span>,<span class="pl-s1"><span class="pl-pds">&#39;</span>&quot; opacity=&quot;<span class="pl-pds">&#39;</span></span>,o<span class="pl-k">*</span>e,<span class="pl-s1"><span class="pl-pds">&#39;</span>&quot;/&gt;<span class="pl-pds">&#39;</span></span>];$(g.prepVML(j),<span class="pl-c1">null</span>,<span class="pl-c1">null</span>,h);b<span class="pl-k">?</span>b.element.<span class="pl-s3">appendChild</span>(h)<span class="pl-k">:</span>f.<span class="pl-sc">parentNode</span>.<span class="pl-s3">insertBefore</span>(h,f);d.<span class="pl-s3">push</span>(h)}<span class="pl-v">this</span>.shadows<span class="pl-k">=</span>d}<span class="pl-k">return</span> <span class="pl-v">this</span>},updateShadows<span class="pl-k">:</span>sa,<span class="pl-en">setAttr</span>:<span class="pl-st">function</span>(<span class="pl-vpf">a</span>,<span class="pl-vpf">b</span>){hb<span class="pl-k">?</span><span class="pl-v">this</span>.element[a]<span class="pl-k">=</span>b<span class="pl-k">:</span><span class="pl-v">this</span>.element.<span class="pl-s3">setAttribute</span>(a,b)},<span class="pl-en">classSetter</span>:<span class="pl-st">function</span>(<span class="pl-vpf">a</span>){<span class="pl-v">this</span>.element.<span class="pl-sc">className</span><span class="pl-k">=</span>a},<span class="pl-en">dashstyleSetter</span>:<span class="pl-st">function</span>(<span class="pl-vpf">a</span>,<span class="pl-vpf">b</span>,<span class="pl-vpf">c</span>){(c.<span class="pl-s3">getElementsByTagName</span>(<span class="pl-s1"><span class="pl-pds">&quot;</span>stroke<span class="pl-pds">&quot;</span></span>)[<span class="pl-c1">0</span>]<span class="pl-k">||</span></td>
      </tr>
      <tr>
        <td id="L84" class="blob-num js-line-number" data-line-number="84"></td>
        <td id="LC84" class="blob-code js-file-line">$(<span class="pl-v">this</span>.renderer.prepVML([<span class="pl-s1"><span class="pl-pds">&quot;</span>&lt;stroke/&gt;<span class="pl-pds">&quot;</span></span>]),<span class="pl-c1">null</span>,<span class="pl-c1">null</span>,c))[b]<span class="pl-k">=</span>a<span class="pl-k">||</span><span class="pl-s1"><span class="pl-pds">&quot;</span>solid<span class="pl-pds">&quot;</span></span>;<span class="pl-v">this</span>[b]<span class="pl-k">=</span>a},<span class="pl-en">dSetter</span>:<span class="pl-st">function</span>(<span class="pl-vpf">a</span>,<span class="pl-vpf">b</span>,<span class="pl-vpf">c</span>){<span class="pl-s">var</span> d<span class="pl-k">=</span><span class="pl-v">this</span>.shadows,a<span class="pl-k">=</span>a<span class="pl-k">||</span>[];<span class="pl-v">this</span>.d<span class="pl-k">=</span>a.join<span class="pl-k">&amp;&amp;</span>a.<span class="pl-s3">join</span>(<span class="pl-s1"><span class="pl-pds">&quot;</span> <span class="pl-pds">&quot;</span></span>);c.path<span class="pl-k">=</span>a<span class="pl-k">=</span><span class="pl-v">this</span>.pathToVML(a);<span class="pl-k">if</span>(d)<span class="pl-k">for</span>(c<span class="pl-k">=</span>d.<span class="pl-sc">length</span>;c<span class="pl-k">--</span>;)d[c].path<span class="pl-k">=</span>d[c].cutOff<span class="pl-k">?</span><span class="pl-v">this</span>.cutOffPath(a,d[c].cutOff)<span class="pl-k">:</span>a;<span class="pl-v">this</span>.setAttr(b,a)},<span class="pl-en">fillSetter</span>:<span class="pl-st">function</span>(<span class="pl-vpf">a</span>,<span class="pl-vpf">b</span>,<span class="pl-vpf">c</span>){<span class="pl-s">var</span> d<span class="pl-k">=</span>c.<span class="pl-sc">nodeName</span>;<span class="pl-k">if</span>(d<span class="pl-k">===</span><span class="pl-s1"><span class="pl-pds">&quot;</span>SPAN<span class="pl-pds">&quot;</span></span>)c.<span class="pl-sc">style</span>.<span class="pl-sc">color</span><span class="pl-k">=</span>a;<span class="pl-k">else</span> <span class="pl-k">if</span>(d<span class="pl-k">!==</span><span class="pl-s1"><span class="pl-pds">&quot;</span>IMG<span class="pl-pds">&quot;</span></span>)c.filled<span class="pl-k">=</span>a<span class="pl-k">!==</span>P,<span class="pl-v">this</span>.setAttr(<span class="pl-s1"><span class="pl-pds">&quot;</span>fillcolor<span class="pl-pds">&quot;</span></span>,<span class="pl-v">this</span>.renderer.<span class="pl-sc">color</span>(a,c,b,<span class="pl-v">this</span>))},opacitySetter<span class="pl-k">:</span>sa,<span class="pl-en">rotationSetter</span>:<span class="pl-st">function</span>(<span class="pl-vpf">a</span>,<span class="pl-vpf">b</span>,<span class="pl-vpf">c</span>){c<span class="pl-k">=</span>c.<span class="pl-sc">style</span>;</td>
      </tr>
      <tr>
        <td id="L85" class="blob-num js-line-number" data-line-number="85"></td>
        <td id="LC85" class="blob-code js-file-line"><span class="pl-v">this</span>[b]<span class="pl-k">=</span>c[b]<span class="pl-k">=</span>a;c.<span class="pl-sc">left</span><span class="pl-k">=-</span>v(fa(a<span class="pl-k">*</span>Ea)<span class="pl-k">+</span><span class="pl-c1">1</span>)<span class="pl-k">+</span><span class="pl-s1"><span class="pl-pds">&quot;</span><span class="pl-en">px&quot;;c.top=v(aa(a*Ea))+&quot;px&quot;},strokeSetter:function(a,b,c){this.setAttr(&quot;strokecolor&quot;,this.renderer.color(a,c,b))},&quot;stroke-widthSetter</span><span class="pl-pds">&quot;</span></span>:<span class="pl-st">function</span>(<span class="pl-vpf">a</span>,<span class="pl-vpf">b</span>,<span class="pl-vpf">c</span>){c.stroked<span class="pl-k">=!!</span>a;<span class="pl-v">this</span>[b]<span class="pl-k">=</span>a;ja(a)<span class="pl-k">&amp;&amp;</span>(a<span class="pl-k">+=</span><span class="pl-s1"><span class="pl-pds">&quot;</span>px<span class="pl-pds">&quot;</span></span>);<span class="pl-v">this</span>.setAttr(<span class="pl-s1"><span class="pl-pds">&quot;</span>strokeweight<span class="pl-pds">&quot;</span></span>,a)},<span class="pl-en">titleSetter</span>:<span class="pl-st">function</span>(<span class="pl-vpf">a</span>,<span class="pl-vpf">b</span>){<span class="pl-v">this</span>.setAttr(b,a)},<span class="pl-en">visibilitySetter</span>:<span class="pl-st">function</span>(<span class="pl-vpf">a</span>,<span class="pl-vpf">b</span>,<span class="pl-vpf">c</span>){a<span class="pl-k">===</span><span class="pl-s1"><span class="pl-pds">&quot;</span>inherit<span class="pl-pds">&quot;</span></span><span class="pl-k">&amp;&amp;</span>(a<span class="pl-k">=</span><span class="pl-s1"><span class="pl-pds">&quot;</span>visible<span class="pl-pds">&quot;</span></span>);<span class="pl-v">this</span>.shadows<span class="pl-k">&amp;&amp;</span>q(<span class="pl-v">this</span>.shadows,<span class="pl-st">function</span>(<span class="pl-vpf">c</span>){c.<span class="pl-sc">style</span>[b]<span class="pl-k">=</span>a});c.<span class="pl-sc">nodeName</span><span class="pl-k">===</span><span class="pl-s1"><span class="pl-pds">&quot;</span>DIV<span class="pl-pds">&quot;</span></span><span class="pl-k">&amp;&amp;</span>(a<span class="pl-k">=</span>a<span class="pl-k">===</span><span class="pl-s1"><span class="pl-pds">&quot;</span>hidden<span class="pl-pds">&quot;</span></span><span class="pl-k">?</span><span class="pl-s1"><span class="pl-pds">&quot;</span>-999em<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-c1">0</span>,hb<span class="pl-k">||</span>(c.<span class="pl-sc">style</span>[b]<span class="pl-k">=</span>a<span class="pl-k">?</span><span class="pl-s1"><span class="pl-pds">&quot;</span>visible<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s1"><span class="pl-pds">&quot;</span>hidden<span class="pl-pds">&quot;</span></span>),</td>
      </tr>
      <tr>
        <td id="L86" class="blob-num js-line-number" data-line-number="86"></td>
        <td id="LC86" class="blob-code js-file-line">b<span class="pl-k">=</span><span class="pl-s1"><span class="pl-pds">&quot;</span>top<span class="pl-pds">&quot;</span></span>);c.<span class="pl-sc">style</span>[b]<span class="pl-k">=</span>a},<span class="pl-en">xSetter</span>:<span class="pl-st">function</span>(<span class="pl-vpf">a</span>,<span class="pl-vpf">b</span>,<span class="pl-vpf">c</span>){<span class="pl-v">this</span>[b]<span class="pl-k">=</span>a;b<span class="pl-k">===</span><span class="pl-s1"><span class="pl-pds">&quot;</span>x<span class="pl-pds">&quot;</span></span><span class="pl-k">?</span>b<span class="pl-k">=</span><span class="pl-s1"><span class="pl-pds">&quot;</span>left<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span>b<span class="pl-k">===</span><span class="pl-s1"><span class="pl-pds">&quot;</span>y<span class="pl-pds">&quot;</span></span><span class="pl-k">&amp;&amp;</span>(b<span class="pl-k">=</span><span class="pl-s1"><span class="pl-pds">&quot;</span>top<span class="pl-pds">&quot;</span></span>);<span class="pl-v">this</span>.updateClipping<span class="pl-k">?</span>(<span class="pl-v">this</span>[b]<span class="pl-k">=</span>a,<span class="pl-v">this</span>.updateClipping())<span class="pl-k">:</span>c.<span class="pl-sc">style</span>[b]<span class="pl-k">=</span>a},<span class="pl-en">zIndexSetter</span>:<span class="pl-st">function</span>(<span class="pl-vpf">a</span>,<span class="pl-vpf">b</span>,<span class="pl-vpf">c</span>){c.<span class="pl-sc">style</span>[b]<span class="pl-k">=</span>a}};K.VMLElement<span class="pl-k">=</span>Z<span class="pl-k">=</span>ma(S,Z);<span class="pl-s3">Z</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">ySetter</span><span class="pl-k">=</span><span class="pl-s3">Z</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">widthSetter</span><span class="pl-k">=</span><span class="pl-s3">Z</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">heightSetter</span><span class="pl-k">=</span>Z.<span class="pl-sc">prototype</span>.xSetter;<span class="pl-s">var</span> ia<span class="pl-k">=</span>{Element<span class="pl-k">:</span>Z,isIE8<span class="pl-k">:</span>wa.<span class="pl-s3">indexOf</span>(<span class="pl-s1"><span class="pl-pds">&quot;</span>MSIE 8.0<span class="pl-pds">&quot;</span></span>)<span class="pl-k">&gt;-</span><span class="pl-c1">1</span>,<span class="pl-en">init</span>:<span class="pl-st">function</span>(<span class="pl-vpf">a</span>,<span class="pl-vpf">b</span>,<span class="pl-vpf">c</span>,<span class="pl-vpf">d</span>){<span class="pl-s">var</span> e;<span class="pl-v">this</span>.alignedObjects<span class="pl-k">=</span>[];d<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-s3">createElement</span>(Ka).css(r(<span class="pl-v">this</span>.getStyle(d),{position<span class="pl-k">:</span><span class="pl-s1"><span class="pl-pds">&quot;</span>relative<span class="pl-pds">&quot;</span></span>}));e<span class="pl-k">=</span>d.element;</td>
      </tr>
      <tr>
        <td id="L87" class="blob-num js-line-number" data-line-number="87"></td>
        <td id="LC87" class="blob-code js-file-line">a.<span class="pl-s3">appendChild</span>(d.element);<span class="pl-v">this</span>.isVML<span class="pl-k">=!</span><span class="pl-c1">0</span>;<span class="pl-v">this</span>.box<span class="pl-k">=</span>e;<span class="pl-v">this</span>.boxWrapper<span class="pl-k">=</span>d;<span class="pl-v">this</span>.cache<span class="pl-k">=</span>{};<span class="pl-v">this</span>.setSize(b,c,<span class="pl-k">!</span><span class="pl-c1">1</span>);<span class="pl-k">if</span>(<span class="pl-k">!</span>x.<span class="pl-sc">namespaces</span>.hcv){x.<span class="pl-sc">namespaces</span>.<span class="pl-s3">add</span>(<span class="pl-s1"><span class="pl-pds">&quot;</span>hcv<span class="pl-pds">&quot;</span></span>,<span class="pl-s1"><span class="pl-pds">&quot;</span>urn:schemas-microsoft-com:vml<span class="pl-pds">&quot;</span></span>);<span class="pl-k">try</span>{x.<span class="pl-s3">createStyleSheet</span>().cssText<span class="pl-k">=</span><span class="pl-s1"><span class="pl-pds">&quot;</span>hcv<span class="pl-cce">\\</span>:fill, hcv<span class="pl-cce">\\</span>:path, hcv<span class="pl-cce">\\</span>:shape, hcv<span class="pl-cce">\\</span>:stroke{ behavior:url(#default#VML); display: inline-block; } <span class="pl-pds">&quot;</span></span>}<span class="pl-k">catch</span>(f){x.<span class="pl-sc">styleSheets</span>[<span class="pl-c1">0</span>].cssText<span class="pl-k">+=</span><span class="pl-s1"><span class="pl-pds">&quot;</span>hcv<span class="pl-cce">\\</span>:fill, hcv<span class="pl-cce">\\</span>:path, hcv<span class="pl-cce">\\</span>:shape, hcv<span class="pl-cce">\\</span>:stroke{ behavior:url(#default#VML); display: inline-block; } <span class="pl-pds">&quot;</span></span>}}},<span class="pl-en">isHidden</span>:<span class="pl-st">function</span>(){<span class="pl-k">return</span><span class="pl-k">!</span><span class="pl-v">this</span>.box.offsetWidth},</td>
      </tr>
      <tr>
        <td id="L88" class="blob-num js-line-number" data-line-number="88"></td>
        <td id="LC88" class="blob-code js-file-line"><span class="pl-en">clipRect</span>:<span class="pl-st">function</span>(<span class="pl-vpf">a</span>,<span class="pl-vpf">b</span>,<span class="pl-vpf">c</span>,<span class="pl-vpf">d</span>){<span class="pl-s">var</span> e<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-s3">createElement</span>(),f<span class="pl-k">=</span>da(a);<span class="pl-k">return</span> r(e,{members<span class="pl-k">:</span>[],left<span class="pl-k">:</span>(f<span class="pl-k">?</span>a.<span class="pl-sc">x</span><span class="pl-k">:</span>a)<span class="pl-k">+</span><span class="pl-c1">1</span>,top<span class="pl-k">:</span>(f<span class="pl-k">?</span>a.<span class="pl-sc">y</span><span class="pl-k">:</span>b)<span class="pl-k">+</span><span class="pl-c1">1</span>,width<span class="pl-k">:</span>(f<span class="pl-k">?</span>a.<span class="pl-sc">width</span><span class="pl-k">:</span>c)<span class="pl-k">-</span><span class="pl-c1">1</span>,height<span class="pl-k">:</span>(f<span class="pl-k">?</span>a.<span class="pl-sc">height</span><span class="pl-k">:</span>d)<span class="pl-k">-</span><span class="pl-c1">1</span>,<span class="pl-en">getCSS</span>:<span class="pl-st">function</span>(<span class="pl-vpf">a</span>){<span class="pl-s">var</span> b<span class="pl-k">=</span>a.element,c<span class="pl-k">=</span>b.<span class="pl-sc">nodeName</span>,a<span class="pl-k">=</span>a.inverted,d<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-sc">top</span><span class="pl-k">-</span>(c<span class="pl-k">===</span><span class="pl-s1"><span class="pl-pds">&quot;</span>shape<span class="pl-pds">&quot;</span></span><span class="pl-k">?</span>b.offsetTop<span class="pl-k">:</span><span class="pl-c1">0</span>),e<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-sc">left</span>,b<span class="pl-k">=</span>e<span class="pl-k">+</span><span class="pl-v">this</span>.<span class="pl-sc">width</span>,f<span class="pl-k">=</span>d<span class="pl-k">+</span><span class="pl-v">this</span>.<span class="pl-sc">height</span>,d<span class="pl-k">=</span>{clip<span class="pl-k">:</span><span class="pl-s1"><span class="pl-pds">&quot;</span>rect(<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>v(a<span class="pl-k">?</span>e<span class="pl-k">:</span>d)<span class="pl-k">+</span><span class="pl-s1"><span class="pl-pds">&quot;</span>px,<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>v(a<span class="pl-k">?</span>f<span class="pl-k">:</span>b)<span class="pl-k">+</span><span class="pl-s1"><span class="pl-pds">&quot;</span>px,<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>v(a<span class="pl-k">?</span>b<span class="pl-k">:</span>f)<span class="pl-k">+</span><span class="pl-s1"><span class="pl-pds">&quot;</span>px,<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>v(a<span class="pl-k">?</span>d<span class="pl-k">:</span>e)<span class="pl-k">+</span><span class="pl-s1"><span class="pl-pds">&quot;</span>px)<span class="pl-pds">&quot;</span></span>};<span class="pl-k">!</span>a<span class="pl-k">&amp;&amp;</span>hb<span class="pl-k">&amp;&amp;</span>c<span class="pl-k">===</span><span class="pl-s1"><span class="pl-pds">&quot;</span>DIV<span class="pl-pds">&quot;</span></span><span class="pl-k">&amp;&amp;</span>r(d,{width<span class="pl-k">:</span>b<span class="pl-k">+</span><span class="pl-s1"><span class="pl-pds">&quot;</span>px<span class="pl-pds">&quot;</span></span>,height<span class="pl-k">:</span>f<span class="pl-k">+</span><span class="pl-s1"><span class="pl-pds">&quot;</span>px<span class="pl-pds">&quot;</span></span>});<span class="pl-k">return</span> d},<span class="pl-en">updateClipping</span>:<span class="pl-st">function</span>(){q(e.members,<span class="pl-st">function</span>(<span class="pl-vpf">a</span>){a.element<span class="pl-k">&amp;&amp;</span></td>
      </tr>
      <tr>
        <td id="L89" class="blob-num js-line-number" data-line-number="89"></td>
        <td id="LC89" class="blob-code js-file-line">a.css(e.getCSS(a))})}})},<span class="pl-en">color</span>:<span class="pl-st">function</span>(<span class="pl-vpf">a</span>,<span class="pl-vpf">b</span>,<span class="pl-vpf">c</span>,<span class="pl-vpf">d</span>){<span class="pl-s">var</span> e<span class="pl-k">=</span><span class="pl-v">this</span>,f,g<span class="pl-k">=</span><span class="pl-sr"><span class="pl-pds">/</span><span class="pl-k">^</span>rgba<span class="pl-pds">/</span></span>,h,i,j<span class="pl-k">=</span>P;a<span class="pl-k">&amp;&amp;</span>a.linearGradient<span class="pl-k">?</span>i<span class="pl-k">=</span><span class="pl-s1"><span class="pl-pds">&quot;</span>gradient<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span>a<span class="pl-k">&amp;&amp;</span>a.radialGradient<span class="pl-k">&amp;&amp;</span>(i<span class="pl-k">=</span><span class="pl-s1"><span class="pl-pds">&quot;</span>pattern<span class="pl-pds">&quot;</span></span>);<span class="pl-k">if</span>(i){<span class="pl-s">var</span> k,l,n<span class="pl-k">=</span>a.linearGradient<span class="pl-k">||</span>a.radialGradient,m,o,p,D,J,C<span class="pl-k">=</span><span class="pl-s1"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>,a<span class="pl-k">=</span>a.stops,t,s<span class="pl-k">=</span>[],<span class="pl-en">u</span><span class="pl-k">=</span><span class="pl-st">function</span>(){h<span class="pl-k">=</span>[<span class="pl-s1"><span class="pl-pds">&#39;</span>&lt;fill colors=&quot;<span class="pl-pds">&#39;</span></span><span class="pl-k">+</span>s.<span class="pl-s3">join</span>(<span class="pl-s1"><span class="pl-pds">&quot;</span>,<span class="pl-pds">&quot;</span></span>)<span class="pl-k">+</span><span class="pl-s1"><span class="pl-pds">&#39;</span>&quot; opacity=&quot;<span class="pl-pds">&#39;</span></span>,p,<span class="pl-s1"><span class="pl-pds">&#39;</span>&quot; o:opacity2=&quot;<span class="pl-pds">&#39;</span></span>,o,<span class="pl-s1"><span class="pl-pds">&#39;</span>&quot; type=&quot;<span class="pl-pds">&#39;</span></span>,i,<span class="pl-s1"><span class="pl-pds">&#39;</span>&quot; <span class="pl-pds">&#39;</span></span>,C,<span class="pl-s1"><span class="pl-pds">&#39;</span>focus=&quot;100%&quot; method=&quot;any&quot; /&gt;<span class="pl-pds">&#39;</span></span>];$(e.prepVML(h),<span class="pl-c1">null</span>,<span class="pl-c1">null</span>,b)};m<span class="pl-k">=</span>a[<span class="pl-c1">0</span>];t<span class="pl-k">=</span>a[a.<span class="pl-sc">length</span><span class="pl-k">-</span><span class="pl-c1">1</span>];m[<span class="pl-c1">0</span>]<span class="pl-k">&gt;</span><span class="pl-c1">0</span><span class="pl-k">&amp;&amp;</span>a.<span class="pl-s3">unshift</span>([<span class="pl-c1">0</span>,m[<span class="pl-c1">1</span>]]);t[<span class="pl-c1">0</span>]<span class="pl-k">&lt;</span><span class="pl-c1">1</span><span class="pl-k">&amp;&amp;</span>a.<span class="pl-s3">push</span>([<span class="pl-c1">1</span>,t[<span class="pl-c1">1</span>]]);q(a,<span class="pl-st">function</span>(<span class="pl-vpf">a</span>,<span class="pl-vpf">b</span>){g.<span class="pl-s3">test</span>(a[<span class="pl-c1">1</span>])<span class="pl-k">?</span>(f<span class="pl-k">=</span></td>
      </tr>
      <tr>
        <td id="L90" class="blob-num js-line-number" data-line-number="90"></td>
        <td id="LC90" class="blob-code js-file-line">ya(a[<span class="pl-c1">1</span>]),k<span class="pl-k">=</span>f.get(<span class="pl-s1"><span class="pl-pds">&quot;</span>rgb<span class="pl-pds">&quot;</span></span>),l<span class="pl-k">=</span>f.get(<span class="pl-s1"><span class="pl-pds">&quot;</span>a<span class="pl-pds">&quot;</span></span>))<span class="pl-k">:</span>(k<span class="pl-k">=</span>a[<span class="pl-c1">1</span>],l<span class="pl-k">=</span><span class="pl-c1">1</span>);s.<span class="pl-s3">push</span>(a[<span class="pl-c1">0</span>]<span class="pl-k">*</span><span class="pl-c1">100</span><span class="pl-k">+</span><span class="pl-s1"><span class="pl-pds">&quot;</span>% <span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>k);b<span class="pl-k">?</span>(p<span class="pl-k">=</span>l,D<span class="pl-k">=</span>k)<span class="pl-k">:</span>(o<span class="pl-k">=</span>l,J<span class="pl-k">=</span>k)});<span class="pl-k">if</span>(c<span class="pl-k">===</span><span class="pl-s1"><span class="pl-pds">&quot;</span>fill<span class="pl-pds">&quot;</span></span>)<span class="pl-k">if</span>(i<span class="pl-k">===</span><span class="pl-s1"><span class="pl-pds">&quot;</span>gradient<span class="pl-pds">&quot;</span></span>)c<span class="pl-k">=</span>n.x1<span class="pl-k">||</span>n[<span class="pl-c1">0</span>]<span class="pl-k">||</span><span class="pl-c1">0</span>,a<span class="pl-k">=</span>n.y1<span class="pl-k">||</span>n[<span class="pl-c1">1</span>]<span class="pl-k">||</span><span class="pl-c1">0</span>,m<span class="pl-k">=</span>n.x2<span class="pl-k">||</span>n[<span class="pl-c1">2</span>]<span class="pl-k">||</span><span class="pl-c1">0</span>,n<span class="pl-k">=</span>n.y2<span class="pl-k">||</span>n[<span class="pl-c1">3</span>]<span class="pl-k">||</span><span class="pl-c1">0</span>,C<span class="pl-k">=</span><span class="pl-s1"><span class="pl-pds">&#39;</span>angle=&quot;<span class="pl-pds">&#39;</span></span><span class="pl-k">+</span>(<span class="pl-c1">90</span><span class="pl-k">-</span>V.<span class="pl-s3">atan</span>((n<span class="pl-k">-</span>a)/(m<span class="pl-k">-</span>c))<span class="pl-k">*</span><span class="pl-c1">180</span>/oa)<span class="pl-k">+</span><span class="pl-s1"><span class="pl-pds">&#39;</span>&quot;<span class="pl-pds">&#39;</span></span>,u();<span class="pl-k">else</span>{<span class="pl-s">var</span> j<span class="pl-k">=</span>n.r,r<span class="pl-k">=</span>j<span class="pl-k">*</span><span class="pl-c1">2</span>,v<span class="pl-k">=</span>j<span class="pl-k">*</span><span class="pl-c1">2</span>,x<span class="pl-k">=</span>n.cx,z<span class="pl-k">=</span>n.cy,R<span class="pl-k">=</span>b.radialReference,w,<span class="pl-en">j</span><span class="pl-k">=</span><span class="pl-st">function</span>(){R<span class="pl-k">&amp;&amp;</span>(w<span class="pl-k">=</span>d.getBBox(),x<span class="pl-k">+=</span>(R[<span class="pl-c1">0</span>]<span class="pl-k">-</span>w.<span class="pl-sc">x</span>)/w.<span class="pl-sc">width</span><span class="pl-k">-</span><span class="pl-c1">0.5</span>,z<span class="pl-k">+=</span>(R[<span class="pl-c1">1</span>]<span class="pl-k">-</span>w.<span class="pl-sc">y</span>)/w.<span class="pl-sc">height</span><span class="pl-k">-</span><span class="pl-c1">0.5</span>,r<span class="pl-k">*=</span>R[<span class="pl-c1">2</span>]/w.<span class="pl-sc">width</span>,v<span class="pl-k">*=</span>R[<span class="pl-c1">2</span>]/w.<span class="pl-sc">height</span>);C<span class="pl-k">=</span><span class="pl-s1"><span class="pl-pds">&#39;</span>src=&quot;<span class="pl-pds">&#39;</span></span><span class="pl-k">+</span>E.<span class="pl-sc">global</span>.VMLRadialGradientURL<span class="pl-k">+</span><span class="pl-s1"><span class="pl-pds">&#39;</span>&quot; size=&quot;<span class="pl-pds">&#39;</span></span><span class="pl-k">+</span>r<span class="pl-k">+</span><span class="pl-s1"><span class="pl-pds">&quot;</span>,<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>v<span class="pl-k">+</span><span class="pl-s1"><span class="pl-pds">&#39;</span>&quot; origin=&quot;0.5,0.5&quot; position=&quot;<span class="pl-pds">&#39;</span></span><span class="pl-k">+</span></td>
      </tr>
      <tr>
        <td id="L91" class="blob-num js-line-number" data-line-number="91"></td>
        <td id="LC91" class="blob-code js-file-line">x<span class="pl-k">+</span><span class="pl-s1"><span class="pl-pds">&quot;</span>,<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>z<span class="pl-k">+</span><span class="pl-s1"><span class="pl-pds">&#39;</span>&quot; color2=&quot;<span class="pl-pds">&#39;</span></span><span class="pl-k">+</span>J<span class="pl-k">+</span><span class="pl-s1"><span class="pl-pds">&#39;</span>&quot; <span class="pl-pds">&#39;</span></span>;u()};d.added<span class="pl-k">?</span>j()<span class="pl-k">:</span>d.onAdd<span class="pl-k">=</span>j;j<span class="pl-k">=</span>D}<span class="pl-k">else</span> j<span class="pl-k">=</span>k}<span class="pl-k">else</span> <span class="pl-k">if</span>(g.<span class="pl-s3">test</span>(a)<span class="pl-k">&amp;&amp;</span>b.<span class="pl-sc">tagName</span><span class="pl-k">!==</span><span class="pl-s1"><span class="pl-pds">&quot;</span>IMG<span class="pl-pds">&quot;</span></span>)f<span class="pl-k">=</span>ya(a),h<span class="pl-k">=</span>[<span class="pl-s1"><span class="pl-pds">&quot;</span>&lt;<span class="pl-pds">&quot;</span></span>,c,<span class="pl-s1"><span class="pl-pds">&#39;</span> opacity=&quot;<span class="pl-pds">&#39;</span></span>,f.get(<span class="pl-s1"><span class="pl-pds">&quot;</span>a<span class="pl-pds">&quot;</span></span>),<span class="pl-s1"><span class="pl-pds">&#39;</span>&quot;/&gt;<span class="pl-pds">&#39;</span></span>],$(<span class="pl-v">this</span>.prepVML(h),<span class="pl-c1">null</span>,<span class="pl-c1">null</span>,b),j<span class="pl-k">=</span>f.get(<span class="pl-s1"><span class="pl-pds">&quot;</span>rgb<span class="pl-pds">&quot;</span></span>);<span class="pl-k">else</span>{j<span class="pl-k">=</span>b.<span class="pl-s3">getElementsByTagName</span>(c);<span class="pl-k">if</span>(j.<span class="pl-sc">length</span>)j[<span class="pl-c1">0</span>].opacity<span class="pl-k">=</span><span class="pl-c1">1</span>,j[<span class="pl-c1">0</span>].<span class="pl-sc">type</span><span class="pl-k">=</span><span class="pl-s1"><span class="pl-pds">&quot;</span>solid<span class="pl-pds">&quot;</span></span>;j<span class="pl-k">=</span>a}<span class="pl-k">return</span> j},<span class="pl-en">prepVML</span>:<span class="pl-st">function</span>(<span class="pl-vpf">a</span>){<span class="pl-s">var</span> b<span class="pl-k">=</span><span class="pl-v">this</span>.isIE8,a<span class="pl-k">=</span>a.<span class="pl-s3">join</span>(<span class="pl-s1"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>);b<span class="pl-k">?</span>(a<span class="pl-k">=</span>a.<span class="pl-s3">replace</span>(<span class="pl-s1"><span class="pl-pds">&quot;</span>/&gt;<span class="pl-pds">&quot;</span></span>,<span class="pl-s1"><span class="pl-pds">&#39;</span> xmlns=&quot;urn:schemas-microsoft-com:vml&quot; /&gt;<span class="pl-pds">&#39;</span></span>),a<span class="pl-k">=</span>a.<span class="pl-s3">indexOf</span>(<span class="pl-s1"><span class="pl-pds">&#39;</span>style=&quot;<span class="pl-pds">&#39;</span></span>)<span class="pl-k">===-</span><span class="pl-c1">1</span><span class="pl-k">?</span>a.<span class="pl-s3">replace</span>(<span class="pl-s1"><span class="pl-pds">&quot;</span>/&gt;<span class="pl-pds">&quot;</span></span>,<span class="pl-s1"><span class="pl-pds">&#39;</span> style=&quot;display:inline-block;behavior:url(#default#VML);&quot; /&gt;<span class="pl-pds">&#39;</span></span>)<span class="pl-k">:</span></td>
      </tr>
      <tr>
        <td id="L92" class="blob-num js-line-number" data-line-number="92"></td>
        <td id="LC92" class="blob-code js-file-line">a.<span class="pl-s3">replace</span>(<span class="pl-s1"><span class="pl-pds">&#39;</span>style=&quot;<span class="pl-pds">&#39;</span></span>,<span class="pl-s1"><span class="pl-pds">&#39;</span>style=&quot;display:inline-block;behavior:url(#default#VML);<span class="pl-pds">&#39;</span></span>))<span class="pl-k">:</span>a<span class="pl-k">=</span>a.<span class="pl-s3">replace</span>(<span class="pl-s1"><span class="pl-pds">&quot;</span>&lt;<span class="pl-pds">&quot;</span></span>,<span class="pl-s1"><span class="pl-pds">&quot;</span>&lt;hcv:<span class="pl-pds">&quot;</span></span>);<span class="pl-k">return</span> a},text<span class="pl-k">:</span>ta.<span class="pl-sc">prototype</span>.html,<span class="pl-en">path</span>:<span class="pl-st">function</span>(<span class="pl-vpf">a</span>){<span class="pl-s">var</span> b<span class="pl-k">=</span>{coordsize<span class="pl-k">:</span><span class="pl-s1"><span class="pl-pds">&quot;</span>10 10<span class="pl-pds">&quot;</span></span>};Ha(a)<span class="pl-k">?</span>b.d<span class="pl-k">=</span>a<span class="pl-k">:</span>da(a)<span class="pl-k">&amp;&amp;</span>r(b,a);<span class="pl-k">return</span> <span class="pl-v">this</span>.<span class="pl-s3">createElement</span>(<span class="pl-s1"><span class="pl-pds">&quot;</span>shape<span class="pl-pds">&quot;</span></span>).attr(b)},<span class="pl-en">circle</span>:<span class="pl-st">function</span>(<span class="pl-vpf">a</span>,<span class="pl-vpf">b</span>,<span class="pl-vpf">c</span>){<span class="pl-s">var</span> d<span class="pl-k">=</span><span class="pl-v">this</span>.symbol(<span class="pl-s1"><span class="pl-pds">&quot;</span>circle<span class="pl-pds">&quot;</span></span>);<span class="pl-k">if</span>(da(a))c<span class="pl-k">=</span>a.r,b<span class="pl-k">=</span>a.<span class="pl-sc">y</span>,a<span class="pl-k">=</span>a.<span class="pl-sc">x</span>;d.isCircle<span class="pl-k">=!</span><span class="pl-c1">0</span>;d.r<span class="pl-k">=</span>c;<span class="pl-k">return</span> d.attr({x<span class="pl-k">:</span>a,y<span class="pl-k">:</span>b})},<span class="pl-en">g</span>:<span class="pl-st">function</span>(<span class="pl-vpf">a</span>){<span class="pl-s">var</span> b;a<span class="pl-k">&amp;&amp;</span>(b<span class="pl-k">=</span>{className<span class="pl-k">:</span><span class="pl-s1"><span class="pl-pds">&quot;</span>highcharts-<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>a,<span class="pl-s1"><span class="pl-pds">&quot;</span>class<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s1"><span class="pl-pds">&quot;</span>highcharts-<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>a});<span class="pl-k">return</span> <span class="pl-v">this</span>.<span class="pl-s3">createElement</span>(Ka).attr(b)},<span class="pl-en">image</span>:<span class="pl-st">function</span>(<span class="pl-vpf">a</span>,</td>
      </tr>
      <tr>
        <td id="L93" class="blob-num js-line-number" data-line-number="93"></td>
        <td id="LC93" class="blob-code js-file-line"><span class="pl-vpf">b</span>,<span class="pl-vpf">c</span>,<span class="pl-vpf">d</span>,<span class="pl-vpf">e</span>){<span class="pl-s">var</span> f<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-s3">createElement</span>(<span class="pl-s1"><span class="pl-pds">&quot;</span>img<span class="pl-pds">&quot;</span></span>).attr({src<span class="pl-k">:</span>a});arguments.<span class="pl-sc">length</span><span class="pl-k">&gt;</span><span class="pl-c1">1</span><span class="pl-k">&amp;&amp;</span>f.attr({x<span class="pl-k">:</span>b,y<span class="pl-k">:</span>c,width<span class="pl-k">:</span>d,height<span class="pl-k">:</span>e});<span class="pl-k">return</span> f},<span class="pl-en">createElement</span>:<span class="pl-st">function</span>(<span class="pl-vpf">a</span>){<span class="pl-k">return</span> a<span class="pl-k">===</span><span class="pl-s1"><span class="pl-pds">&quot;</span>rect<span class="pl-pds">&quot;</span></span><span class="pl-k">?</span><span class="pl-v">this</span>.symbol(a)<span class="pl-k">:</span>ta.<span class="pl-sc">prototype</span>.createElement.<span class="pl-s3">call</span>(<span class="pl-v">this</span>,a)},<span class="pl-en">invertChild</span>:<span class="pl-st">function</span>(<span class="pl-vpf">a</span>,<span class="pl-vpf">b</span>){<span class="pl-s">var</span> c<span class="pl-k">=</span><span class="pl-v">this</span>,d<span class="pl-k">=</span>b.<span class="pl-sc">style</span>,e<span class="pl-k">=</span>a.<span class="pl-sc">tagName</span><span class="pl-k">===</span><span class="pl-s1"><span class="pl-pds">&quot;</span>IMG<span class="pl-pds">&quot;</span></span><span class="pl-k">&amp;&amp;</span>a.<span class="pl-sc">style</span>;B(a,{flip<span class="pl-k">:</span><span class="pl-s1"><span class="pl-pds">&quot;</span>x<span class="pl-pds">&quot;</span></span>,left<span class="pl-k">:</span>y(d.<span class="pl-sc">width</span>)<span class="pl-k">-</span>(e<span class="pl-k">?</span>y(e.<span class="pl-sc">top</span>)<span class="pl-k">:</span><span class="pl-c1">1</span>),top<span class="pl-k">:</span>y(d.<span class="pl-sc">height</span>)<span class="pl-k">-</span>(e<span class="pl-k">?</span>y(e.<span class="pl-sc">left</span>)<span class="pl-k">:</span><span class="pl-c1">1</span>),rotation<span class="pl-k">:-</span><span class="pl-c1">90</span>});q(a.<span class="pl-sc">childNodes</span>,<span class="pl-st">function</span>(<span class="pl-vpf">b</span>){c.invertChild(b,a)})},symbols<span class="pl-k">:</span>{<span class="pl-en">arc</span>:<span class="pl-st">function</span>(<span class="pl-vpf">a</span>,<span class="pl-vpf">b</span>,<span class="pl-vpf">c</span>,<span class="pl-vpf">d</span>,<span class="pl-vpf">e</span>){<span class="pl-s">var</span> f<span class="pl-k">=</span>e.<span class="pl-sc">start</span>,g<span class="pl-k">=</span>e.end,h<span class="pl-k">=</span>e.r<span class="pl-k">||</span>c<span class="pl-k">||</span></td>
      </tr>
      <tr>
        <td id="L94" class="blob-num js-line-number" data-line-number="94"></td>
        <td id="LC94" class="blob-code js-file-line">d,c<span class="pl-k">=</span>e.innerR,d<span class="pl-k">=</span>aa(f),i<span class="pl-k">=</span>fa(f),j<span class="pl-k">=</span>aa(g),k<span class="pl-k">=</span>fa(g);<span class="pl-k">if</span>(g<span class="pl-k">-</span>f<span class="pl-k">===</span><span class="pl-c1">0</span>)<span class="pl-k">return</span>[<span class="pl-s1"><span class="pl-pds">&quot;</span>x<span class="pl-pds">&quot;</span></span>];f<span class="pl-k">=</span>[<span class="pl-s1"><span class="pl-pds">&quot;</span>wa<span class="pl-pds">&quot;</span></span>,a<span class="pl-k">-</span>h,b<span class="pl-k">-</span>h,a<span class="pl-k">+</span>h,b<span class="pl-k">+</span>h,a<span class="pl-k">+</span>h<span class="pl-k">*</span>d,b<span class="pl-k">+</span>h<span class="pl-k">*</span>i,a<span class="pl-k">+</span>h<span class="pl-k">*</span>j,b<span class="pl-k">+</span>h<span class="pl-k">*</span>k];e.open<span class="pl-k">&amp;&amp;!</span>c<span class="pl-k">&amp;&amp;</span>f.<span class="pl-s3">push</span>(<span class="pl-s1"><span class="pl-pds">&quot;</span>e<span class="pl-pds">&quot;</span></span>,<span class="pl-s1"><span class="pl-pds">&quot;</span>M<span class="pl-pds">&quot;</span></span>,a,b);f.<span class="pl-s3">push</span>(<span class="pl-s1"><span class="pl-pds">&quot;</span>at<span class="pl-pds">&quot;</span></span>,a<span class="pl-k">-</span>c,b<span class="pl-k">-</span>c,a<span class="pl-k">+</span>c,b<span class="pl-k">+</span>c,a<span class="pl-k">+</span>c<span class="pl-k">*</span>j,b<span class="pl-k">+</span>c<span class="pl-k">*</span>k,a<span class="pl-k">+</span>c<span class="pl-k">*</span>d,b<span class="pl-k">+</span>c<span class="pl-k">*</span>i,<span class="pl-s1"><span class="pl-pds">&quot;</span>x<span class="pl-pds">&quot;</span></span>,<span class="pl-s1"><span class="pl-pds">&quot;</span>e<span class="pl-pds">&quot;</span></span>);f.isArc<span class="pl-k">=!</span><span class="pl-c1">0</span>;<span class="pl-k">return</span> f},<span class="pl-en">circle</span>:<span class="pl-st">function</span>(<span class="pl-vpf">a</span>,<span class="pl-vpf">b</span>,<span class="pl-vpf">c</span>,<span class="pl-vpf">d</span>,<span class="pl-vpf">e</span>){e<span class="pl-k">&amp;&amp;</span>(c<span class="pl-k">=</span>d<span class="pl-k">=</span><span class="pl-c1">2</span><span class="pl-k">*</span>e.r);e<span class="pl-k">&amp;&amp;</span>e.isCircle<span class="pl-k">&amp;&amp;</span>(a<span class="pl-k">-=</span>c/<span class="pl-c1">2</span>,b<span class="pl-k">-=</span>d/<span class="pl-c1">2</span>);<span class="pl-k">return</span>[<span class="pl-s1"><span class="pl-pds">&quot;</span>wa<span class="pl-pds">&quot;</span></span>,a,b,a<span class="pl-k">+</span>c,b<span class="pl-k">+</span>d,a<span class="pl-k">+</span>c,b<span class="pl-k">+</span>d/<span class="pl-c1">2</span>,a<span class="pl-k">+</span>c,b<span class="pl-k">+</span>d/<span class="pl-c1">2</span>,<span class="pl-s1"><span class="pl-pds">&quot;</span>e<span class="pl-pds">&quot;</span></span>]},<span class="pl-en">rect</span>:<span class="pl-st">function</span>(<span class="pl-vpf">a</span>,<span class="pl-vpf">b</span>,<span class="pl-vpf">c</span>,<span class="pl-vpf">d</span>,<span class="pl-vpf">e</span>){<span class="pl-k">return</span> ta.<span class="pl-sc">prototype</span>.symbols[<span class="pl-k">!</span>s(e)<span class="pl-k">||!</span>e.r<span class="pl-k">?</span><span class="pl-s1"><span class="pl-pds">&quot;</span>square<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s1"><span class="pl-pds">&quot;</span>callout<span class="pl-pds">&quot;</span></span>].<span class="pl-s3">call</span>(<span class="pl-c1">0</span>,a,b,c,d,e)}}};K.VMLRenderer<span class="pl-k">=</span><span class="pl-en">Z</span><span class="pl-k">=</span><span class="pl-st">function</span>(){<span class="pl-v">this</span>.init.<span class="pl-s3">apply</span>(<span class="pl-v">this</span>,</td>
      </tr>
      <tr>
        <td id="L95" class="blob-num js-line-number" data-line-number="95"></td>
        <td id="LC95" class="blob-code js-file-line">arguments)};<span class="pl-s3">Z</span>.<span class="pl-sc">prototype</span><span class="pl-k">=</span>w(ta.<span class="pl-sc">prototype</span>,ia);Za<span class="pl-k">=</span>Z}<span class="pl-s3">ta</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">measureSpanWidth</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>,<span class="pl-vpf">b</span>){<span class="pl-s">var</span> c<span class="pl-k">=</span>x.<span class="pl-s3">createElement</span>(<span class="pl-s1"><span class="pl-pds">&quot;</span>span<span class="pl-pds">&quot;</span></span>),d;d<span class="pl-k">=</span>x.<span class="pl-s3">createTextNode</span>(a);c.<span class="pl-s3">appendChild</span>(d);B(c,b);<span class="pl-v">this</span>.box.<span class="pl-s3">appendChild</span>(c);d<span class="pl-k">=</span>c.offsetWidth;Qa(c);<span class="pl-k">return</span> d};<span class="pl-s">var</span> Mb;<span class="pl-k">if</span>(ga)K.CanVGRenderer<span class="pl-k">=</span><span class="pl-en">Z</span><span class="pl-k">=</span><span class="pl-st">function</span>(){xa<span class="pl-k">=</span><span class="pl-s1"><span class="pl-pds">&quot;</span>http://www.w3.org/1999/xhtml<span class="pl-pds">&quot;</span></span>},<span class="pl-s3">Z</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">symbols</span><span class="pl-k">=</span>{},<span class="pl-en">Mb</span><span class="pl-k">=</span><span class="pl-st">function</span>(){<span class="pl-st">function</span> <span class="pl-en">a</span>(){<span class="pl-s">var</span> a<span class="pl-k">=</span>b.<span class="pl-sc">length</span>,d;<span class="pl-k">for</span>(d<span class="pl-k">=</span><span class="pl-c1">0</span>;d<span class="pl-k">&lt;</span>a;d<span class="pl-k">++</span>)b[d]();b<span class="pl-k">=</span>[]}<span class="pl-s">var</span> b<span class="pl-k">=</span>[];<span class="pl-k">return</span>{<span class="pl-en">push</span>:<span class="pl-st">function</span>(<span class="pl-vpf">c</span>,<span class="pl-vpf">d</span>){b.<span class="pl-sc">length</span><span class="pl-k">===</span><span class="pl-c1">0</span><span class="pl-k">&amp;&amp;</span>Rb(d,a);b.<span class="pl-s3">push</span>(c)}}}(),Za<span class="pl-k">=</span>Z;<span class="pl-s3">Ta</span>.<span class="pl-sc">prototype</span><span class="pl-k">=</span>{<span class="pl-en">addLabel</span>:<span class="pl-st">function</span>(){<span class="pl-s">var</span> a<span class="pl-k">=</span></td>
      </tr>
      <tr>
        <td id="L96" class="blob-num js-line-number" data-line-number="96"></td>
        <td id="LC96" class="blob-code js-file-line"><span class="pl-v">this</span>.<span class="pl-sc">axis</span>,b<span class="pl-k">=</span>a.<span class="pl-sc">options</span>,c<span class="pl-k">=</span>a.chart,d<span class="pl-k">=</span>a.horiz,e<span class="pl-k">=</span>a.categories,f<span class="pl-k">=</span>a.names,g<span class="pl-k">=</span><span class="pl-v">this</span>.pos,h<span class="pl-k">=</span>b.labels,i<span class="pl-k">=</span>h.rotation,j<span class="pl-k">=</span>a.tickPositions,d<span class="pl-k">=</span>d<span class="pl-k">&amp;&amp;</span>e<span class="pl-k">&amp;&amp;!</span>h.step<span class="pl-k">&amp;&amp;!</span>h.staggerLines<span class="pl-k">&amp;&amp;!</span>h.rotation<span class="pl-k">&amp;&amp;</span>c.plotWidth/j.<span class="pl-sc">length</span><span class="pl-k">||!</span>d<span class="pl-k">&amp;&amp;</span>(c.margin[<span class="pl-c1">3</span>]<span class="pl-k">||</span>c.chartWidth<span class="pl-k">*</span><span class="pl-c1">0.33</span>),k<span class="pl-k">=</span>g<span class="pl-k">===</span>j[<span class="pl-c1">0</span>],l<span class="pl-k">=</span>g<span class="pl-k">===</span>j[j.<span class="pl-sc">length</span><span class="pl-k">-</span><span class="pl-c1">1</span>],n,f<span class="pl-k">=</span>e<span class="pl-k">?</span>p(e[g],f[g],g)<span class="pl-k">:</span>g,e<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-sc">label</span>,m<span class="pl-k">=</span>j<span class="pl-s3">.info</span>;a.isDatetimeAxis<span class="pl-k">&amp;&amp;</span>m<span class="pl-k">&amp;&amp;</span>(n<span class="pl-k">=</span>b.dateTimeLabelFormats[m.higherRanks[g]<span class="pl-k">||</span>m.unitName]);<span class="pl-v">this</span>.isFirst<span class="pl-k">=</span>k;<span class="pl-v">this</span>.isLast<span class="pl-k">=</span>l;b<span class="pl-k">=</span>a.labelFormatter.<span class="pl-s3">call</span>({axis<span class="pl-k">:</span>a,chart<span class="pl-k">:</span>c,isFirst<span class="pl-k">:</span>k,isLast<span class="pl-k">:</span>l,dateTimeLabelFormat<span class="pl-k">:</span>n,value<span class="pl-k">:</span>a.isLog<span class="pl-k">?</span></td>
      </tr>
      <tr>
        <td id="L97" class="blob-num js-line-number" data-line-number="97"></td>
        <td id="LC97" class="blob-code js-file-line">ea(ka(f))<span class="pl-k">:</span>f});g<span class="pl-k">=</span>d<span class="pl-k">&amp;&amp;</span>{width<span class="pl-k">:</span>t(<span class="pl-c1">1</span>,v(d<span class="pl-k">-</span><span class="pl-c1">2</span><span class="pl-k">*</span>(h.padding<span class="pl-k">||</span><span class="pl-c1">10</span>)))<span class="pl-k">+</span><span class="pl-s1"><span class="pl-pds">&quot;</span>px<span class="pl-pds">&quot;</span></span>};<span class="pl-k">if</span>(s(e))e<span class="pl-k">&amp;&amp;</span>e.attr({text<span class="pl-k">:</span>b}).css(g);<span class="pl-k">else</span>{n<span class="pl-k">=</span>{align<span class="pl-k">:</span>a.labelAlign};<span class="pl-k">if</span>(ja(i))n.rotation<span class="pl-k">=</span>i;<span class="pl-k">if</span>(d<span class="pl-k">&amp;&amp;</span>h.ellipsis)g.HcHeight<span class="pl-k">=</span>a.len/j.<span class="pl-sc">length</span>;<span class="pl-v">this</span>.<span class="pl-sc">label</span><span class="pl-k">=</span>e<span class="pl-k">=</span>s(b)<span class="pl-k">&amp;&amp;</span>h.enabled<span class="pl-k">?</span>c.renderer.<span class="pl-sc">text</span>(b,<span class="pl-c1">0</span>,<span class="pl-c1">0</span>,h.useHTML).attr(n).css(r(g,h.<span class="pl-sc">style</span>)).<span class="pl-s3">add</span>(a.labelGroup)<span class="pl-k">:</span><span class="pl-c1">null</span>;a.tickBaseline<span class="pl-k">=</span>c.renderer.fontMetrics(h.<span class="pl-sc">style</span>.<span class="pl-sc">fontSize</span>,e).b;i<span class="pl-k">&amp;&amp;</span>a.side<span class="pl-k">===</span><span class="pl-c1">2</span><span class="pl-k">&amp;&amp;</span>(a.tickBaseline<span class="pl-k">*=</span>aa(i<span class="pl-k">*</span>Ea))}<span class="pl-v">this</span>.yOffset<span class="pl-k">=</span>e<span class="pl-k">?</span>p(h.<span class="pl-sc">y</span>,a.tickBaseline<span class="pl-k">+</span>(a.side<span class="pl-k">===</span><span class="pl-c1">2</span><span class="pl-k">?</span><span class="pl-c1">8</span><span class="pl-k">:-</span>(e.getBBox().<span class="pl-sc">height</span>/<span class="pl-c1">2</span>)))<span class="pl-k">:</span><span class="pl-c1">0</span>},<span class="pl-en">getLabelSize</span>:<span class="pl-st">function</span>(){<span class="pl-s">var</span> a<span class="pl-k">=</span></td>
      </tr>
      <tr>
        <td id="L98" class="blob-num js-line-number" data-line-number="98"></td>
        <td id="LC98" class="blob-code js-file-line"><span class="pl-v">this</span>.<span class="pl-sc">label</span>,b<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-sc">axis</span>;<span class="pl-k">return</span> a<span class="pl-k">?</span>a.getBBox()[b.horiz<span class="pl-k">?</span><span class="pl-s1"><span class="pl-pds">&quot;</span>height<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s1"><span class="pl-pds">&quot;</span>width<span class="pl-pds">&quot;</span></span>]<span class="pl-k">:</span><span class="pl-c1">0</span>},<span class="pl-en">getLabelSides</span>:<span class="pl-st">function</span>(){<span class="pl-s">var</span> a<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-sc">label</span>.getBBox(),b<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-sc">axis</span>,c<span class="pl-k">=</span>b.horiz,d<span class="pl-k">=</span>b.<span class="pl-sc">options</span>.labels,a<span class="pl-k">=</span>c<span class="pl-k">?</span>a.<span class="pl-sc">width</span><span class="pl-k">:</span>a.<span class="pl-sc">height</span>,b<span class="pl-k">=</span>c<span class="pl-k">?</span>d.<span class="pl-sc">x</span><span class="pl-k">-</span>a<span class="pl-k">*</span>{left<span class="pl-k">:</span><span class="pl-c1">0</span>,center<span class="pl-k">:</span><span class="pl-c1">0.5</span>,right<span class="pl-k">:</span><span class="pl-c1">1</span>}[b.labelAlign]<span class="pl-k">:</span><span class="pl-c1">0</span>;<span class="pl-k">return</span>[b,c<span class="pl-k">?</span>a<span class="pl-k">+</span>b<span class="pl-k">:</span>a]},<span class="pl-en">handleOverflow</span>:<span class="pl-st">function</span>(<span class="pl-vpf">a</span>,<span class="pl-vpf">b</span>){<span class="pl-s">var</span> c<span class="pl-k">=!</span><span class="pl-c1">0</span>,d<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-sc">axis</span>,e<span class="pl-k">=</span><span class="pl-v">this</span>.isFirst,f<span class="pl-k">=</span><span class="pl-v">this</span>.isLast,g<span class="pl-k">=</span>d.horiz<span class="pl-k">?</span>b.<span class="pl-sc">x</span><span class="pl-k">:</span>b.<span class="pl-sc">y</span>,h<span class="pl-k">=</span>d.reversed,i<span class="pl-k">=</span>d.tickPositions,j<span class="pl-k">=</span><span class="pl-v">this</span>.getLabelSides(),k<span class="pl-k">=</span>j[<span class="pl-c1">0</span>],j<span class="pl-k">=</span>j[<span class="pl-c1">1</span>],l,n,m,o<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-sc">label</span>.line;l<span class="pl-k">=</span>o<span class="pl-k">||</span><span class="pl-c1">0</span>;n<span class="pl-k">=</span>d.labelEdge;m<span class="pl-k">=</span>d.justifyLabels<span class="pl-k">&amp;&amp;</span>(e<span class="pl-k">||</span>f);n[l]<span class="pl-k">===</span></td>
      </tr>
      <tr>
        <td id="L99" class="blob-num js-line-number" data-line-number="99"></td>
        <td id="LC99" class="blob-code js-file-line">u<span class="pl-k">||</span>g<span class="pl-k">+</span>k<span class="pl-k">&gt;</span>n[l]<span class="pl-k">?</span>n[l]<span class="pl-k">=</span>g<span class="pl-k">+</span>j<span class="pl-k">:</span>m<span class="pl-k">||</span>(c<span class="pl-k">=!</span><span class="pl-c1">1</span>);<span class="pl-k">if</span>(m){l<span class="pl-k">=</span>(n<span class="pl-k">=</span>d.justifyToPlot)<span class="pl-k">?</span>d.pos<span class="pl-k">:</span><span class="pl-c1">0</span>;n<span class="pl-k">=</span>n<span class="pl-k">?</span>l<span class="pl-k">+</span>d.len<span class="pl-k">:</span>d.chart.chartWidth;<span class="pl-k">do</span> a<span class="pl-k">+=</span>e<span class="pl-k">?</span><span class="pl-c1">1</span><span class="pl-k">:-</span><span class="pl-c1">1</span>,m<span class="pl-k">=</span>d.ticks[i[a]];<span class="pl-k">while</span>(i[a]<span class="pl-k">&amp;&amp;</span>(<span class="pl-k">!</span>m<span class="pl-k">||!</span>m.<span class="pl-sc">label</span><span class="pl-k">||</span>m.<span class="pl-sc">label</span>.line<span class="pl-k">!==</span>o));d<span class="pl-k">=</span>m<span class="pl-k">&amp;&amp;</span>m.<span class="pl-sc">label</span>.xy<span class="pl-k">&amp;&amp;</span>m.<span class="pl-sc">label</span>.xy.<span class="pl-sc">x</span><span class="pl-k">+</span>m.getLabelSides()[e<span class="pl-k">?</span><span class="pl-c1">0</span><span class="pl-k">:</span><span class="pl-c1">1</span>];e<span class="pl-k">&amp;&amp;!</span>h<span class="pl-k">||</span>f<span class="pl-k">&amp;&amp;</span>h<span class="pl-k">?</span>g<span class="pl-k">+</span>k<span class="pl-k">&lt;</span>l<span class="pl-k">&amp;&amp;</span>(g<span class="pl-k">=</span>l<span class="pl-k">-</span>k,m<span class="pl-k">&amp;&amp;</span>g<span class="pl-k">+</span>j<span class="pl-k">&gt;</span>d<span class="pl-k">&amp;&amp;</span>(c<span class="pl-k">=!</span><span class="pl-c1">1</span>))<span class="pl-k">:</span>g<span class="pl-k">+</span>j<span class="pl-k">&gt;</span>n<span class="pl-k">&amp;&amp;</span>(g<span class="pl-k">=</span>n<span class="pl-k">-</span>j,m<span class="pl-k">&amp;&amp;</span>g<span class="pl-k">+</span>k<span class="pl-k">&lt;</span>d<span class="pl-k">&amp;&amp;</span>(c<span class="pl-k">=!</span><span class="pl-c1">1</span>));b.<span class="pl-sc">x</span><span class="pl-k">=</span>g}<span class="pl-k">return</span> c},<span class="pl-en">getPosition</span>:<span class="pl-st">function</span>(<span class="pl-vpf">a</span>,<span class="pl-vpf">b</span>,<span class="pl-vpf">c</span>,<span class="pl-vpf">d</span>){<span class="pl-s">var</span> e<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-sc">axis</span>,f<span class="pl-k">=</span>e.chart,g<span class="pl-k">=</span>d<span class="pl-k">&amp;&amp;</span>f.oldChartHeight<span class="pl-k">||</span>f.chartHeight;<span class="pl-k">return</span>{x<span class="pl-k">:</span>a<span class="pl-k">?</span>e.translate(b<span class="pl-k">+</span>c,<span class="pl-c1">null</span>,<span class="pl-c1">null</span>,d)<span class="pl-k">+</span>e.transB<span class="pl-k">:</span>e.<span class="pl-sc">left</span><span class="pl-k">+</span>e.offset<span class="pl-k">+</span>(e.opposite<span class="pl-k">?</span>(d<span class="pl-k">&amp;&amp;</span>f.oldChartWidth<span class="pl-k">||</span></td>
      </tr>
      <tr>
        <td id="L100" class="blob-num js-line-number" data-line-number="100"></td>
        <td id="LC100" class="blob-code js-file-line">f.chartWidth)<span class="pl-k">-</span>e.<span class="pl-sc">right</span><span class="pl-k">-</span>e.<span class="pl-sc">left</span><span class="pl-k">:</span><span class="pl-c1">0</span>),y<span class="pl-k">:</span>a<span class="pl-k">?</span>g<span class="pl-k">-</span>e.<span class="pl-sc">bottom</span><span class="pl-k">+</span>e.offset<span class="pl-k">-</span>(e.opposite<span class="pl-k">?</span>e.<span class="pl-sc">height</span><span class="pl-k">:</span><span class="pl-c1">0</span>)<span class="pl-k">:</span>g<span class="pl-k">-</span>e.translate(b<span class="pl-k">+</span>c,<span class="pl-c1">null</span>,<span class="pl-c1">null</span>,d)<span class="pl-k">-</span>e.transB}},<span class="pl-en">getLabelPosition</span>:<span class="pl-st">function</span>(<span class="pl-vpf">a</span>,<span class="pl-vpf">b</span>,<span class="pl-vpf">c</span>,<span class="pl-vpf">d</span>,<span class="pl-vpf">e</span>,<span class="pl-vpf">f</span>,<span class="pl-vpf">g</span>,<span class="pl-vpf">h</span>){<span class="pl-s">var</span> i<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-sc">axis</span>,j<span class="pl-k">=</span>i.transA,k<span class="pl-k">=</span>i.reversed,l<span class="pl-k">=</span>i.staggerLines,a<span class="pl-k">=</span>a<span class="pl-k">+</span>e.<span class="pl-sc">x</span><span class="pl-k">-</span>(f<span class="pl-k">&amp;&amp;</span>d<span class="pl-k">?</span>f<span class="pl-k">*</span>j<span class="pl-k">*</span>(k<span class="pl-k">?-</span><span class="pl-c1">1</span><span class="pl-k">:</span><span class="pl-c1">1</span>)<span class="pl-k">:</span><span class="pl-c1">0</span>),b<span class="pl-k">=</span>b<span class="pl-k">+</span><span class="pl-v">this</span>.yOffset<span class="pl-k">-</span>(f<span class="pl-k">&amp;&amp;!</span>d<span class="pl-k">?</span>f<span class="pl-k">*</span>j<span class="pl-k">*</span>(k<span class="pl-k">?</span><span class="pl-c1">1</span><span class="pl-k">:-</span><span class="pl-c1">1</span>)<span class="pl-k">:</span><span class="pl-c1">0</span>);<span class="pl-k">if</span>(l)c.line<span class="pl-k">=</span>g/(h<span class="pl-k">||</span><span class="pl-c1">1</span>)<span class="pl-k">%</span>l,b<span class="pl-k">+=</span>c.line<span class="pl-k">*</span>(i.labelOffset/l);<span class="pl-k">return</span>{x<span class="pl-k">:</span>a,y<span class="pl-k">:</span>b}},<span class="pl-en">getMarkPath</span>:<span class="pl-st">function</span>(<span class="pl-vpf">a</span>,<span class="pl-vpf">b</span>,<span class="pl-vpf">c</span>,<span class="pl-vpf">d</span>,<span class="pl-vpf">e</span>,<span class="pl-vpf">f</span>){<span class="pl-k">return</span> f.crispLine([<span class="pl-s1"><span class="pl-pds">&quot;</span>M<span class="pl-pds">&quot;</span></span>,a,b,<span class="pl-s1"><span class="pl-pds">&quot;</span>L<span class="pl-pds">&quot;</span></span>,a<span class="pl-k">+</span>(e<span class="pl-k">?</span><span class="pl-c1">0</span><span class="pl-k">:-</span>c),b<span class="pl-k">+</span>(e<span class="pl-k">?</span>c<span class="pl-k">:</span><span class="pl-c1">0</span>)],d)},<span class="pl-en">render</span>:<span class="pl-st">function</span>(<span class="pl-vpf">a</span>,<span class="pl-vpf">b</span>,<span class="pl-vpf">c</span>){<span class="pl-s">var</span> d<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-sc">axis</span>,e<span class="pl-k">=</span>d.<span class="pl-sc">options</span>,</td>
      </tr>
      <tr>
        <td id="L101" class="blob-num js-line-number" data-line-number="101"></td>
        <td id="LC101" class="blob-code js-file-line">f<span class="pl-k">=</span>d.chart.renderer,g<span class="pl-k">=</span>d.horiz,h<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-sc">type</span>,i<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-sc">label</span>,j<span class="pl-k">=</span><span class="pl-v">this</span>.pos,k<span class="pl-k">=</span>e.labels,l<span class="pl-k">=</span><span class="pl-v">this</span>.gridLine,n<span class="pl-k">=</span>h<span class="pl-k">?</span>h<span class="pl-k">+</span><span class="pl-s1"><span class="pl-pds">&quot;</span>Grid<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s1"><span class="pl-pds">&quot;</span>grid<span class="pl-pds">&quot;</span></span>,m<span class="pl-k">=</span>h<span class="pl-k">?</span>h<span class="pl-k">+</span><span class="pl-s1"><span class="pl-pds">&quot;</span>Tick<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s1"><span class="pl-pds">&quot;</span>tick<span class="pl-pds">&quot;</span></span>,o<span class="pl-k">=</span>e[n<span class="pl-k">+</span><span class="pl-s1"><span class="pl-pds">&quot;</span>LineWidth<span class="pl-pds">&quot;</span></span>],q<span class="pl-k">=</span>e[n<span class="pl-k">+</span><span class="pl-s1"><span class="pl-pds">&quot;</span>LineColor<span class="pl-pds">&quot;</span></span>],D<span class="pl-k">=</span>e[n<span class="pl-k">+</span><span class="pl-s1"><span class="pl-pds">&quot;</span>LineDashStyle<span class="pl-pds">&quot;</span></span>],J<span class="pl-k">=</span>e[m<span class="pl-k">+</span><span class="pl-s1"><span class="pl-pds">&quot;</span>Length<span class="pl-pds">&quot;</span></span>],n<span class="pl-k">=</span>e[m<span class="pl-k">+</span><span class="pl-s1"><span class="pl-pds">&quot;</span>Width<span class="pl-pds">&quot;</span></span>]<span class="pl-k">||</span><span class="pl-c1">0</span>,C<span class="pl-k">=</span>e[m<span class="pl-k">+</span><span class="pl-s1"><span class="pl-pds">&quot;</span>Color<span class="pl-pds">&quot;</span></span>],t<span class="pl-k">=</span>e[m<span class="pl-k">+</span><span class="pl-s1"><span class="pl-pds">&quot;</span>Position<span class="pl-pds">&quot;</span></span>],m<span class="pl-k">=</span><span class="pl-v">this</span>.mark,s<span class="pl-k">=</span>k.step,r<span class="pl-k">=!</span><span class="pl-c1">0</span>,v<span class="pl-k">=</span>d.tickmarkOffset,w<span class="pl-k">=</span><span class="pl-v">this</span>.getPosition(g,j,v,b),x<span class="pl-k">=</span>w.<span class="pl-sc">x</span>,w<span class="pl-k">=</span>w.<span class="pl-sc">y</span>,z<span class="pl-k">=</span>g<span class="pl-k">&amp;&amp;</span>x<span class="pl-k">===</span>d.pos<span class="pl-k">+</span>d.len<span class="pl-k">||!</span>g<span class="pl-k">&amp;&amp;</span>w<span class="pl-k">===</span>d.pos<span class="pl-k">?-</span><span class="pl-c1">1</span><span class="pl-k">:</span><span class="pl-c1">1</span>,c<span class="pl-k">=</span>p(c,<span class="pl-c1">1</span>);<span class="pl-v">this</span>.isActive<span class="pl-k">=!</span><span class="pl-c1">0</span>;<span class="pl-k">if</span>(o){j<span class="pl-k">=</span>d.getPlotLinePath(j<span class="pl-k">+</span>v,o<span class="pl-k">*</span>z,b,<span class="pl-k">!</span><span class="pl-c1">0</span>);<span class="pl-k">if</span>(l<span class="pl-k">===</span>u){l<span class="pl-k">=</span>{stroke<span class="pl-k">:</span>q,<span class="pl-s1"><span class="pl-pds">&quot;</span>stroke-width<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span>o};<span class="pl-k">if</span>(D)l.dashstyle<span class="pl-k">=</span></td>
      </tr>
      <tr>
        <td id="L102" class="blob-num js-line-number" data-line-number="102"></td>
        <td id="LC102" class="blob-code js-file-line">D;<span class="pl-k">if</span>(<span class="pl-k">!</span>h)l.<span class="pl-sc">zIndex</span><span class="pl-k">=</span><span class="pl-c1">1</span>;<span class="pl-k">if</span>(b)l.opacity<span class="pl-k">=</span><span class="pl-c1">0</span>;<span class="pl-v">this</span>.gridLine<span class="pl-k">=</span>l<span class="pl-k">=</span>o<span class="pl-k">?</span>f.path(j).attr(l).<span class="pl-s3">add</span>(d.gridGroup)<span class="pl-k">:</span><span class="pl-c1">null</span>}<span class="pl-k">if</span>(<span class="pl-k">!</span>b<span class="pl-k">&amp;&amp;</span>l<span class="pl-k">&amp;&amp;</span>j)l[<span class="pl-v">this</span>.isNew<span class="pl-k">?</span><span class="pl-s1"><span class="pl-pds">&quot;</span>attr<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s1"><span class="pl-pds">&quot;</span>animate<span class="pl-pds">&quot;</span></span>]({d<span class="pl-k">:</span>j,opacity<span class="pl-k">:</span>c})}<span class="pl-k">if</span>(n<span class="pl-k">&amp;&amp;</span>J)t<span class="pl-k">===</span><span class="pl-s1"><span class="pl-pds">&quot;</span>inside<span class="pl-pds">&quot;</span></span><span class="pl-k">&amp;&amp;</span>(J<span class="pl-k">=-</span>J),d.opposite<span class="pl-k">&amp;&amp;</span>(J<span class="pl-k">=-</span>J),h<span class="pl-k">=</span><span class="pl-v">this</span>.getMarkPath(x,w,J,n<span class="pl-k">*</span>z,g,f),m<span class="pl-k">?</span>m.animate({d<span class="pl-k">:</span>h,opacity<span class="pl-k">:</span>c})<span class="pl-k">:</span><span class="pl-v">this</span>.mark<span class="pl-k">=</span>f.path(h).attr({stroke<span class="pl-k">:</span>C,<span class="pl-s1"><span class="pl-pds">&quot;</span>stroke-width<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span>n,opacity<span class="pl-k">:</span>c}).<span class="pl-s3">add</span>(d.axisGroup);<span class="pl-k">if</span>(i<span class="pl-k">&amp;&amp;!</span><span class="pl-s3">isNaN</span>(x))i.xy<span class="pl-k">=</span>w<span class="pl-k">=</span><span class="pl-v">this</span>.getLabelPosition(x,w,i,g,k,v,a,s),<span class="pl-v">this</span>.isFirst<span class="pl-k">&amp;&amp;!</span><span class="pl-v">this</span>.isLast<span class="pl-k">&amp;&amp;!</span>p(e.showFirstLabel,<span class="pl-c1">1</span>)<span class="pl-k">||</span><span class="pl-v">this</span>.isLast<span class="pl-k">&amp;&amp;!</span><span class="pl-v">this</span>.isFirst<span class="pl-k">&amp;&amp;!</span>p(e.showLastLabel,</td>
      </tr>
      <tr>
        <td id="L103" class="blob-num js-line-number" data-line-number="103"></td>
        <td id="LC103" class="blob-code js-file-line"><span class="pl-c1">1</span>)<span class="pl-k">?</span>r<span class="pl-k">=!</span><span class="pl-c1">1</span><span class="pl-k">:!</span>d.isRadial<span class="pl-k">&amp;&amp;!</span>k.step<span class="pl-k">&amp;&amp;!</span>k.rotation<span class="pl-k">&amp;&amp;!</span>b<span class="pl-k">&amp;&amp;</span>c<span class="pl-k">!==</span><span class="pl-c1">0</span><span class="pl-k">&amp;&amp;</span>(r<span class="pl-k">=</span><span class="pl-v">this</span>.handleOverflow(a,w)),s<span class="pl-k">&amp;&amp;</span>a<span class="pl-k">%</span>s<span class="pl-k">&amp;&amp;</span>(r<span class="pl-k">=!</span><span class="pl-c1">1</span>),r<span class="pl-k">&amp;&amp;!</span><span class="pl-s3">isNaN</span>(w.<span class="pl-sc">y</span>)<span class="pl-k">?</span>(w.opacity<span class="pl-k">=</span>c,i[<span class="pl-v">this</span>.isNew<span class="pl-k">?</span><span class="pl-s1"><span class="pl-pds">&quot;</span>attr<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s1"><span class="pl-pds">&quot;</span>animate<span class="pl-pds">&quot;</span></span>](w),<span class="pl-v">this</span>.isNew<span class="pl-k">=!</span><span class="pl-c1">1</span>)<span class="pl-k">:</span>i.attr(<span class="pl-s1"><span class="pl-pds">&quot;</span>y<span class="pl-pds">&quot;</span></span>,<span class="pl-k">-</span><span class="pl-c1">9999</span>)},<span class="pl-en">destroy</span>:<span class="pl-st">function</span>(){Pa(<span class="pl-v">this</span>,<span class="pl-v">this</span>.<span class="pl-sc">axis</span>)}};<span class="pl-s3">K</span>.<span class="pl-en">PlotLineOrBand</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>,<span class="pl-vpf">b</span>){<span class="pl-v">this</span>.<span class="pl-sc">axis</span><span class="pl-k">=</span>a;<span class="pl-k">if</span>(b)<span class="pl-v">this</span>.<span class="pl-sc">options</span><span class="pl-k">=</span>b,<span class="pl-v">this</span>.<span class="pl-sc">id</span><span class="pl-k">=</span>b.<span class="pl-sc">id</span>};<span class="pl-s3">K.PlotLineOrBand</span>.<span class="pl-sc">prototype</span><span class="pl-k">=</span>{<span class="pl-en">render</span>:<span class="pl-st">function</span>(){<span class="pl-s">var</span> a<span class="pl-k">=</span><span class="pl-v">this</span>,b<span class="pl-k">=</span>a.<span class="pl-sc">axis</span>,c<span class="pl-k">=</span>b.horiz,d<span class="pl-k">=</span>(b.pointRange<span class="pl-k">||</span><span class="pl-c1">0</span>)/<span class="pl-c1">2</span>,e<span class="pl-k">=</span>a.<span class="pl-sc">options</span>,f<span class="pl-k">=</span>e.<span class="pl-sc">label</span>,g<span class="pl-k">=</span>a.<span class="pl-sc">label</span>,h<span class="pl-k">=</span>e.<span class="pl-sc">width</span>,i<span class="pl-k">=</span>e.to,j<span class="pl-k">=</span>e.from,k<span class="pl-k">=</span>s(j)<span class="pl-k">&amp;&amp;</span>s(i),l<span class="pl-k">=</span>e.<span class="pl-sc">value</span>,n<span class="pl-k">=</span>e.dashStyle,</td>
      </tr>
      <tr>
        <td id="L104" class="blob-num js-line-number" data-line-number="104"></td>
        <td id="LC104" class="blob-code js-file-line">m<span class="pl-k">=</span>a.svgElem,o<span class="pl-k">=</span>[],p,q<span class="pl-k">=</span>e.<span class="pl-sc">color</span>,J<span class="pl-k">=</span>e.<span class="pl-sc">zIndex</span>,C<span class="pl-k">=</span>e.events,r<span class="pl-k">=</span>{},u<span class="pl-k">=</span>b.chart.renderer;b.isLog<span class="pl-k">&amp;&amp;</span>(j<span class="pl-k">=</span>za(j),i<span class="pl-k">=</span>za(i),l<span class="pl-k">=</span>za(l));<span class="pl-k">if</span>(h){<span class="pl-k">if</span>(o<span class="pl-k">=</span>b.getPlotLinePath(l,h),r<span class="pl-k">=</span>{stroke<span class="pl-k">:</span>q,<span class="pl-s1"><span class="pl-pds">&quot;</span>stroke-width<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span>h},n)r.dashstyle<span class="pl-k">=</span>n}<span class="pl-k">else</span> <span class="pl-k">if</span>(k){j<span class="pl-k">=</span>t(j,b.min<span class="pl-k">-</span>d);i<span class="pl-k">=</span>L(i,b.max<span class="pl-k">+</span>d);o<span class="pl-k">=</span>b.getPlotBandPath(j,i,e);<span class="pl-k">if</span>(q)r.fill<span class="pl-k">=</span>q;<span class="pl-k">if</span>(e.<span class="pl-sc">borderWidth</span>)r.stroke<span class="pl-k">=</span>e.<span class="pl-sc">borderColor</span>,r[<span class="pl-s1"><span class="pl-pds">&quot;</span>stroke-width<span class="pl-pds">&quot;</span></span>]<span class="pl-k">=</span>e.<span class="pl-sc">borderWidth</span>}<span class="pl-k">else</span> <span class="pl-k">return</span>;<span class="pl-k">if</span>(s(J))r.<span class="pl-sc">zIndex</span><span class="pl-k">=</span>J;<span class="pl-k">if</span>(m)<span class="pl-k">if</span>(o)m.animate({d<span class="pl-k">:</span>o},<span class="pl-c1">null</span>,m.onGetPath);<span class="pl-k">else</span>{<span class="pl-k">if</span>(m.hide(),<span class="pl-s3">m</span>.<span class="pl-en">onGetPath</span><span class="pl-k">=</span><span class="pl-st">function</span>(){m.show()},g)a.<span class="pl-sc">label</span><span class="pl-k">=</span>g<span class="pl-k">=</span>g.destroy()}<span class="pl-k">else</span> <span class="pl-k">if</span>(o<span class="pl-k">&amp;&amp;</span></td>
      </tr>
      <tr>
        <td id="L105" class="blob-num js-line-number" data-line-number="105"></td>
        <td id="LC105" class="blob-code js-file-line">o.<span class="pl-sc">length</span><span class="pl-k">&amp;&amp;</span>(a.svgElem<span class="pl-k">=</span>m<span class="pl-k">=</span>u.path(o).attr(r).<span class="pl-s3">add</span>(),C))<span class="pl-k">for</span>(p <span class="pl-k">in</span> <span class="pl-en">d</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">b</span>){m.on(b,<span class="pl-st">function</span>(<span class="pl-vpf">c</span>){C[b].<span class="pl-s3">apply</span>(a,[c])})},C)d(p);<span class="pl-k">if</span>(f<span class="pl-k">&amp;&amp;</span>s(f.<span class="pl-sc">text</span>)<span class="pl-k">&amp;&amp;</span>o<span class="pl-k">&amp;&amp;</span>o.<span class="pl-sc">length</span><span class="pl-k">&amp;&amp;</span>b.<span class="pl-sc">width</span><span class="pl-k">&gt;</span><span class="pl-c1">0</span><span class="pl-k">&amp;&amp;</span>b.<span class="pl-sc">height</span><span class="pl-k">&gt;</span><span class="pl-c1">0</span>){f<span class="pl-k">=</span>w({align<span class="pl-k">:</span>c<span class="pl-k">&amp;&amp;</span>k<span class="pl-k">&amp;&amp;</span><span class="pl-s1"><span class="pl-pds">&quot;</span>center<span class="pl-pds">&quot;</span></span>,x<span class="pl-k">:</span>c<span class="pl-k">?!</span>k<span class="pl-k">&amp;&amp;</span><span class="pl-c1">4</span><span class="pl-k">:</span><span class="pl-c1">10</span>,verticalAlign<span class="pl-k">:!</span>c<span class="pl-k">&amp;&amp;</span>k<span class="pl-k">&amp;&amp;</span><span class="pl-s1"><span class="pl-pds">&quot;</span>middle<span class="pl-pds">&quot;</span></span>,y<span class="pl-k">:</span>c<span class="pl-k">?</span>k<span class="pl-k">?</span><span class="pl-c1">16</span><span class="pl-k">:</span><span class="pl-c1">10</span><span class="pl-k">:</span>k<span class="pl-k">?</span><span class="pl-c1">6</span><span class="pl-k">:-</span><span class="pl-c1">4</span>,rotation<span class="pl-k">:</span>c<span class="pl-k">&amp;&amp;!</span>k<span class="pl-k">&amp;&amp;</span><span class="pl-c1">90</span>},f);<span class="pl-k">if</span>(<span class="pl-k">!</span>g){r<span class="pl-k">=</span>{align<span class="pl-k">:</span>f.<span class="pl-sc">textAlign</span><span class="pl-k">||</span>f.<span class="pl-sc">align</span>,rotation<span class="pl-k">:</span>f.rotation};<span class="pl-k">if</span>(s(J))r.<span class="pl-sc">zIndex</span><span class="pl-k">=</span>J;a.<span class="pl-sc">label</span><span class="pl-k">=</span>g<span class="pl-k">=</span>u.<span class="pl-sc">text</span>(f.<span class="pl-sc">text</span>,<span class="pl-c1">0</span>,<span class="pl-c1">0</span>,f.useHTML).attr(r).css(f.<span class="pl-sc">style</span>).<span class="pl-s3">add</span>()}b<span class="pl-k">=</span>[o[<span class="pl-c1">1</span>],o[<span class="pl-c1">4</span>],k<span class="pl-k">?</span>o[<span class="pl-c1">6</span>]<span class="pl-k">:</span>o[<span class="pl-c1">1</span>]];k<span class="pl-k">=</span>[o[<span class="pl-c1">2</span>],o[<span class="pl-c1">5</span>],k<span class="pl-k">?</span>o[<span class="pl-c1">7</span>]<span class="pl-k">:</span>o[<span class="pl-c1">2</span>]];o<span class="pl-k">=</span>Oa(b);c<span class="pl-k">=</span>Oa(k);g.<span class="pl-sc">align</span>(f,</td>
      </tr>
      <tr>
        <td id="L106" class="blob-num js-line-number" data-line-number="106"></td>
        <td id="LC106" class="blob-code js-file-line"><span class="pl-k">!</span><span class="pl-c1">1</span>,{x<span class="pl-k">:</span>o,y<span class="pl-k">:</span>c,width<span class="pl-k">:</span>Ca(b)<span class="pl-k">-</span>o,height<span class="pl-k">:</span>Ca(k)<span class="pl-k">-</span>c});g.show()}<span class="pl-k">else</span> g<span class="pl-k">&amp;&amp;</span>g.hide();<span class="pl-k">return</span> a},<span class="pl-en">destroy</span>:<span class="pl-st">function</span>(){la(<span class="pl-v">this</span>.<span class="pl-sc">axis</span>.plotLinesAndBands,<span class="pl-v">this</span>);<span class="pl-k">delete</span> <span class="pl-v">this</span>.<span class="pl-sc">axis</span>;Pa(<span class="pl-v">this</span>)}};<span class="pl-s3">na</span>.<span class="pl-sc">prototype</span><span class="pl-k">=</span>{defaultOptions<span class="pl-k">:</span>{dateTimeLabelFormats<span class="pl-k">:</span>{millisecond<span class="pl-k">:</span><span class="pl-s1"><span class="pl-pds">&quot;</span>%H:%M:%S.%L<span class="pl-pds">&quot;</span></span>,second<span class="pl-k">:</span><span class="pl-s1"><span class="pl-pds">&quot;</span>%H:%M:%S<span class="pl-pds">&quot;</span></span>,minute<span class="pl-k">:</span><span class="pl-s1"><span class="pl-pds">&quot;</span>%H:%M<span class="pl-pds">&quot;</span></span>,hour<span class="pl-k">:</span><span class="pl-s1"><span class="pl-pds">&quot;</span>%H:%M<span class="pl-pds">&quot;</span></span>,day<span class="pl-k">:</span><span class="pl-s1"><span class="pl-pds">&quot;</span>%e. %b<span class="pl-pds">&quot;</span></span>,week<span class="pl-k">:</span><span class="pl-s1"><span class="pl-pds">&quot;</span>%e. %b<span class="pl-pds">&quot;</span></span>,month<span class="pl-k">:</span><span class="pl-s1"><span class="pl-pds">&quot;</span>%b &#39;%y<span class="pl-pds">&quot;</span></span>,year<span class="pl-k">:</span><span class="pl-s1"><span class="pl-pds">&quot;</span>%Y<span class="pl-pds">&quot;</span></span>},endOnTick<span class="pl-k">:!</span><span class="pl-c1">1</span>,gridLineColor<span class="pl-k">:</span><span class="pl-s1"><span class="pl-pds">&quot;</span>#C0C0C0<span class="pl-pds">&quot;</span></span>,labels<span class="pl-k">:</span>M,lineColor<span class="pl-k">:</span><span class="pl-s1"><span class="pl-pds">&quot;</span>#C0D0E0<span class="pl-pds">&quot;</span></span>,lineWidth<span class="pl-k">:</span><span class="pl-c1">1</span>,minPadding<span class="pl-k">:</span><span class="pl-c1">0.01</span>,maxPadding<span class="pl-k">:</span><span class="pl-c1">0.01</span>,minorGridLineColor<span class="pl-k">:</span><span class="pl-s1"><span class="pl-pds">&quot;</span>#E0E0E0<span class="pl-pds">&quot;</span></span>,minorGridLineWidth<span class="pl-k">:</span><span class="pl-c1">1</span>,minorTickColor<span class="pl-k">:</span><span class="pl-s1"><span class="pl-pds">&quot;</span>#A0A0A0<span class="pl-pds">&quot;</span></span>,</td>
      </tr>
      <tr>
        <td id="L107" class="blob-num js-line-number" data-line-number="107"></td>
        <td id="LC107" class="blob-code js-file-line">minorTickLength<span class="pl-k">:</span><span class="pl-c1">2</span>,minorTickPosition<span class="pl-k">:</span><span class="pl-s1"><span class="pl-pds">&quot;</span>outside<span class="pl-pds">&quot;</span></span>,startOfWeek<span class="pl-k">:</span><span class="pl-c1">1</span>,startOnTick<span class="pl-k">:!</span><span class="pl-c1">1</span>,tickColor<span class="pl-k">:</span><span class="pl-s1"><span class="pl-pds">&quot;</span>#C0D0E0<span class="pl-pds">&quot;</span></span>,tickLength<span class="pl-k">:</span><span class="pl-c1">10</span>,tickmarkPlacement<span class="pl-k">:</span><span class="pl-s1"><span class="pl-pds">&quot;</span>between<span class="pl-pds">&quot;</span></span>,tickPixelInterval<span class="pl-k">:</span><span class="pl-c1">100</span>,tickPosition<span class="pl-k">:</span><span class="pl-s1"><span class="pl-pds">&quot;</span>outside<span class="pl-pds">&quot;</span></span>,tickWidth<span class="pl-k">:</span><span class="pl-c1">1</span>,title<span class="pl-k">:</span>{align<span class="pl-k">:</span><span class="pl-s1"><span class="pl-pds">&quot;</span>middle<span class="pl-pds">&quot;</span></span>,style<span class="pl-k">:</span>{color<span class="pl-k">:</span><span class="pl-s1"><span class="pl-pds">&quot;</span>#707070<span class="pl-pds">&quot;</span></span>}},type<span class="pl-k">:</span><span class="pl-s1"><span class="pl-pds">&quot;</span>linear<span class="pl-pds">&quot;</span></span>},defaultYAxisOptions<span class="pl-k">:</span>{endOnTick<span class="pl-k">:!</span><span class="pl-c1">0</span>,gridLineWidth<span class="pl-k">:</span><span class="pl-c1">1</span>,tickPixelInterval<span class="pl-k">:</span><span class="pl-c1">72</span>,showLastLabel<span class="pl-k">:!</span><span class="pl-c1">0</span>,labels<span class="pl-k">:</span>{x<span class="pl-k">:-</span><span class="pl-c1">8</span>,y<span class="pl-k">:</span><span class="pl-c1">3</span>},lineWidth<span class="pl-k">:</span><span class="pl-c1">0</span>,maxPadding<span class="pl-k">:</span><span class="pl-c1">0.05</span>,minPadding<span class="pl-k">:</span><span class="pl-c1">0.05</span>,startOnTick<span class="pl-k">:!</span><span class="pl-c1">0</span>,tickWidth<span class="pl-k">:</span><span class="pl-c1">0</span>,title<span class="pl-k">:</span>{rotation<span class="pl-k">:</span><span class="pl-c1">270</span>,text<span class="pl-k">:</span><span class="pl-s1"><span class="pl-pds">&quot;</span>Values<span class="pl-pds">&quot;</span></span>},stackLabels<span class="pl-k">:</span>{enabled<span class="pl-k">:!</span><span class="pl-c1">1</span>,<span class="pl-en">formatter</span>:<span class="pl-st">function</span>(){<span class="pl-k">return</span> Ba(<span class="pl-v">this</span>.total,</td>
      </tr>
      <tr>
        <td id="L108" class="blob-num js-line-number" data-line-number="108"></td>
        <td id="LC108" class="blob-code js-file-line"><span class="pl-k">-</span><span class="pl-c1">1</span>)},style<span class="pl-k">:</span>M.<span class="pl-sc">style</span>}},defaultLeftAxisOptions<span class="pl-k">:</span>{labels<span class="pl-k">:</span>{x<span class="pl-k">:-</span><span class="pl-c1">15</span>,y<span class="pl-k">:</span><span class="pl-c1">null</span>},title<span class="pl-k">:</span>{rotation<span class="pl-k">:</span><span class="pl-c1">270</span>}},defaultRightAxisOptions<span class="pl-k">:</span>{labels<span class="pl-k">:</span>{x<span class="pl-k">:</span><span class="pl-c1">15</span>,y<span class="pl-k">:</span><span class="pl-c1">null</span>},title<span class="pl-k">:</span>{rotation<span class="pl-k">:</span><span class="pl-c1">90</span>}},defaultBottomAxisOptions<span class="pl-k">:</span>{labels<span class="pl-k">:</span>{x<span class="pl-k">:</span><span class="pl-c1">0</span>,y<span class="pl-k">:</span><span class="pl-c1">null</span>},title<span class="pl-k">:</span>{rotation<span class="pl-k">:</span><span class="pl-c1">0</span>}},defaultTopAxisOptions<span class="pl-k">:</span>{labels<span class="pl-k">:</span>{x<span class="pl-k">:</span><span class="pl-c1">0</span>,y<span class="pl-k">:-</span><span class="pl-c1">15</span>},title<span class="pl-k">:</span>{rotation<span class="pl-k">:</span><span class="pl-c1">0</span>}},<span class="pl-en">init</span>:<span class="pl-st">function</span>(<span class="pl-vpf">a</span>,<span class="pl-vpf">b</span>){<span class="pl-s">var</span> c<span class="pl-k">=</span>b.isX;<span class="pl-v">this</span>.horiz<span class="pl-k">=</span>a.inverted<span class="pl-k">?!</span>c<span class="pl-k">:</span>c;<span class="pl-v">this</span>.coll<span class="pl-k">=</span>(<span class="pl-v">this</span>.isXAxis<span class="pl-k">=</span>c)<span class="pl-k">?</span><span class="pl-s1"><span class="pl-pds">&quot;</span>xAxis<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s1"><span class="pl-pds">&quot;</span>yAxis<span class="pl-pds">&quot;</span></span>;<span class="pl-v">this</span>.opposite<span class="pl-k">=</span>b.opposite;<span class="pl-v">this</span>.side<span class="pl-k">=</span>b.side<span class="pl-k">||</span>(<span class="pl-v">this</span>.horiz<span class="pl-k">?</span><span class="pl-v">this</span>.opposite<span class="pl-k">?</span><span class="pl-c1">0</span><span class="pl-k">:</span><span class="pl-c1">2</span><span class="pl-k">:</span><span class="pl-v">this</span>.opposite<span class="pl-k">?</span><span class="pl-c1">1</span><span class="pl-k">:</span><span class="pl-c1">3</span>);<span class="pl-v">this</span>.setOptions(b);<span class="pl-s">var</span> d<span class="pl-k">=</span></td>
      </tr>
      <tr>
        <td id="L109" class="blob-num js-line-number" data-line-number="109"></td>
        <td id="LC109" class="blob-code js-file-line"><span class="pl-v">this</span>.<span class="pl-sc">options</span>,e<span class="pl-k">=</span>d.<span class="pl-sc">type</span>;<span class="pl-v">this</span>.labelFormatter<span class="pl-k">=</span>d.labels.formatter<span class="pl-k">||</span><span class="pl-v">this</span>.defaultLabelFormatter;<span class="pl-v">this</span>.userOptions<span class="pl-k">=</span>b;<span class="pl-v">this</span>.minPixelPadding<span class="pl-k">=</span><span class="pl-c1">0</span>;<span class="pl-v">this</span>.chart<span class="pl-k">=</span>a;<span class="pl-v">this</span>.reversed<span class="pl-k">=</span>d.reversed;<span class="pl-v">this</span>.zoomEnabled<span class="pl-k">=</span>d.zoomEnabled<span class="pl-k">!==!</span><span class="pl-c1">1</span>;<span class="pl-v">this</span>.categories<span class="pl-k">=</span>d.categories<span class="pl-k">||</span>e<span class="pl-k">===</span><span class="pl-s1"><span class="pl-pds">&quot;</span>category<span class="pl-pds">&quot;</span></span>;<span class="pl-v">this</span>.names<span class="pl-k">=</span>[];<span class="pl-v">this</span>.isLog<span class="pl-k">=</span>e<span class="pl-k">===</span><span class="pl-s1"><span class="pl-pds">&quot;</span>logarithmic<span class="pl-pds">&quot;</span></span>;<span class="pl-v">this</span>.isDatetimeAxis<span class="pl-k">=</span>e<span class="pl-k">===</span><span class="pl-s1"><span class="pl-pds">&quot;</span>datetime<span class="pl-pds">&quot;</span></span>;<span class="pl-v">this</span>.isLinked<span class="pl-k">=</span>s(d.linkedTo);<span class="pl-v">this</span>.tickmarkOffset<span class="pl-k">=</span><span class="pl-v">this</span>.categories<span class="pl-k">&amp;&amp;</span>d.tickmarkPlacement<span class="pl-k">===</span><span class="pl-s1"><span class="pl-pds">&quot;</span>between<span class="pl-pds">&quot;</span></span><span class="pl-k">&amp;&amp;</span>p(d.tickInterval,<span class="pl-c1">1</span>)<span class="pl-k">===</span><span class="pl-c1">1</span><span class="pl-k">?</span><span class="pl-c1">0.5</span><span class="pl-k">:</span><span class="pl-c1">0</span>;<span class="pl-v">this</span>.ticks<span class="pl-k">=</span>{};<span class="pl-v">this</span>.labelEdge<span class="pl-k">=</span>[];<span class="pl-v">this</span>.minorTicks<span class="pl-k">=</span></td>
      </tr>
      <tr>
        <td id="L110" class="blob-num js-line-number" data-line-number="110"></td>
        <td id="LC110" class="blob-code js-file-line">{};<span class="pl-v">this</span>.plotLinesAndBands<span class="pl-k">=</span>[];<span class="pl-v">this</span>.alternateBands<span class="pl-k">=</span>{};<span class="pl-v">this</span>.len<span class="pl-k">=</span><span class="pl-c1">0</span>;<span class="pl-v">this</span>.minRange<span class="pl-k">=</span><span class="pl-v">this</span>.userMinRange<span class="pl-k">=</span>d.minRange<span class="pl-k">||</span>d.maxZoom;<span class="pl-v">this</span>.range<span class="pl-k">=</span>d.range;<span class="pl-v">this</span>.offset<span class="pl-k">=</span>d.offset<span class="pl-k">||</span><span class="pl-c1">0</span>;<span class="pl-v">this</span>.stacks<span class="pl-k">=</span>{};<span class="pl-v">this</span>.oldStacks<span class="pl-k">=</span>{};<span class="pl-v">this</span>.min<span class="pl-k">=</span><span class="pl-v">this</span>.max<span class="pl-k">=</span><span class="pl-c1">null</span>;<span class="pl-v">this</span>.crosshair<span class="pl-k">=</span>p(d.crosshair,ra(a.<span class="pl-sc">options</span>.tooltip.crosshairs)[c<span class="pl-k">?</span><span class="pl-c1">0</span><span class="pl-k">:</span><span class="pl-c1">1</span>],<span class="pl-k">!</span><span class="pl-c1">1</span>);<span class="pl-s">var</span> f,d<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-sc">options</span>.events;Ma(<span class="pl-v">this</span>,a.axes)<span class="pl-k">===-</span><span class="pl-c1">1</span><span class="pl-k">&amp;&amp;</span>(c<span class="pl-k">&amp;&amp;!</span><span class="pl-v">this</span>.isColorAxis<span class="pl-k">?</span>a.axes.<span class="pl-s3">splice</span>(a.xAxis.<span class="pl-sc">length</span>,<span class="pl-c1">0</span>,<span class="pl-v">this</span>)<span class="pl-k">:</span>a.axes.<span class="pl-s3">push</span>(<span class="pl-v">this</span>),a[<span class="pl-v">this</span>.coll].<span class="pl-s3">push</span>(<span class="pl-v">this</span>));<span class="pl-v">this</span>.series<span class="pl-k">=</span><span class="pl-v">this</span>.series<span class="pl-k">||</span>[];<span class="pl-k">if</span>(a.inverted<span class="pl-k">&amp;&amp;</span>c<span class="pl-k">&amp;&amp;</span><span class="pl-v">this</span>.reversed<span class="pl-k">===</span></td>
      </tr>
      <tr>
        <td id="L111" class="blob-num js-line-number" data-line-number="111"></td>
        <td id="LC111" class="blob-code js-file-line">u)<span class="pl-v">this</span>.reversed<span class="pl-k">=!</span><span class="pl-c1">0</span>;<span class="pl-v">this</span>.removePlotLine<span class="pl-k">=</span><span class="pl-v">this</span>.removePlotBand<span class="pl-k">=</span><span class="pl-v">this</span>.removePlotBandOrLine;<span class="pl-k">for</span>(f <span class="pl-k">in</span> d)N(<span class="pl-v">this</span>,f,d[f]);<span class="pl-k">if</span>(<span class="pl-v">this</span>.isLog)<span class="pl-v">this</span>.val2lin<span class="pl-k">=</span>za,<span class="pl-v">this</span>.lin2val<span class="pl-k">=</span>ka},<span class="pl-en">setOptions</span>:<span class="pl-st">function</span>(<span class="pl-vpf">a</span>){<span class="pl-v">this</span>.<span class="pl-sc">options</span><span class="pl-k">=</span>w(<span class="pl-v">this</span>.defaultOptions,<span class="pl-v">this</span>.isXAxis<span class="pl-k">?</span>{}<span class="pl-k">:</span><span class="pl-v">this</span>.defaultYAxisOptions,[<span class="pl-v">this</span>.defaultTopAxisOptions,<span class="pl-v">this</span>.defaultRightAxisOptions,<span class="pl-v">this</span>.defaultBottomAxisOptions,<span class="pl-v">this</span>.defaultLeftAxisOptions][<span class="pl-v">this</span>.side],w(E[<span class="pl-v">this</span>.coll],a))},<span class="pl-en">defaultLabelFormatter</span>:<span class="pl-st">function</span>(){<span class="pl-s">var</span> a<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-sc">axis</span>,b<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-sc">value</span>,c<span class="pl-k">=</span>a.categories,d<span class="pl-k">=</span><span class="pl-v">this</span>.dateTimeLabelFormat,</td>
      </tr>
      <tr>
        <td id="L112" class="blob-num js-line-number" data-line-number="112"></td>
        <td id="LC112" class="blob-code js-file-line">e<span class="pl-k">=</span>E.<span class="pl-sc">lang</span>.numericSymbols,f<span class="pl-k">=</span>e<span class="pl-k">&amp;&amp;</span>e.<span class="pl-sc">length</span>,g,h<span class="pl-k">=</span>a.<span class="pl-sc">options</span>.labels.format,a<span class="pl-k">=</span>a.isLog<span class="pl-k">?</span>b<span class="pl-k">:</span>a.tickInterval;<span class="pl-k">if</span>(h)g<span class="pl-k">=</span>Ja(h,<span class="pl-v">this</span>);<span class="pl-k">else</span> <span class="pl-k">if</span>(c)g<span class="pl-k">=</span>b;<span class="pl-k">else</span> <span class="pl-k">if</span>(d)g<span class="pl-k">=</span>cb(d,b);<span class="pl-k">else</span> <span class="pl-k">if</span>(f<span class="pl-k">&amp;&amp;</span>a<span class="pl-k">&gt;=</span><span class="pl-c1">1E3</span>)<span class="pl-k">for</span>(;f<span class="pl-k">--&amp;&amp;</span>g<span class="pl-k">===</span>u;)c<span class="pl-k">=</span><span class="pl-s3">Math</span>.<span class="pl-s3">pow</span>(<span class="pl-c1">1E3</span>,f<span class="pl-k">+</span><span class="pl-c1">1</span>),a<span class="pl-k">&gt;=</span>c<span class="pl-k">&amp;&amp;</span>e[f]<span class="pl-k">!==</span><span class="pl-c1">null</span><span class="pl-k">&amp;&amp;</span>(g<span class="pl-k">=</span>Ba(b/c,<span class="pl-k">-</span><span class="pl-c1">1</span>)<span class="pl-k">+</span>e[f]);g<span class="pl-k">===</span>u<span class="pl-k">&amp;&amp;</span>(g<span class="pl-k">=</span>Q(b)<span class="pl-k">&gt;=</span><span class="pl-c1">1E4</span><span class="pl-k">?</span>Ba(b,<span class="pl-c1">0</span>)<span class="pl-k">:</span>Ba(b,<span class="pl-k">-</span><span class="pl-c1">1</span>,u,<span class="pl-s1"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>));<span class="pl-k">return</span> g},<span class="pl-en">getSeriesExtremes</span>:<span class="pl-st">function</span>(){<span class="pl-s">var</span> a<span class="pl-k">=</span><span class="pl-v">this</span>,b<span class="pl-k">=</span>a.chart;a.hasVisibleSeries<span class="pl-k">=!</span><span class="pl-c1">1</span>;a.dataMin<span class="pl-k">=</span>a.dataMax<span class="pl-k">=</span>a.ignoreMinPadding<span class="pl-k">=</span>a.ignoreMaxPadding<span class="pl-k">=</span><span class="pl-c1">null</span>;a.buildStacks<span class="pl-k">&amp;&amp;</span>a.buildStacks();q(a.series,<span class="pl-st">function</span>(<span class="pl-vpf">c</span>){<span class="pl-k">if</span>(c.visible<span class="pl-k">||!</span>b.<span class="pl-sc">options</span>.chart.ignoreHiddenSeries){<span class="pl-s">var</span> d;</td>
      </tr>
      <tr>
        <td id="L113" class="blob-num js-line-number" data-line-number="113"></td>
        <td id="LC113" class="blob-code js-file-line">d<span class="pl-k">=</span>c.<span class="pl-sc">options</span>.threshold;<span class="pl-s">var</span> e;a.hasVisibleSeries<span class="pl-k">=!</span><span class="pl-c1">0</span>;a.isLog<span class="pl-k">&amp;&amp;</span>d<span class="pl-k">&lt;=</span><span class="pl-c1">0</span><span class="pl-k">&amp;&amp;</span>(d<span class="pl-k">=</span><span class="pl-c1">null</span>);<span class="pl-k">if</span>(a.isXAxis){<span class="pl-k">if</span>(d<span class="pl-k">=</span>c.xData,d.<span class="pl-sc">length</span>)a.dataMin<span class="pl-k">=</span>L(p(a.dataMin,d[<span class="pl-c1">0</span>]),Oa(d)),a.dataMax<span class="pl-k">=</span>t(p(a.dataMax,d[<span class="pl-c1">0</span>]),Ca(d))}<span class="pl-k">else</span>{c.getExtremes();e<span class="pl-k">=</span>c.dataMax;c<span class="pl-k">=</span>c.dataMin;<span class="pl-k">if</span>(s(c)<span class="pl-k">&amp;&amp;</span>s(e))a.dataMin<span class="pl-k">=</span>L(p(a.dataMin,c),c),a.dataMax<span class="pl-k">=</span>t(p(a.dataMax,e),e);<span class="pl-k">if</span>(s(d))<span class="pl-k">if</span>(a.dataMin<span class="pl-k">&gt;=</span>d)a.dataMin<span class="pl-k">=</span>d,a.ignoreMinPadding<span class="pl-k">=!</span><span class="pl-c1">0</span>;<span class="pl-k">else</span> <span class="pl-k">if</span>(a.dataMax<span class="pl-k">&lt;</span>d)a.dataMax<span class="pl-k">=</span>d,a.ignoreMaxPadding<span class="pl-k">=!</span><span class="pl-c1">0</span>}}})},<span class="pl-en">translate</span>:<span class="pl-st">function</span>(<span class="pl-vpf">a</span>,<span class="pl-vpf">b</span>,<span class="pl-vpf">c</span>,<span class="pl-vpf">d</span>,<span class="pl-vpf">e</span>,<span class="pl-vpf">f</span>){<span class="pl-s">var</span> g<span class="pl-k">=</span><span class="pl-c1">1</span>,h<span class="pl-k">=</span><span class="pl-c1">0</span>,i<span class="pl-k">=</span>d<span class="pl-k">?</span><span class="pl-v">this</span>.oldTransA<span class="pl-k">:</span><span class="pl-v">this</span>.transA,d<span class="pl-k">=</span>d<span class="pl-k">?</span><span class="pl-v">this</span>.oldMin<span class="pl-k">:</span></td>
      </tr>
      <tr>
        <td id="L114" class="blob-num js-line-number" data-line-number="114"></td>
        <td id="LC114" class="blob-code js-file-line"><span class="pl-v">this</span>.min,j<span class="pl-k">=</span><span class="pl-v">this</span>.minPixelPadding,e<span class="pl-k">=</span>(<span class="pl-v">this</span>.<span class="pl-sc">options</span>.ordinal<span class="pl-k">||</span><span class="pl-v">this</span>.isLog<span class="pl-k">&amp;&amp;</span>e)<span class="pl-k">&amp;&amp;</span><span class="pl-v">this</span>.lin2val;<span class="pl-k">if</span>(<span class="pl-k">!</span>i)i<span class="pl-k">=</span><span class="pl-v">this</span>.transA;<span class="pl-k">if</span>(c)g<span class="pl-k">*=-</span><span class="pl-c1">1</span>,h<span class="pl-k">=</span><span class="pl-v">this</span>.len;<span class="pl-v">this</span>.reversed<span class="pl-k">&amp;&amp;</span>(g<span class="pl-k">*=-</span><span class="pl-c1">1</span>,h<span class="pl-k">-=</span>g<span class="pl-k">*</span>(<span class="pl-v">this</span>.sector<span class="pl-k">||</span><span class="pl-v">this</span>.len));b<span class="pl-k">?</span>(a<span class="pl-k">=</span>a<span class="pl-k">*</span>g<span class="pl-k">+</span>h,a<span class="pl-k">-=</span>j,a<span class="pl-k">=</span>a/i<span class="pl-k">+</span>d,e<span class="pl-k">&amp;&amp;</span>(a<span class="pl-k">=</span><span class="pl-v">this</span>.lin2val(a)))<span class="pl-k">:</span>(e<span class="pl-k">&amp;&amp;</span>(a<span class="pl-k">=</span><span class="pl-v">this</span>.val2lin(a)),f<span class="pl-k">===</span><span class="pl-s1"><span class="pl-pds">&quot;</span>between<span class="pl-pds">&quot;</span></span><span class="pl-k">&amp;&amp;</span>(f<span class="pl-k">=</span><span class="pl-c1">0.5</span>),a<span class="pl-k">=</span>g<span class="pl-k">*</span>(a<span class="pl-k">-</span>d)<span class="pl-k">*</span>i<span class="pl-k">+</span>h<span class="pl-k">+</span>g<span class="pl-k">*</span>j<span class="pl-k">+</span>(ja(f)<span class="pl-k">?</span>i<span class="pl-k">*</span>f<span class="pl-k">*</span><span class="pl-v">this</span>.pointRange<span class="pl-k">:</span><span class="pl-c1">0</span>));<span class="pl-k">return</span> a},<span class="pl-en">toPixels</span>:<span class="pl-st">function</span>(<span class="pl-vpf">a</span>,<span class="pl-vpf">b</span>){<span class="pl-k">return</span> <span class="pl-v">this</span>.translate(a,<span class="pl-k">!</span><span class="pl-c1">1</span>,<span class="pl-k">!</span><span class="pl-v">this</span>.horiz,<span class="pl-c1">null</span>,<span class="pl-k">!</span><span class="pl-c1">0</span>)<span class="pl-k">+</span>(b<span class="pl-k">?</span><span class="pl-c1">0</span><span class="pl-k">:</span><span class="pl-v">this</span>.pos)},<span class="pl-en">toValue</span>:<span class="pl-st">function</span>(<span class="pl-vpf">a</span>,<span class="pl-vpf">b</span>){<span class="pl-k">return</span> <span class="pl-v">this</span>.translate(a<span class="pl-k">-</span>(b<span class="pl-k">?</span><span class="pl-c1">0</span><span class="pl-k">:</span><span class="pl-v">this</span>.pos),<span class="pl-k">!</span><span class="pl-c1">0</span>,<span class="pl-k">!</span><span class="pl-v">this</span>.horiz,<span class="pl-c1">null</span>,</td>
      </tr>
      <tr>
        <td id="L115" class="blob-num js-line-number" data-line-number="115"></td>
        <td id="LC115" class="blob-code js-file-line"><span class="pl-k">!</span><span class="pl-c1">0</span>)},<span class="pl-en">getPlotLinePath</span>:<span class="pl-st">function</span>(<span class="pl-vpf">a</span>,<span class="pl-vpf">b</span>,<span class="pl-vpf">c</span>,<span class="pl-vpf">d</span>,<span class="pl-vpf">e</span>){<span class="pl-s">var</span> f<span class="pl-k">=</span><span class="pl-v">this</span>.chart,g<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-sc">left</span>,h<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-sc">top</span>,i,j,k<span class="pl-k">=</span>c<span class="pl-k">&amp;&amp;</span>f.oldChartHeight<span class="pl-k">||</span>f.chartHeight,l<span class="pl-k">=</span>c<span class="pl-k">&amp;&amp;</span>f.oldChartWidth<span class="pl-k">||</span>f.chartWidth,n;i<span class="pl-k">=</span><span class="pl-v">this</span>.transB;e<span class="pl-k">=</span>p(e,<span class="pl-v">this</span>.translate(a,<span class="pl-c1">null</span>,<span class="pl-c1">null</span>,c));a<span class="pl-k">=</span>c<span class="pl-k">=</span>v(e<span class="pl-k">+</span>i);i<span class="pl-k">=</span>j<span class="pl-k">=</span>v(k<span class="pl-k">-</span>e<span class="pl-k">-</span>i);<span class="pl-k">if</span>(<span class="pl-s3">isNaN</span>(e))n<span class="pl-k">=!</span><span class="pl-c1">0</span>;<span class="pl-k">else</span> <span class="pl-k">if</span>(<span class="pl-v">this</span>.horiz){<span class="pl-k">if</span>(i<span class="pl-k">=</span>h,j<span class="pl-k">=</span>k<span class="pl-k">-</span><span class="pl-v">this</span>.<span class="pl-sc">bottom</span>,a<span class="pl-k">&lt;</span>g<span class="pl-k">||</span>a<span class="pl-k">&gt;</span>g<span class="pl-k">+</span><span class="pl-v">this</span>.<span class="pl-sc">width</span>)n<span class="pl-k">=!</span><span class="pl-c1">0</span>}<span class="pl-k">else</span> <span class="pl-k">if</span>(a<span class="pl-k">=</span>g,c<span class="pl-k">=</span>l<span class="pl-k">-</span><span class="pl-v">this</span>.<span class="pl-sc">right</span>,i<span class="pl-k">&lt;</span>h<span class="pl-k">||</span>i<span class="pl-k">&gt;</span>h<span class="pl-k">+</span><span class="pl-v">this</span>.<span class="pl-sc">height</span>)n<span class="pl-k">=!</span><span class="pl-c1">0</span>;<span class="pl-k">return</span> n<span class="pl-k">&amp;&amp;!</span>d<span class="pl-k">?</span>null<span class="pl-k">:</span>f.renderer.crispLine([<span class="pl-s1"><span class="pl-pds">&quot;</span>M<span class="pl-pds">&quot;</span></span>,a,i,<span class="pl-s1"><span class="pl-pds">&quot;</span>L<span class="pl-pds">&quot;</span></span>,c,j],b<span class="pl-k">||</span><span class="pl-c1">1</span>)},<span class="pl-en">getLinearTickPositions</span>:<span class="pl-st">function</span>(<span class="pl-vpf">a</span>,<span class="pl-vpf">b</span>,<span class="pl-vpf">c</span>){<span class="pl-s">var</span> d,e<span class="pl-k">=</span>ea(U(b/a)<span class="pl-k">*</span>a),f<span class="pl-k">=</span>ea(La(c/</td>
      </tr>
      <tr>
        <td id="L116" class="blob-num js-line-number" data-line-number="116"></td>
        <td id="LC116" class="blob-code js-file-line">a)<span class="pl-k">*</span>a),g<span class="pl-k">=</span>[];<span class="pl-k">if</span>(b<span class="pl-k">===</span>c<span class="pl-k">&amp;&amp;</span>ja(b))<span class="pl-k">return</span>[b];<span class="pl-k">for</span>(b<span class="pl-k">=</span>e;b<span class="pl-k">&lt;=</span>f;){g.<span class="pl-s3">push</span>(b);b<span class="pl-k">=</span>ea(b<span class="pl-k">+</span>a);<span class="pl-k">if</span>(b<span class="pl-k">===</span>d)<span class="pl-k">break</span>;d<span class="pl-k">=</span>b}<span class="pl-k">return</span> g},<span class="pl-en">getMinorTickPositions</span>:<span class="pl-st">function</span>(){<span class="pl-s">var</span> a<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-sc">options</span>,b<span class="pl-k">=</span><span class="pl-v">this</span>.tickPositions,c<span class="pl-k">=</span><span class="pl-v">this</span>.minorTickInterval,d<span class="pl-k">=</span>[],e;<span class="pl-k">if</span>(<span class="pl-v">this</span>.isLog){e<span class="pl-k">=</span>b.<span class="pl-sc">length</span>;<span class="pl-k">for</span>(a<span class="pl-k">=</span><span class="pl-c1">1</span>;a<span class="pl-k">&lt;</span>e;a<span class="pl-k">++</span>)d<span class="pl-k">=</span>d.<span class="pl-s3">concat</span>(<span class="pl-v">this</span>.getLogTickPositions(c,b[a<span class="pl-k">-</span><span class="pl-c1">1</span>],b[a],<span class="pl-k">!</span><span class="pl-c1">0</span>))}<span class="pl-k">else</span> <span class="pl-k">if</span>(<span class="pl-v">this</span>.isDatetimeAxis<span class="pl-k">&amp;&amp;</span>a.minorTickInterval<span class="pl-k">===</span><span class="pl-s1"><span class="pl-pds">&quot;</span>auto<span class="pl-pds">&quot;</span></span>)d<span class="pl-k">=</span>d.<span class="pl-s3">concat</span>(<span class="pl-v">this</span>.getTimeTicks(<span class="pl-v">this</span>.normalizeTimeTickInterval(c),<span class="pl-v">this</span>.min,<span class="pl-v">this</span>.max,a.startOfWeek)),d[<span class="pl-c1">0</span>]<span class="pl-k">&lt;</span><span class="pl-v">this</span>.min<span class="pl-k">&amp;&amp;</span>d.<span class="pl-s3">shift</span>();<span class="pl-k">else</span> <span class="pl-k">for</span>(b<span class="pl-k">=</span><span class="pl-v">this</span>.min<span class="pl-k">+</span></td>
      </tr>
      <tr>
        <td id="L117" class="blob-num js-line-number" data-line-number="117"></td>
        <td id="LC117" class="blob-code js-file-line">(b[<span class="pl-c1">0</span>]<span class="pl-k">-</span><span class="pl-v">this</span>.min)<span class="pl-k">%</span>c;b<span class="pl-k">&lt;=</span><span class="pl-v">this</span>.max;b<span class="pl-k">+=</span>c)d.<span class="pl-s3">push</span>(b);<span class="pl-k">return</span> d},<span class="pl-en">adjustForMinRange</span>:<span class="pl-st">function</span>(){<span class="pl-s">var</span> a<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-sc">options</span>,b<span class="pl-k">=</span><span class="pl-v">this</span>.min,c<span class="pl-k">=</span><span class="pl-v">this</span>.max,d,e<span class="pl-k">=</span><span class="pl-v">this</span>.dataMax<span class="pl-k">-</span><span class="pl-v">this</span>.dataMin<span class="pl-k">&gt;=</span><span class="pl-v">this</span>.minRange,f,g,h,i,j;<span class="pl-k">if</span>(<span class="pl-v">this</span>.isXAxis<span class="pl-k">&amp;&amp;</span><span class="pl-v">this</span>.minRange<span class="pl-k">===</span>u<span class="pl-k">&amp;&amp;!</span><span class="pl-v">this</span>.isLog)s(a.min)<span class="pl-k">||</span>s(a.max)<span class="pl-k">?</span><span class="pl-v">this</span>.minRange<span class="pl-k">=</span>null<span class="pl-k">:</span>(q(<span class="pl-v">this</span>.series,<span class="pl-st">function</span>(<span class="pl-vpf">a</span>){i<span class="pl-k">=</span>a.xData;<span class="pl-k">for</span>(g<span class="pl-k">=</span>j<span class="pl-k">=</span>a.xIncrement<span class="pl-k">?</span><span class="pl-c1">1</span><span class="pl-k">:</span>i.<span class="pl-sc">length</span><span class="pl-k">-</span><span class="pl-c1">1</span>;g<span class="pl-k">&gt;</span><span class="pl-c1">0</span>;g<span class="pl-k">--</span>)<span class="pl-k">if</span>(h<span class="pl-k">=</span>i[g]<span class="pl-k">-</span>i[g<span class="pl-k">-</span><span class="pl-c1">1</span>],f<span class="pl-k">===</span>u<span class="pl-k">||</span>h<span class="pl-k">&lt;</span>f)f<span class="pl-k">=</span>h}),<span class="pl-v">this</span>.minRange<span class="pl-k">=</span>L(f<span class="pl-k">*</span><span class="pl-c1">5</span>,<span class="pl-v">this</span>.dataMax<span class="pl-k">-</span><span class="pl-v">this</span>.dataMin));<span class="pl-k">if</span>(c<span class="pl-k">-</span>b<span class="pl-k">&lt;</span><span class="pl-v">this</span>.minRange){<span class="pl-s">var</span> k<span class="pl-k">=</span><span class="pl-v">this</span>.minRange;d<span class="pl-k">=</span>(k<span class="pl-k">-</span>c<span class="pl-k">+</span>b)/<span class="pl-c1">2</span>;d<span class="pl-k">=</span>[b<span class="pl-k">-</span>d,p(a.min,b<span class="pl-k">-</span>d)];</td>
      </tr>
      <tr>
        <td id="L118" class="blob-num js-line-number" data-line-number="118"></td>
        <td id="LC118" class="blob-code js-file-line"><span class="pl-k">if</span>(e)d[<span class="pl-c1">2</span>]<span class="pl-k">=</span><span class="pl-v">this</span>.dataMin;b<span class="pl-k">=</span>Ca(d);c<span class="pl-k">=</span>[b<span class="pl-k">+</span>k,p(a.max,b<span class="pl-k">+</span>k)];<span class="pl-k">if</span>(e)c[<span class="pl-c1">2</span>]<span class="pl-k">=</span><span class="pl-v">this</span>.dataMax;c<span class="pl-k">=</span>Oa(c);c<span class="pl-k">-</span>b<span class="pl-k">&lt;</span>k<span class="pl-k">&amp;&amp;</span>(d[<span class="pl-c1">0</span>]<span class="pl-k">=</span>c<span class="pl-k">-</span>k,d[<span class="pl-c1">1</span>]<span class="pl-k">=</span>p(a.min,c<span class="pl-k">-</span>k),b<span class="pl-k">=</span>Ca(d))}<span class="pl-v">this</span>.min<span class="pl-k">=</span>b;<span class="pl-v">this</span>.max<span class="pl-k">=</span>c},<span class="pl-en">setAxisTranslation</span>:<span class="pl-st">function</span>(<span class="pl-vpf">a</span>){<span class="pl-s">var</span> b<span class="pl-k">=</span><span class="pl-v">this</span>,c<span class="pl-k">=</span>b.max<span class="pl-k">-</span>b.min,d<span class="pl-k">=</span>b.axisPointRange<span class="pl-k">||</span><span class="pl-c1">0</span>,e,f<span class="pl-k">=</span><span class="pl-c1">0</span>,g<span class="pl-k">=</span><span class="pl-c1">0</span>,h<span class="pl-k">=</span>b.linkedParent,i<span class="pl-k">=!!</span>b.categories,j<span class="pl-k">=</span>b.transA;<span class="pl-k">if</span>(b.isXAxis<span class="pl-k">||</span>i<span class="pl-k">||</span>d)h<span class="pl-k">?</span>(f<span class="pl-k">=</span>h.minPointOffset,g<span class="pl-k">=</span>h.pointRangePadding)<span class="pl-k">:</span>q(b.series,<span class="pl-st">function</span>(<span class="pl-vpf">a</span>){<span class="pl-s">var</span> h<span class="pl-k">=</span>i<span class="pl-k">?</span><span class="pl-c1">1</span><span class="pl-k">:</span>b.isXAxis<span class="pl-k">?</span>a.pointRange<span class="pl-k">:</span>b.axisPointRange<span class="pl-k">||</span><span class="pl-c1">0</span>,j<span class="pl-k">=</span>a.<span class="pl-sc">options</span>.pointPlacement,m<span class="pl-k">=</span>a.closestPointRange;h<span class="pl-k">&gt;</span>c<span class="pl-k">&amp;&amp;</span>(h<span class="pl-k">=</span><span class="pl-c1">0</span>);d<span class="pl-k">=</span>t(d,h);f<span class="pl-k">=</span>t(f,Ga(j)<span class="pl-k">?</span></td>
      </tr>
      <tr>
        <td id="L119" class="blob-num js-line-number" data-line-number="119"></td>
        <td id="LC119" class="blob-code js-file-line"><span class="pl-c1">0</span><span class="pl-k">:</span>h/<span class="pl-c1">2</span>);g<span class="pl-k">=</span>t(g,j<span class="pl-k">===</span><span class="pl-s1"><span class="pl-pds">&quot;</span>on<span class="pl-pds">&quot;</span></span><span class="pl-k">?</span><span class="pl-c1">0</span><span class="pl-k">:</span>h);<span class="pl-k">!</span>a.noSharedTooltip<span class="pl-k">&amp;&amp;</span>s(m)<span class="pl-k">&amp;&amp;</span>(e<span class="pl-k">=</span>s(e)<span class="pl-k">?</span>L(e,m)<span class="pl-k">:</span>m)}),h<span class="pl-k">=</span>b.ordinalSlope<span class="pl-k">&amp;&amp;</span>e<span class="pl-k">?</span>b.ordinalSlope/e<span class="pl-k">:</span><span class="pl-c1">1</span>,b.minPointOffset<span class="pl-k">=</span>f<span class="pl-k">*=</span>h,b.pointRangePadding<span class="pl-k">=</span>g<span class="pl-k">*=</span>h,b.pointRange<span class="pl-k">=</span>L(d,c),b.closestPointRange<span class="pl-k">=</span>e;<span class="pl-k">if</span>(a)b.oldTransA<span class="pl-k">=</span>j;b.translationSlope<span class="pl-k">=</span>b.transA<span class="pl-k">=</span>j<span class="pl-k">=</span>b.len/(c<span class="pl-k">+</span>g<span class="pl-k">||</span><span class="pl-c1">1</span>);b.transB<span class="pl-k">=</span>b.horiz<span class="pl-k">?</span>b.<span class="pl-sc">left</span><span class="pl-k">:</span>b.<span class="pl-sc">bottom</span>;b.minPixelPadding<span class="pl-k">=</span>j<span class="pl-k">*</span>f},<span class="pl-en">setTickPositions</span>:<span class="pl-st">function</span>(<span class="pl-vpf">a</span>){<span class="pl-s">var</span> b<span class="pl-k">=</span><span class="pl-v">this</span>,c<span class="pl-k">=</span>b.chart,d<span class="pl-k">=</span>b.<span class="pl-sc">options</span>,e<span class="pl-k">=</span>d.startOnTick,f<span class="pl-k">=</span>d.endOnTick,g<span class="pl-k">=</span>b.isLog,h<span class="pl-k">=</span>b.isDatetimeAxis,i<span class="pl-k">=</span>b.isXAxis,j<span class="pl-k">=</span>b.isLinked,k<span class="pl-k">=</span>b.<span class="pl-sc">options</span>.tickPositioner,l<span class="pl-k">=</span>d.maxPadding,</td>
      </tr>
      <tr>
        <td id="L120" class="blob-num js-line-number" data-line-number="120"></td>
        <td id="LC120" class="blob-code js-file-line">n<span class="pl-k">=</span>d.minPadding,m<span class="pl-k">=</span>d.tickInterval,o<span class="pl-k">=</span>d.minTickInterval,Y<span class="pl-k">=</span>d.tickPixelInterval,D,J<span class="pl-k">=</span>b.categories;j<span class="pl-k">?</span>(b.linkedParent<span class="pl-k">=</span>c[b.coll][d.linkedTo],c<span class="pl-k">=</span>b.linkedParent.getExtremes(),b.min<span class="pl-k">=</span>p(c.min,c.dataMin),b.max<span class="pl-k">=</span>p(c.max,c.dataMax),d.<span class="pl-sc">type</span><span class="pl-k">!==</span>b.linkedParent.<span class="pl-sc">options</span>.<span class="pl-sc">type</span><span class="pl-k">&amp;&amp;</span>ha(<span class="pl-c1">11</span>,<span class="pl-c1">1</span>))<span class="pl-k">:</span>(b.min<span class="pl-k">=</span>p(b.userMin,d.min,b.dataMin),b.max<span class="pl-k">=</span>p(b.userMax,d.max,b.dataMax));<span class="pl-k">if</span>(g)<span class="pl-k">!</span>a<span class="pl-k">&amp;&amp;</span>L(b.min,p(b.dataMin,b.min))<span class="pl-k">&lt;=</span><span class="pl-c1">0</span><span class="pl-k">&amp;&amp;</span>ha(<span class="pl-c1">10</span>,<span class="pl-c1">1</span>),b.min<span class="pl-k">=</span>ea(za(b.min)),b.max<span class="pl-k">=</span>ea(za(b.max));<span class="pl-k">if</span>(b.range<span class="pl-k">&amp;&amp;</span>s(b.max))b.userMin<span class="pl-k">=</span>b.min<span class="pl-k">=</span>t(b.min,b.max<span class="pl-k">-</span>b.range),b.userMax<span class="pl-k">=</span>b.max,b.range<span class="pl-k">=</span></td>
      </tr>
      <tr>
        <td id="L121" class="blob-num js-line-number" data-line-number="121"></td>
        <td id="LC121" class="blob-code js-file-line"><span class="pl-c1">null</span>;b.beforePadding<span class="pl-k">&amp;&amp;</span>b.beforePadding();b.adjustForMinRange();<span class="pl-k">if</span>(<span class="pl-k">!</span>J<span class="pl-k">&amp;&amp;!</span>b.axisPointRange<span class="pl-k">&amp;&amp;!</span>b.usePercentage<span class="pl-k">&amp;&amp;!</span>j<span class="pl-k">&amp;&amp;</span>s(b.min)<span class="pl-k">&amp;&amp;</span>s(b.max)<span class="pl-k">&amp;&amp;</span>(c<span class="pl-k">=</span>b.max<span class="pl-k">-</span>b.min)){<span class="pl-k">if</span>(<span class="pl-k">!</span>s(d.min)<span class="pl-k">&amp;&amp;!</span>s(b.userMin)<span class="pl-k">&amp;&amp;</span>n<span class="pl-k">&amp;&amp;</span>(b.dataMin<span class="pl-k">&lt;</span><span class="pl-c1">0</span><span class="pl-k">||!</span>b.ignoreMinPadding))b.min<span class="pl-k">-=</span>c<span class="pl-k">*</span>n;<span class="pl-k">if</span>(<span class="pl-k">!</span>s(d.max)<span class="pl-k">&amp;&amp;!</span>s(b.userMax)<span class="pl-k">&amp;&amp;</span>l<span class="pl-k">&amp;&amp;</span>(b.dataMax<span class="pl-k">&gt;</span><span class="pl-c1">0</span><span class="pl-k">||!</span>b.ignoreMaxPadding))b.max<span class="pl-k">+=</span>c<span class="pl-k">*</span>l}<span class="pl-k">if</span>(ja(d.floor))b.min<span class="pl-k">=</span>t(b.min,d.floor);<span class="pl-k">if</span>(ja(d.ceiling))b.max<span class="pl-k">=</span>L(b.max,d.ceiling);b.min<span class="pl-k">===</span>b.max<span class="pl-k">||</span>b.min<span class="pl-k">===void</span> <span class="pl-c1">0</span><span class="pl-k">||</span>b.max<span class="pl-k">===void</span> <span class="pl-c1">0</span><span class="pl-k">?</span>b.tickInterval<span class="pl-k">=</span><span class="pl-c1">1</span><span class="pl-k">:</span>j<span class="pl-k">&amp;&amp;!</span>m<span class="pl-k">&amp;&amp;</span>Y<span class="pl-k">===</span>b.linkedParent.<span class="pl-sc">options</span>.tickPixelInterval<span class="pl-k">?</span>b.tickInterval<span class="pl-k">=</span></td>
      </tr>
      <tr>
        <td id="L122" class="blob-num js-line-number" data-line-number="122"></td>
        <td id="LC122" class="blob-code js-file-line">b.linkedParent.tickInterval<span class="pl-k">:</span>(b.tickInterval<span class="pl-k">=</span>p(m,J<span class="pl-k">?</span><span class="pl-c1">1</span><span class="pl-k">:</span>(b.max<span class="pl-k">-</span>b.min)<span class="pl-k">*</span>Y/t(b.len,Y)),<span class="pl-k">!</span>s(m)<span class="pl-k">&amp;&amp;</span>b.len<span class="pl-k">&lt;</span>Y<span class="pl-k">&amp;&amp;!</span><span class="pl-v">this</span>.isRadial<span class="pl-k">&amp;&amp;!</span><span class="pl-v">this</span>.isLog<span class="pl-k">&amp;&amp;!</span>J<span class="pl-k">&amp;&amp;</span>e<span class="pl-k">&amp;&amp;</span>f<span class="pl-k">&amp;&amp;</span>(D<span class="pl-k">=!</span><span class="pl-c1">0</span>,b.tickInterval<span class="pl-k">/=</span><span class="pl-c1">4</span>));i<span class="pl-k">&amp;&amp;!</span>a<span class="pl-k">&amp;&amp;</span>q(b.series,<span class="pl-st">function</span>(<span class="pl-vpf">a</span>){a.processData(b.min<span class="pl-k">!==</span>b.oldMin<span class="pl-k">||</span>b.max<span class="pl-k">!==</span>b.oldMax)});b.setAxisTranslation(<span class="pl-k">!</span><span class="pl-c1">0</span>);b.beforeSetTickPositions<span class="pl-k">&amp;&amp;</span>b.beforeSetTickPositions();<span class="pl-k">if</span>(b.postProcessTickInterval)b.tickInterval<span class="pl-k">=</span>b.postProcessTickInterval(b.tickInterval);<span class="pl-k">if</span>(b.pointRange)b.tickInterval<span class="pl-k">=</span>t(b.pointRange,b.tickInterval);<span class="pl-k">if</span>(<span class="pl-k">!</span>m<span class="pl-k">&amp;&amp;</span>b.tickInterval<span class="pl-k">&lt;</span>o)b.tickInterval<span class="pl-k">=</span></td>
      </tr>
      <tr>
        <td id="L123" class="blob-num js-line-number" data-line-number="123"></td>
        <td id="LC123" class="blob-code js-file-line">o;<span class="pl-k">if</span>(<span class="pl-k">!</span>h<span class="pl-k">&amp;&amp;!</span>g<span class="pl-k">&amp;&amp;!</span>m)b.tickInterval<span class="pl-k">=</span>nb(b.tickInterval,<span class="pl-c1">null</span>,mb(b.tickInterval),p(d.allowDecimals,<span class="pl-k">!</span>(b.tickInterval<span class="pl-k">&gt;</span><span class="pl-c1">1</span><span class="pl-k">&amp;&amp;</span>b.tickInterval<span class="pl-k">&lt;</span><span class="pl-c1">5</span><span class="pl-k">&amp;&amp;</span>b.max<span class="pl-k">&gt;</span><span class="pl-c1">1E3</span><span class="pl-k">&amp;&amp;</span>b.max<span class="pl-k">&lt;</span><span class="pl-c1">9999</span>)));b.minorTickInterval<span class="pl-k">=</span>d.minorTickInterval<span class="pl-k">===</span><span class="pl-s1"><span class="pl-pds">&quot;</span>auto<span class="pl-pds">&quot;</span></span><span class="pl-k">&amp;&amp;</span>b.tickInterval<span class="pl-k">?</span>b.tickInterval/<span class="pl-c1">5</span><span class="pl-k">:</span>d.minorTickInterval;b.tickPositions<span class="pl-k">=</span>a<span class="pl-k">=</span>d.tickPositions<span class="pl-k">?</span>[].<span class="pl-s3">concat</span>(d.tickPositions)<span class="pl-k">:</span>k<span class="pl-k">&amp;&amp;</span>k.<span class="pl-s3">apply</span>(b,[b.min,b.max]);<span class="pl-k">if</span>(<span class="pl-k">!</span>a)<span class="pl-k">!</span>b.ordinalPositions<span class="pl-k">&amp;&amp;</span>(b.max<span class="pl-k">-</span>b.min)/b.tickInterval<span class="pl-k">&gt;</span>t(<span class="pl-c1">2</span><span class="pl-k">*</span>b.len,<span class="pl-c1">200</span>)<span class="pl-k">&amp;&amp;</span>ha(<span class="pl-c1">19</span>,<span class="pl-k">!</span><span class="pl-c1">0</span>),a<span class="pl-k">=</span>h<span class="pl-k">?</span>b.getTimeTicks(b.normalizeTimeTickInterval(b.tickInterval,d.units),b.min,</td>
      </tr>
      <tr>
        <td id="L124" class="blob-num js-line-number" data-line-number="124"></td>
        <td id="LC124" class="blob-code js-file-line">b.max,d.startOfWeek,b.ordinalPositions,b.closestPointRange,<span class="pl-k">!</span><span class="pl-c1">0</span>)<span class="pl-k">:</span>g<span class="pl-k">?</span>b.getLogTickPositions(b.tickInterval,b.min,b.max)<span class="pl-k">:</span>b.getLinearTickPositions(b.tickInterval,b.min,b.max),D<span class="pl-k">&amp;&amp;</span>a.<span class="pl-s3">splice</span>(<span class="pl-c1">1</span>,a.<span class="pl-sc">length</span><span class="pl-k">-</span><span class="pl-c1">2</span>),b.tickPositions<span class="pl-k">=</span>a;<span class="pl-k">if</span>(<span class="pl-k">!</span>j)d<span class="pl-k">=</span>a[<span class="pl-c1">0</span>],g<span class="pl-k">=</span>a[a.<span class="pl-sc">length</span><span class="pl-k">-</span><span class="pl-c1">1</span>],h<span class="pl-k">=</span>b.minPointOffset<span class="pl-k">||</span><span class="pl-c1">0</span>,e<span class="pl-k">?</span>b.min<span class="pl-k">=</span>d<span class="pl-k">:</span>b.min<span class="pl-k">-</span>h<span class="pl-k">&gt;</span>d<span class="pl-k">&amp;&amp;</span>a.<span class="pl-s3">shift</span>(),f<span class="pl-k">?</span>b.max<span class="pl-k">=</span>g<span class="pl-k">:</span>b.max<span class="pl-k">+</span>h<span class="pl-k">&lt;</span>g<span class="pl-k">&amp;&amp;</span>a.<span class="pl-s3">pop</span>(),a.<span class="pl-sc">length</span><span class="pl-k">===</span><span class="pl-c1">0</span><span class="pl-k">&amp;&amp;</span>s(d)<span class="pl-k">&amp;&amp;</span>a.<span class="pl-s3">push</span>((g<span class="pl-k">+</span>d)/<span class="pl-c1">2</span>),a.<span class="pl-sc">length</span><span class="pl-k">===</span><span class="pl-c1">1</span><span class="pl-k">&amp;&amp;</span>(e<span class="pl-k">=</span>Q(b.max)<span class="pl-k">&gt;</span><span class="pl-c1">1E13</span><span class="pl-k">?</span><span class="pl-c1">1</span><span class="pl-k">:</span><span class="pl-c1">0.001</span>,b.min<span class="pl-k">-=</span>e,b.max<span class="pl-k">+=</span>e)},<span class="pl-en">setMaxTicks</span>:<span class="pl-st">function</span>(){<span class="pl-s">var</span> a<span class="pl-k">=</span><span class="pl-v">this</span>.chart,b<span class="pl-k">=</span>a.maxTicks<span class="pl-k">||</span>{},c<span class="pl-k">=</span><span class="pl-v">this</span>.tickPositions,d<span class="pl-k">=</span><span class="pl-v">this</span>._maxTicksKey<span class="pl-k">=</span></td>
      </tr>
      <tr>
        <td id="L125" class="blob-num js-line-number" data-line-number="125"></td>
        <td id="LC125" class="blob-code js-file-line">[<span class="pl-v">this</span>.coll,<span class="pl-v">this</span>.pos,<span class="pl-v">this</span>.len].<span class="pl-s3">join</span>(<span class="pl-s1"><span class="pl-pds">&quot;</span>-<span class="pl-pds">&quot;</span></span>);<span class="pl-k">if</span>(<span class="pl-k">!</span><span class="pl-v">this</span>.isLinked<span class="pl-k">&amp;&amp;!</span><span class="pl-v">this</span>.isDatetimeAxis<span class="pl-k">&amp;&amp;</span>c<span class="pl-k">&amp;&amp;</span>c.<span class="pl-sc">length</span><span class="pl-k">&gt;</span>(b[d]<span class="pl-k">||</span><span class="pl-c1">0</span>)<span class="pl-k">&amp;&amp;</span><span class="pl-v">this</span>.<span class="pl-sc">options</span>.alignTicks<span class="pl-k">!==!</span><span class="pl-c1">1</span>)b[d]<span class="pl-k">=</span>c.<span class="pl-sc">length</span>;a.maxTicks<span class="pl-k">=</span>b},<span class="pl-en">adjustTickAmount</span>:<span class="pl-st">function</span>(){<span class="pl-s">var</span> a<span class="pl-k">=</span><span class="pl-v">this</span>._maxTicksKey,b<span class="pl-k">=</span><span class="pl-v">this</span>.tickPositions,c<span class="pl-k">=</span><span class="pl-v">this</span>.chart.maxTicks;<span class="pl-k">if</span>(c<span class="pl-k">&amp;&amp;</span>c[a]<span class="pl-k">&amp;&amp;!</span><span class="pl-v">this</span>.isDatetimeAxis<span class="pl-k">&amp;&amp;!</span><span class="pl-v">this</span>.categories<span class="pl-k">&amp;&amp;!</span><span class="pl-v">this</span>.isLinked<span class="pl-k">&amp;&amp;</span><span class="pl-v">this</span>.<span class="pl-sc">options</span>.alignTicks<span class="pl-k">!==!</span><span class="pl-c1">1</span><span class="pl-k">&amp;&amp;</span><span class="pl-v">this</span>.min<span class="pl-k">!==</span>u){<span class="pl-s">var</span> d<span class="pl-k">=</span><span class="pl-v">this</span>.tickAmount,e<span class="pl-k">=</span>b.<span class="pl-sc">length</span>;<span class="pl-v">this</span>.tickAmount<span class="pl-k">=</span>a<span class="pl-k">=</span>c[a];<span class="pl-k">if</span>(e<span class="pl-k">&lt;</span>a){<span class="pl-k">for</span>(;b.<span class="pl-sc">length</span><span class="pl-k">&lt;</span>a;)b.<span class="pl-s3">push</span>(ea(b[b.<span class="pl-sc">length</span><span class="pl-k">-</span><span class="pl-c1">1</span>]<span class="pl-k">+</span><span class="pl-v">this</span>.tickInterval));<span class="pl-v">this</span>.transA<span class="pl-k">*=</span></td>
      </tr>
      <tr>
        <td id="L126" class="blob-num js-line-number" data-line-number="126"></td>
        <td id="LC126" class="blob-code js-file-line">(e<span class="pl-k">-</span><span class="pl-c1">1</span>)/(a<span class="pl-k">-</span><span class="pl-c1">1</span>);<span class="pl-v">this</span>.max<span class="pl-k">=</span>b[b.<span class="pl-sc">length</span><span class="pl-k">-</span><span class="pl-c1">1</span>]}<span class="pl-k">if</span>(s(d)<span class="pl-k">&amp;&amp;</span>a<span class="pl-k">!==</span>d)<span class="pl-v">this</span>.isDirty<span class="pl-k">=!</span><span class="pl-c1">0</span>}},<span class="pl-en">setScale</span>:<span class="pl-st">function</span>(){<span class="pl-s">var</span> a<span class="pl-k">=</span><span class="pl-v">this</span>.stacks,b,c,d,e;<span class="pl-v">this</span>.oldMin<span class="pl-k">=</span><span class="pl-v">this</span>.min;<span class="pl-v">this</span>.oldMax<span class="pl-k">=</span><span class="pl-v">this</span>.max;<span class="pl-v">this</span>.oldAxisLength<span class="pl-k">=</span><span class="pl-v">this</span>.len;<span class="pl-v">this</span>.setAxisSize();e<span class="pl-k">=</span><span class="pl-v">this</span>.len<span class="pl-k">!==</span><span class="pl-v">this</span>.oldAxisLength;q(<span class="pl-v">this</span>.series,<span class="pl-st">function</span>(<span class="pl-vpf">a</span>){<span class="pl-k">if</span>(a.isDirtyData<span class="pl-k">||</span>a.isDirty<span class="pl-k">||</span>a.xAxis.isDirty)d<span class="pl-k">=!</span><span class="pl-c1">0</span>});<span class="pl-k">if</span>(e<span class="pl-k">||</span>d<span class="pl-k">||</span><span class="pl-v">this</span>.isLinked<span class="pl-k">||</span><span class="pl-v">this</span>.forceRedraw<span class="pl-k">||</span><span class="pl-v">this</span>.userMin<span class="pl-k">!==</span><span class="pl-v">this</span>.oldUserMin<span class="pl-k">||</span><span class="pl-v">this</span>.userMax<span class="pl-k">!==</span><span class="pl-v">this</span>.oldUserMax){<span class="pl-k">if</span>(<span class="pl-k">!</span><span class="pl-v">this</span>.isXAxis)<span class="pl-k">for</span>(b <span class="pl-k">in</span> a)<span class="pl-k">for</span>(c <span class="pl-k">in</span> a[b])a[b][c].total<span class="pl-k">=</span><span class="pl-c1">null</span>,a[b][c].cum<span class="pl-k">=</span><span class="pl-c1">0</span>;<span class="pl-v">this</span>.forceRedraw<span class="pl-k">=</span></td>
      </tr>
      <tr>
        <td id="L127" class="blob-num js-line-number" data-line-number="127"></td>
        <td id="LC127" class="blob-code js-file-line"><span class="pl-k">!</span><span class="pl-c1">1</span>;<span class="pl-v">this</span>.getSeriesExtremes();<span class="pl-v">this</span>.setTickPositions();<span class="pl-v">this</span>.oldUserMin<span class="pl-k">=</span><span class="pl-v">this</span>.userMin;<span class="pl-v">this</span>.oldUserMax<span class="pl-k">=</span><span class="pl-v">this</span>.userMax;<span class="pl-k">if</span>(<span class="pl-k">!</span><span class="pl-v">this</span>.isDirty)<span class="pl-v">this</span>.isDirty<span class="pl-k">=</span>e<span class="pl-k">||</span><span class="pl-v">this</span>.min<span class="pl-k">!==</span><span class="pl-v">this</span>.oldMin<span class="pl-k">||</span><span class="pl-v">this</span>.max<span class="pl-k">!==</span><span class="pl-v">this</span>.oldMax}<span class="pl-k">else</span> <span class="pl-k">if</span>(<span class="pl-k">!</span><span class="pl-v">this</span>.isXAxis){<span class="pl-k">if</span>(<span class="pl-v">this</span>.oldStacks)a<span class="pl-k">=</span><span class="pl-v">this</span>.stacks<span class="pl-k">=</span><span class="pl-v">this</span>.oldStacks;<span class="pl-k">for</span>(b <span class="pl-k">in</span> a)<span class="pl-k">for</span>(c <span class="pl-k">in</span> a[b])a[b][c].cum<span class="pl-k">=</span>a[b][c].total}<span class="pl-v">this</span>.setMaxTicks()},<span class="pl-en">setExtremes</span>:<span class="pl-st">function</span>(<span class="pl-vpf">a</span>,<span class="pl-vpf">b</span>,<span class="pl-vpf">c</span>,<span class="pl-vpf">d</span>,<span class="pl-vpf">e</span>){<span class="pl-s">var</span> f<span class="pl-k">=</span><span class="pl-v">this</span>,g<span class="pl-k">=</span>f.chart,c<span class="pl-k">=</span>p(c,<span class="pl-k">!</span><span class="pl-c1">0</span>),e<span class="pl-k">=</span>r(e,{min<span class="pl-k">:</span>a,max<span class="pl-k">:</span>b});I(f,<span class="pl-s1"><span class="pl-pds">&quot;</span>setExtremes<span class="pl-pds">&quot;</span></span>,e,<span class="pl-st">function</span>(){f.userMin<span class="pl-k">=</span>a;f.userMax<span class="pl-k">=</span>b;f.eventArgs<span class="pl-k">=</span>e;f.isDirtyExtremes<span class="pl-k">=</span></td>
      </tr>
      <tr>
        <td id="L128" class="blob-num js-line-number" data-line-number="128"></td>
        <td id="LC128" class="blob-code js-file-line"><span class="pl-k">!</span><span class="pl-c1">0</span>;c<span class="pl-k">&amp;&amp;</span>g.redraw(d)})},<span class="pl-en">zoom</span>:<span class="pl-st">function</span>(<span class="pl-vpf">a</span>,<span class="pl-vpf">b</span>){<span class="pl-s">var</span> c<span class="pl-k">=</span><span class="pl-v">this</span>.dataMin,d<span class="pl-k">=</span><span class="pl-v">this</span>.dataMax,e<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-sc">options</span>;<span class="pl-v">this</span>.allowZoomOutside<span class="pl-k">||</span>(s(c)<span class="pl-k">&amp;&amp;</span>a<span class="pl-k">&lt;=</span>L(c,p(e.min,c))<span class="pl-k">&amp;&amp;</span>(a<span class="pl-k">=</span>u),s(d)<span class="pl-k">&amp;&amp;</span>b<span class="pl-k">&gt;=</span>t(d,p(e.max,d))<span class="pl-k">&amp;&amp;</span>(b<span class="pl-k">=</span>u));<span class="pl-v">this</span>.displayBtn<span class="pl-k">=</span>a<span class="pl-k">!==</span>u<span class="pl-k">||</span>b<span class="pl-k">!==</span>u;<span class="pl-v">this</span>.setExtremes(a,b,<span class="pl-k">!</span><span class="pl-c1">1</span>,u,{trigger<span class="pl-k">:</span><span class="pl-s1"><span class="pl-pds">&quot;</span>zoom<span class="pl-pds">&quot;</span></span>});<span class="pl-k">return</span><span class="pl-k">!</span><span class="pl-c1">0</span>},<span class="pl-en">setAxisSize</span>:<span class="pl-st">function</span>(){<span class="pl-s">var</span> a<span class="pl-k">=</span><span class="pl-v">this</span>.chart,b<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-sc">options</span>,c<span class="pl-k">=</span>b.offsetLeft<span class="pl-k">||</span><span class="pl-c1">0</span>,d<span class="pl-k">=</span><span class="pl-v">this</span>.horiz,e<span class="pl-k">=</span>p(b.<span class="pl-sc">width</span>,a.plotWidth<span class="pl-k">-</span>c<span class="pl-k">+</span>(b.offsetRight<span class="pl-k">||</span><span class="pl-c1">0</span>)),f<span class="pl-k">=</span>p(b.<span class="pl-sc">height</span>,a.plotHeight),g<span class="pl-k">=</span>p(b.<span class="pl-sc">top</span>,a.plotTop),b<span class="pl-k">=</span>p(b.<span class="pl-sc">left</span>,a.plotLeft<span class="pl-k">+</span>c),c<span class="pl-k">=</span><span class="pl-sr"><span class="pl-pds">/</span>%<span class="pl-k">$</span><span class="pl-pds">/</span></span>;c.<span class="pl-s3">test</span>(f)<span class="pl-k">&amp;&amp;</span>(f<span class="pl-k">=</span><span class="pl-s3">parseInt</span>(f,<span class="pl-c1">10</span>)/</td>
      </tr>
      <tr>
        <td id="L129" class="blob-num js-line-number" data-line-number="129"></td>
        <td id="LC129" class="blob-code js-file-line"><span class="pl-c1">100</span><span class="pl-k">*</span>a.plotHeight);c.<span class="pl-s3">test</span>(g)<span class="pl-k">&amp;&amp;</span>(g<span class="pl-k">=</span><span class="pl-s3">parseInt</span>(g,<span class="pl-c1">10</span>)/<span class="pl-c1">100</span><span class="pl-k">*</span>a.plotHeight<span class="pl-k">+</span>a.plotTop);<span class="pl-v">this</span>.<span class="pl-sc">left</span><span class="pl-k">=</span>b;<span class="pl-v">this</span>.<span class="pl-sc">top</span><span class="pl-k">=</span>g;<span class="pl-v">this</span>.<span class="pl-sc">width</span><span class="pl-k">=</span>e;<span class="pl-v">this</span>.<span class="pl-sc">height</span><span class="pl-k">=</span>f;<span class="pl-v">this</span>.<span class="pl-sc">bottom</span><span class="pl-k">=</span>a.chartHeight<span class="pl-k">-</span>f<span class="pl-k">-</span>g;<span class="pl-v">this</span>.<span class="pl-sc">right</span><span class="pl-k">=</span>a.chartWidth<span class="pl-k">-</span>e<span class="pl-k">-</span>b;<span class="pl-v">this</span>.len<span class="pl-k">=</span>t(d<span class="pl-k">?</span>e<span class="pl-k">:</span>f,<span class="pl-c1">0</span>);<span class="pl-v">this</span>.pos<span class="pl-k">=</span>d<span class="pl-k">?</span>b<span class="pl-k">:</span>g},<span class="pl-en">getExtremes</span>:<span class="pl-st">function</span>(){<span class="pl-s">var</span> a<span class="pl-k">=</span><span class="pl-v">this</span>.isLog;<span class="pl-k">return</span>{min<span class="pl-k">:</span>a<span class="pl-k">?</span>ea(ka(<span class="pl-v">this</span>.min))<span class="pl-k">:</span><span class="pl-v">this</span>.min,max<span class="pl-k">:</span>a<span class="pl-k">?</span>ea(ka(<span class="pl-v">this</span>.max))<span class="pl-k">:</span><span class="pl-v">this</span>.max,dataMin<span class="pl-k">:</span><span class="pl-v">this</span>.dataMin,dataMax<span class="pl-k">:</span><span class="pl-v">this</span>.dataMax,userMin<span class="pl-k">:</span><span class="pl-v">this</span>.userMin,userMax<span class="pl-k">:</span><span class="pl-v">this</span>.userMax}},<span class="pl-en">getThreshold</span>:<span class="pl-st">function</span>(<span class="pl-vpf">a</span>){<span class="pl-s">var</span> b<span class="pl-k">=</span><span class="pl-v">this</span>.isLog,c<span class="pl-k">=</span>b<span class="pl-k">?</span>ka(<span class="pl-v">this</span>.min)<span class="pl-k">:</span><span class="pl-v">this</span>.min,b<span class="pl-k">=</span>b<span class="pl-k">?</span>ka(<span class="pl-v">this</span>.max)<span class="pl-k">:</span></td>
      </tr>
      <tr>
        <td id="L130" class="blob-num js-line-number" data-line-number="130"></td>
        <td id="LC130" class="blob-code js-file-line"><span class="pl-v">this</span>.max;c<span class="pl-k">&gt;</span>a<span class="pl-k">||</span>a<span class="pl-k">===</span><span class="pl-c1">null</span><span class="pl-k">?</span>a<span class="pl-k">=</span>c<span class="pl-k">:</span>b<span class="pl-k">&lt;</span>a<span class="pl-k">&amp;&amp;</span>(a<span class="pl-k">=</span>b);<span class="pl-k">return</span> <span class="pl-v">this</span>.translate(a,<span class="pl-c1">0</span>,<span class="pl-c1">1</span>,<span class="pl-c1">0</span>,<span class="pl-c1">1</span>)},<span class="pl-en">autoLabelAlign</span>:<span class="pl-st">function</span>(<span class="pl-vpf">a</span>){a<span class="pl-k">=</span>(p(a,<span class="pl-c1">0</span>)<span class="pl-k">-</span><span class="pl-v">this</span>.side<span class="pl-k">*</span><span class="pl-c1">90</span><span class="pl-k">+</span><span class="pl-c1">720</span>)<span class="pl-k">%</span><span class="pl-c1">360</span>;<span class="pl-k">return</span> a<span class="pl-k">&gt;</span><span class="pl-c1">15</span><span class="pl-k">&amp;&amp;</span>a<span class="pl-k">&lt;</span><span class="pl-c1">165</span><span class="pl-k">?</span><span class="pl-s1"><span class="pl-pds">&quot;</span>right<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span>a<span class="pl-k">&gt;</span><span class="pl-c1">195</span><span class="pl-k">&amp;&amp;</span>a<span class="pl-k">&lt;</span><span class="pl-c1">345</span><span class="pl-k">?</span><span class="pl-s1"><span class="pl-pds">&quot;</span>left<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s1"><span class="pl-pds">&quot;</span>center<span class="pl-pds">&quot;</span></span>},<span class="pl-en">getOffset</span>:<span class="pl-st">function</span>(){<span class="pl-s">var</span> a<span class="pl-k">=</span><span class="pl-v">this</span>,b<span class="pl-k">=</span>a.chart,c<span class="pl-k">=</span>b.renderer,d<span class="pl-k">=</span>a.<span class="pl-sc">options</span>,e<span class="pl-k">=</span>a.tickPositions,f<span class="pl-k">=</span>a.ticks,g<span class="pl-k">=</span>a.horiz,h<span class="pl-k">=</span>a.side,i<span class="pl-k">=</span>b.inverted<span class="pl-k">?</span>[<span class="pl-c1">1</span>,<span class="pl-c1">0</span>,<span class="pl-c1">3</span>,<span class="pl-c1">2</span>][h]<span class="pl-k">:</span>h,j,k,l<span class="pl-k">=</span><span class="pl-c1">0</span>,n,m<span class="pl-k">=</span><span class="pl-c1">0</span>,o<span class="pl-k">=</span>d.<span class="pl-sc">title</span>,Y<span class="pl-k">=</span>d.labels,D<span class="pl-k">=</span><span class="pl-c1">0</span>,J<span class="pl-k">=</span>b.axisOffset,b<span class="pl-k">=</span>b.clipOffset,C<span class="pl-k">=</span>[<span class="pl-k">-</span><span class="pl-c1">1</span>,<span class="pl-c1">1</span>,<span class="pl-c1">1</span>,<span class="pl-k">-</span><span class="pl-c1">1</span>][h],r,v<span class="pl-k">=</span><span class="pl-c1">1</span>,w<span class="pl-k">=</span>p(Y.maxStaggerLines,<span class="pl-c1">5</span>),x,y,A,z,R;a.hasData<span class="pl-k">=</span>j<span class="pl-k">=</span>a.hasVisibleSeries<span class="pl-k">||</span>s(a.min)<span class="pl-k">&amp;&amp;</span>s(a.max)<span class="pl-k">&amp;&amp;</span></td>
      </tr>
      <tr>
        <td id="L131" class="blob-num js-line-number" data-line-number="131"></td>
        <td id="LC131" class="blob-code js-file-line"><span class="pl-k">!!</span>e;a.showAxis<span class="pl-k">=</span>k<span class="pl-k">=</span>j<span class="pl-k">||</span>p(d.showEmpty,<span class="pl-k">!</span><span class="pl-c1">0</span>);a.staggerLines<span class="pl-k">=</span>a.horiz<span class="pl-k">&amp;&amp;</span>Y.staggerLines;<span class="pl-k">if</span>(<span class="pl-k">!</span>a.axisGroup)a.gridGroup<span class="pl-k">=</span>c.g(<span class="pl-s1"><span class="pl-pds">&quot;</span>grid<span class="pl-pds">&quot;</span></span>).attr({zIndex<span class="pl-k">:</span>d.gridZIndex<span class="pl-k">||</span><span class="pl-c1">1</span>}).<span class="pl-s3">add</span>(),a.axisGroup<span class="pl-k">=</span>c.g(<span class="pl-s1"><span class="pl-pds">&quot;</span>axis<span class="pl-pds">&quot;</span></span>).attr({zIndex<span class="pl-k">:</span>d.<span class="pl-sc">zIndex</span><span class="pl-k">||</span><span class="pl-c1">2</span>}).<span class="pl-s3">add</span>(),a.labelGroup<span class="pl-k">=</span>c.g(<span class="pl-s1"><span class="pl-pds">&quot;</span>axis-labels<span class="pl-pds">&quot;</span></span>).attr({zIndex<span class="pl-k">:</span>Y.<span class="pl-sc">zIndex</span><span class="pl-k">||</span><span class="pl-c1">7</span>}).addClass(<span class="pl-s1"><span class="pl-pds">&quot;</span>highcharts-<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>a.coll.<span class="pl-s3">toLowerCase</span>()<span class="pl-k">+</span><span class="pl-s1"><span class="pl-pds">&quot;</span>-labels<span class="pl-pds">&quot;</span></span>).<span class="pl-s3">add</span>();<span class="pl-k">if</span>(j<span class="pl-k">||</span>a.isLinked){a.labelAlign<span class="pl-k">=</span>p(Y.<span class="pl-sc">align</span><span class="pl-k">||</span>a.autoLabelAlign(Y.rotation));q(e,<span class="pl-st">function</span>(<span class="pl-vpf">b</span>){f[b]<span class="pl-k">?</span>f[b].addLabel()<span class="pl-k">:</span>f[b]<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">Ta</span>(a,b)});<span class="pl-k">if</span>(a.horiz<span class="pl-k">&amp;&amp;!</span>a.staggerLines<span class="pl-k">&amp;&amp;</span>w<span class="pl-k">&amp;&amp;!</span>Y.rotation){<span class="pl-k">for</span>(j<span class="pl-k">=</span></td>
      </tr>
      <tr>
        <td id="L132" class="blob-num js-line-number" data-line-number="132"></td>
        <td id="LC132" class="blob-code js-file-line">a.reversed<span class="pl-k">?</span>[].<span class="pl-s3">concat</span>(e).<span class="pl-s3">reverse</span>()<span class="pl-k">:</span>e;v<span class="pl-k">&lt;</span>w;){x<span class="pl-k">=</span>[];y<span class="pl-k">=!</span><span class="pl-c1">1</span>;<span class="pl-k">for</span>(r<span class="pl-k">=</span><span class="pl-c1">0</span>;r<span class="pl-k">&lt;</span>j.<span class="pl-sc">length</span>;r<span class="pl-k">++</span>)A<span class="pl-k">=</span>j[r],z<span class="pl-k">=</span>(z<span class="pl-k">=</span>f[A].<span class="pl-sc">label</span><span class="pl-k">&amp;&amp;</span>f[A].<span class="pl-sc">label</span>.getBBox())<span class="pl-k">?</span>z.<span class="pl-sc">width</span><span class="pl-k">:</span><span class="pl-c1">0</span>,R<span class="pl-k">=</span>r<span class="pl-k">%</span>v,z<span class="pl-k">&amp;&amp;</span>(A<span class="pl-k">=</span>a.translate(A),x[R]<span class="pl-k">!==</span>u<span class="pl-k">&amp;&amp;</span>A<span class="pl-k">&lt;</span>x[R]<span class="pl-k">&amp;&amp;</span>(y<span class="pl-k">=!</span><span class="pl-c1">0</span>),x[R]<span class="pl-k">=</span>A<span class="pl-k">+</span>z);<span class="pl-k">if</span>(y)v<span class="pl-k">++</span>;<span class="pl-k">else</span> <span class="pl-k">break</span>}<span class="pl-k">if</span>(v<span class="pl-k">&gt;</span><span class="pl-c1">1</span>)a.staggerLines<span class="pl-k">=</span>v}q(e,<span class="pl-st">function</span>(<span class="pl-vpf">b</span>){<span class="pl-k">if</span>(h<span class="pl-k">===</span><span class="pl-c1">0</span><span class="pl-k">||</span>h<span class="pl-k">===</span><span class="pl-c1">2</span><span class="pl-k">||</span>{<span class="pl-c1">1</span><span class="pl-k">:</span><span class="pl-s1"><span class="pl-pds">&quot;</span>left<span class="pl-pds">&quot;</span></span>,<span class="pl-c1">3</span><span class="pl-k">:</span><span class="pl-s1"><span class="pl-pds">&quot;</span>right<span class="pl-pds">&quot;</span></span>}[h]<span class="pl-k">===</span>a.labelAlign)D<span class="pl-k">=</span>t(f[b].getLabelSize(),D)});<span class="pl-k">if</span>(a.staggerLines)D<span class="pl-k">*=</span>a.staggerLines,a.labelOffset<span class="pl-k">=</span>D}<span class="pl-k">else</span> <span class="pl-k">for</span>(r <span class="pl-k">in</span> f)f[r].destroy(),<span class="pl-k">delete</span> f[r];<span class="pl-k">if</span>(o<span class="pl-k">&amp;&amp;</span>o.<span class="pl-sc">text</span><span class="pl-k">&amp;&amp;</span>o.enabled<span class="pl-k">!==!</span><span class="pl-c1">1</span>){<span class="pl-k">if</span>(<span class="pl-k">!</span>a.axisTitle)a.axisTitle<span class="pl-k">=</span>c.<span class="pl-sc">text</span>(o.<span class="pl-sc">text</span>,</td>
      </tr>
      <tr>
        <td id="L133" class="blob-num js-line-number" data-line-number="133"></td>
        <td id="LC133" class="blob-code js-file-line"><span class="pl-c1">0</span>,<span class="pl-c1">0</span>,o.useHTML).attr({zIndex<span class="pl-k">:</span><span class="pl-c1">7</span>,rotation<span class="pl-k">:</span>o.rotation<span class="pl-k">||</span><span class="pl-c1">0</span>,align<span class="pl-k">:</span>o.<span class="pl-sc">textAlign</span><span class="pl-k">||</span>{low<span class="pl-k">:</span><span class="pl-s1"><span class="pl-pds">&quot;</span>left<span class="pl-pds">&quot;</span></span>,middle<span class="pl-k">:</span><span class="pl-s1"><span class="pl-pds">&quot;</span>center<span class="pl-pds">&quot;</span></span>,high<span class="pl-k">:</span><span class="pl-s1"><span class="pl-pds">&quot;</span>right<span class="pl-pds">&quot;</span></span>}[o.<span class="pl-sc">align</span>]}).addClass(<span class="pl-s1"><span class="pl-pds">&quot;</span>highcharts-<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span><span class="pl-v">this</span>.coll.<span class="pl-s3">toLowerCase</span>()<span class="pl-k">+</span><span class="pl-s1"><span class="pl-pds">&quot;</span>-title<span class="pl-pds">&quot;</span></span>).css(o.<span class="pl-sc">style</span>).<span class="pl-s3">add</span>(a.axisGroup),a.axisTitle.isNew<span class="pl-k">=!</span><span class="pl-c1">0</span>;<span class="pl-k">if</span>(k)l<span class="pl-k">=</span>a.axisTitle.getBBox()[g<span class="pl-k">?</span><span class="pl-s1"><span class="pl-pds">&quot;</span>height<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s1"><span class="pl-pds">&quot;</span>width<span class="pl-pds">&quot;</span></span>],n<span class="pl-k">=</span>o.offset,m<span class="pl-k">=</span>s(n)<span class="pl-k">?</span><span class="pl-c1">0</span><span class="pl-k">:</span>p(o.margin,g<span class="pl-k">?</span><span class="pl-c1">5</span><span class="pl-k">:</span><span class="pl-c1">10</span>);a.axisTitle[k<span class="pl-k">?</span><span class="pl-s1"><span class="pl-pds">&quot;</span>show<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s1"><span class="pl-pds">&quot;</span>hide<span class="pl-pds">&quot;</span></span>]()}a.offset<span class="pl-k">=</span>C<span class="pl-k">*</span>p(d.offset,J[h]);c<span class="pl-k">=</span>h<span class="pl-k">===</span><span class="pl-c1">2</span><span class="pl-k">?</span>a.tickBaseline<span class="pl-k">:</span><span class="pl-c1">0</span>;g<span class="pl-k">=</span>D<span class="pl-k">+</span>m<span class="pl-k">+</span>(D<span class="pl-k">&amp;&amp;</span>C<span class="pl-k">*</span>(g<span class="pl-k">?</span>p(Y.<span class="pl-sc">y</span>,a.tickBaseline<span class="pl-k">+</span><span class="pl-c1">8</span>)<span class="pl-k">:</span>Y.<span class="pl-sc">x</span>)<span class="pl-k">-</span>c);a.axisTitleMargin<span class="pl-k">=</span>p(n,g);J[h]<span class="pl-k">=</span>t(J[h],a.axisTitleMargin<span class="pl-k">+</span></td>
      </tr>
      <tr>
        <td id="L134" class="blob-num js-line-number" data-line-number="134"></td>
        <td id="LC134" class="blob-code js-file-line">l<span class="pl-k">+</span>C<span class="pl-k">*</span>a.offset,g);b[i]<span class="pl-k">=</span>t(b[i],U(d.lineWidth/<span class="pl-c1">2</span>)<span class="pl-k">*</span><span class="pl-c1">2</span>)},<span class="pl-en">getLinePath</span>:<span class="pl-st">function</span>(<span class="pl-vpf">a</span>){<span class="pl-s">var</span> b<span class="pl-k">=</span><span class="pl-v">this</span>.chart,c<span class="pl-k">=</span><span class="pl-v">this</span>.opposite,d<span class="pl-k">=</span><span class="pl-v">this</span>.offset,e<span class="pl-k">=</span><span class="pl-v">this</span>.horiz,f<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-sc">left</span><span class="pl-k">+</span>(c<span class="pl-k">?</span><span class="pl-v">this</span>.<span class="pl-sc">width</span><span class="pl-k">:</span><span class="pl-c1">0</span>)<span class="pl-k">+</span>d,d<span class="pl-k">=</span>b.chartHeight<span class="pl-k">-</span><span class="pl-v">this</span>.<span class="pl-sc">bottom</span><span class="pl-k">-</span>(c<span class="pl-k">?</span><span class="pl-v">this</span>.<span class="pl-sc">height</span><span class="pl-k">:</span><span class="pl-c1">0</span>)<span class="pl-k">+</span>d;c<span class="pl-k">&amp;&amp;</span>(a<span class="pl-k">*=-</span><span class="pl-c1">1</span>);<span class="pl-k">return</span> b.renderer.crispLine([<span class="pl-s1"><span class="pl-pds">&quot;</span>M<span class="pl-pds">&quot;</span></span>,e<span class="pl-k">?</span><span class="pl-v">this</span>.<span class="pl-sc">left</span><span class="pl-k">:</span>f,e<span class="pl-k">?</span>d<span class="pl-k">:</span><span class="pl-v">this</span>.<span class="pl-sc">top</span>,<span class="pl-s1"><span class="pl-pds">&quot;</span>L<span class="pl-pds">&quot;</span></span>,e<span class="pl-k">?</span>b.chartWidth<span class="pl-k">-</span><span class="pl-v">this</span>.<span class="pl-sc">right</span><span class="pl-k">:</span>f,e<span class="pl-k">?</span>d<span class="pl-k">:</span>b.chartHeight<span class="pl-k">-</span><span class="pl-v">this</span>.<span class="pl-sc">bottom</span>],a)},<span class="pl-en">getTitlePosition</span>:<span class="pl-st">function</span>(){<span class="pl-s">var</span> a<span class="pl-k">=</span><span class="pl-v">this</span>.horiz,b<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-sc">left</span>,c<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-sc">top</span>,d<span class="pl-k">=</span><span class="pl-v">this</span>.len,e<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-sc">options</span>.<span class="pl-sc">title</span>,f<span class="pl-k">=</span>a<span class="pl-k">?</span>b<span class="pl-k">:</span>c,g<span class="pl-k">=</span><span class="pl-v">this</span>.opposite,h<span class="pl-k">=</span><span class="pl-v">this</span>.offset,i<span class="pl-k">=</span>y(e.<span class="pl-sc">style</span>.<span class="pl-sc">fontSize</span><span class="pl-k">||</span></td>
      </tr>
      <tr>
        <td id="L135" class="blob-num js-line-number" data-line-number="135"></td>
        <td id="LC135" class="blob-code js-file-line"><span class="pl-c1">12</span>),d<span class="pl-k">=</span>{low<span class="pl-k">:</span>f<span class="pl-k">+</span>(a<span class="pl-k">?</span><span class="pl-c1">0</span><span class="pl-k">:</span>d),middle<span class="pl-k">:</span>f<span class="pl-k">+</span>d/<span class="pl-c1">2</span>,high<span class="pl-k">:</span>f<span class="pl-k">+</span>(a<span class="pl-k">?</span>d<span class="pl-k">:</span><span class="pl-c1">0</span>)}[e.<span class="pl-sc">align</span>],b<span class="pl-k">=</span>(a<span class="pl-k">?</span>c<span class="pl-k">+</span><span class="pl-v">this</span>.<span class="pl-sc">height</span><span class="pl-k">:</span>b)<span class="pl-k">+</span>(a<span class="pl-k">?</span><span class="pl-c1">1</span><span class="pl-k">:-</span><span class="pl-c1">1</span>)<span class="pl-k">*</span>(g<span class="pl-k">?-</span><span class="pl-c1">1</span><span class="pl-k">:</span><span class="pl-c1">1</span>)<span class="pl-k">*</span><span class="pl-v">this</span>.axisTitleMargin<span class="pl-k">+</span>(<span class="pl-v">this</span>.side<span class="pl-k">===</span><span class="pl-c1">2</span><span class="pl-k">?</span>i<span class="pl-k">:</span><span class="pl-c1">0</span>);<span class="pl-k">return</span>{x<span class="pl-k">:</span>a<span class="pl-k">?</span>d<span class="pl-k">:</span>b<span class="pl-k">+</span>(g<span class="pl-k">?</span><span class="pl-v">this</span>.<span class="pl-sc">width</span><span class="pl-k">:</span><span class="pl-c1">0</span>)<span class="pl-k">+</span>h<span class="pl-k">+</span>(e.<span class="pl-sc">x</span><span class="pl-k">||</span><span class="pl-c1">0</span>),y<span class="pl-k">:</span>a<span class="pl-k">?</span>b<span class="pl-k">-</span>(g<span class="pl-k">?</span><span class="pl-v">this</span>.<span class="pl-sc">height</span><span class="pl-k">:</span><span class="pl-c1">0</span>)<span class="pl-k">+</span>h<span class="pl-k">:</span>d<span class="pl-k">+</span>(e.<span class="pl-sc">y</span><span class="pl-k">||</span><span class="pl-c1">0</span>)}},<span class="pl-en">render</span>:<span class="pl-st">function</span>(){<span class="pl-s">var</span> a<span class="pl-k">=</span><span class="pl-v">this</span>,b<span class="pl-k">=</span>a.horiz,c<span class="pl-k">=</span>a.reversed,d<span class="pl-k">=</span>a.chart,e<span class="pl-k">=</span>d.renderer,f<span class="pl-k">=</span>a.<span class="pl-sc">options</span>,g<span class="pl-k">=</span>a.isLog,h<span class="pl-k">=</span>a.isLinked,i<span class="pl-k">=</span>a.tickPositions,j,k<span class="pl-k">=</span>a.axisTitle,l<span class="pl-k">=</span>a.ticks,n<span class="pl-k">=</span>a.minorTicks,m<span class="pl-k">=</span>a.alternateBands,o<span class="pl-k">=</span>f.stackLabels,p<span class="pl-k">=</span>f.alternateGridColor,D<span class="pl-k">=</span>a.tickmarkOffset,J<span class="pl-k">=</span>f.lineWidth,C<span class="pl-k">=</span>d.hasRendered<span class="pl-k">&amp;&amp;</span>s(a.oldMin)<span class="pl-k">&amp;&amp;</span></td>
      </tr>
      <tr>
        <td id="L136" class="blob-num js-line-number" data-line-number="136"></td>
        <td id="LC136" class="blob-code js-file-line"><span class="pl-k">!</span><span class="pl-s3">isNaN</span>(a.oldMin),r<span class="pl-k">=</span>a.hasData,t<span class="pl-k">=</span>a.showAxis,v,w<span class="pl-k">=</span>f.labels.overflow,x<span class="pl-k">=</span>a.justifyLabels<span class="pl-k">=</span>b<span class="pl-k">&amp;&amp;</span>w<span class="pl-k">!==!</span><span class="pl-c1">1</span>,A;a.labelEdge.<span class="pl-sc">length</span><span class="pl-k">=</span><span class="pl-c1">0</span>;a.justifyToPlot<span class="pl-k">=</span>w<span class="pl-k">===</span><span class="pl-s1"><span class="pl-pds">&quot;</span>justify<span class="pl-pds">&quot;</span></span>;q([l,n,m],<span class="pl-st">function</span>(<span class="pl-vpf">a</span>){<span class="pl-k">for</span>(<span class="pl-s">var</span> b <span class="pl-k">in</span> a)a[b].isActive<span class="pl-k">=!</span><span class="pl-c1">1</span>});<span class="pl-k">if</span>(r<span class="pl-k">||</span>h)<span class="pl-k">if</span>(a.minorTickInterval<span class="pl-k">&amp;&amp;!</span>a.categories<span class="pl-k">&amp;&amp;</span>q(a.getMinorTickPositions(),<span class="pl-st">function</span>(<span class="pl-vpf">b</span>){n[b]<span class="pl-k">||</span>(n[b]<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">Ta</span>(a,b,<span class="pl-s1"><span class="pl-pds">&quot;</span>minor<span class="pl-pds">&quot;</span></span>));C<span class="pl-k">&amp;&amp;</span>n[b].isNew<span class="pl-k">&amp;&amp;</span>n[b].render(<span class="pl-c1">null</span>,<span class="pl-k">!</span><span class="pl-c1">0</span>);n[b].render(<span class="pl-c1">null</span>,<span class="pl-k">!</span><span class="pl-c1">1</span>,<span class="pl-c1">1</span>)}),i.<span class="pl-sc">length</span><span class="pl-k">&amp;&amp;</span>(j<span class="pl-k">=</span>i.<span class="pl-s3">slice</span>(),(b<span class="pl-k">&amp;&amp;</span>c<span class="pl-k">||!</span>b<span class="pl-k">&amp;&amp;!</span>c)<span class="pl-k">&amp;&amp;</span>j.<span class="pl-s3">reverse</span>(),x<span class="pl-k">&amp;&amp;</span>(j<span class="pl-k">=</span>j.<span class="pl-s3">slice</span>(<span class="pl-c1">1</span>).<span class="pl-s3">concat</span>([j[<span class="pl-c1">0</span>]])),q(j,<span class="pl-st">function</span>(<span class="pl-vpf">b</span>,<span class="pl-vpf">c</span>){x<span class="pl-k">&amp;&amp;</span>(c<span class="pl-k">=</span>c<span class="pl-k">===</span>j.<span class="pl-sc">length</span><span class="pl-k">-</span></td>
      </tr>
      <tr>
        <td id="L137" class="blob-num js-line-number" data-line-number="137"></td>
        <td id="LC137" class="blob-code js-file-line"><span class="pl-c1">1</span><span class="pl-k">?</span><span class="pl-c1">0</span><span class="pl-k">:</span>c<span class="pl-k">+</span><span class="pl-c1">1</span>);<span class="pl-k">if</span>(<span class="pl-k">!</span>h<span class="pl-k">||</span>b<span class="pl-k">&gt;=</span>a.min<span class="pl-k">&amp;&amp;</span>b<span class="pl-k">&lt;=</span>a.max)l[b]<span class="pl-k">||</span>(l[b]<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">Ta</span>(a,b)),C<span class="pl-k">&amp;&amp;</span>l[b].isNew<span class="pl-k">&amp;&amp;</span>l[b].render(c,<span class="pl-k">!</span><span class="pl-c1">0</span>,<span class="pl-c1">0.1</span>),l[b].render(c)}),D<span class="pl-k">&amp;&amp;</span>a.min<span class="pl-k">===</span><span class="pl-c1">0</span><span class="pl-k">&amp;&amp;</span>(l[<span class="pl-k">-</span><span class="pl-c1">1</span>]<span class="pl-k">||</span>(l[<span class="pl-k">-</span><span class="pl-c1">1</span>]<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">Ta</span>(a,<span class="pl-k">-</span><span class="pl-c1">1</span>,<span class="pl-c1">null</span>,<span class="pl-k">!</span><span class="pl-c1">0</span>)),l[<span class="pl-k">-</span><span class="pl-c1">1</span>].render(<span class="pl-k">-</span><span class="pl-c1">1</span>))),p<span class="pl-k">&amp;&amp;</span>q(i,<span class="pl-st">function</span>(<span class="pl-vpf">b</span>,<span class="pl-vpf">c</span>){<span class="pl-k">if</span>(c<span class="pl-k">%</span><span class="pl-c1">2</span><span class="pl-k">===</span><span class="pl-c1">0</span><span class="pl-k">&amp;&amp;</span>b<span class="pl-k">&lt;</span>a.max)m[b]<span class="pl-k">||</span>(m[b]<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">K.PlotLineOrBand</span>(a)),v<span class="pl-k">=</span>b<span class="pl-k">+</span>D,A<span class="pl-k">=</span>i[c<span class="pl-k">+</span><span class="pl-c1">1</span>]<span class="pl-k">!==</span>u<span class="pl-k">?</span>i[c<span class="pl-k">+</span><span class="pl-c1">1</span>]<span class="pl-k">+</span>D<span class="pl-k">:</span>a.max,m[b].<span class="pl-sc">options</span><span class="pl-k">=</span>{from<span class="pl-k">:</span>g<span class="pl-k">?</span>ka(v)<span class="pl-k">:</span>v,to<span class="pl-k">:</span>g<span class="pl-k">?</span>ka(A)<span class="pl-k">:</span>A,color<span class="pl-k">:</span>p},m[b].render(),m[b].isActive<span class="pl-k">=!</span><span class="pl-c1">0</span>}),<span class="pl-k">!</span>a._addedPlotLB)q((f.plotLines<span class="pl-k">||</span>[]).<span class="pl-s3">concat</span>(f.plotBands<span class="pl-k">||</span>[]),<span class="pl-st">function</span>(<span class="pl-vpf">b</span>){a.addPlotBandOrLine(b)}),a._addedPlotLB<span class="pl-k">=!</span><span class="pl-c1">0</span>;q([l,n,</td>
      </tr>
      <tr>
        <td id="L138" class="blob-num js-line-number" data-line-number="138"></td>
        <td id="LC138" class="blob-code js-file-line">m],<span class="pl-st">function</span>(<span class="pl-vpf">a</span>){<span class="pl-s">var</span> b,c,e<span class="pl-k">=</span>[],f<span class="pl-k">=</span>va<span class="pl-k">?</span>va.duration<span class="pl-k">||</span><span class="pl-c1">500</span><span class="pl-k">:</span><span class="pl-c1">0</span>,<span class="pl-en">g</span><span class="pl-k">=</span><span class="pl-st">function</span>(){<span class="pl-k">for</span>(c<span class="pl-k">=</span>e.<span class="pl-sc">length</span>;c<span class="pl-k">--</span>;)a[e[c]]<span class="pl-k">&amp;&amp;!</span>a[e[c]].isActive<span class="pl-k">&amp;&amp;</span>(a[e[c]].destroy(),<span class="pl-k">delete</span> a[e[c]])};<span class="pl-k">for</span>(b <span class="pl-k">in</span> a)<span class="pl-k">if</span>(<span class="pl-k">!</span>a[b].isActive)a[b].render(b,<span class="pl-k">!</span><span class="pl-c1">1</span>,<span class="pl-c1">0</span>),a[b].isActive<span class="pl-k">=!</span><span class="pl-c1">1</span>,e.<span class="pl-s3">push</span>(b);a<span class="pl-k">===</span>m<span class="pl-k">||!</span>d.hasRendered<span class="pl-k">||!</span>f<span class="pl-k">?</span>g()<span class="pl-k">:</span>f<span class="pl-k">&amp;&amp;</span><span class="pl-s3">setTimeout</span>(g,f)});<span class="pl-k">if</span>(J)b<span class="pl-k">=</span>a.getLinePath(J),a.axisLine<span class="pl-k">?</span>a.axisLine.animate({d<span class="pl-k">:</span>b})<span class="pl-k">:</span>a.axisLine<span class="pl-k">=</span>e.path(b).attr({stroke<span class="pl-k">:</span>f.lineColor,<span class="pl-s1"><span class="pl-pds">&quot;</span>stroke-width<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span>J,zIndex<span class="pl-k">:</span><span class="pl-c1">7</span>}).<span class="pl-s3">add</span>(a.axisGroup),a.axisLine[t<span class="pl-k">?</span><span class="pl-s1"><span class="pl-pds">&quot;</span>show<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s1"><span class="pl-pds">&quot;</span>hide<span class="pl-pds">&quot;</span></span>]();<span class="pl-k">if</span>(k<span class="pl-k">&amp;&amp;</span>t)k[k.isNew<span class="pl-k">?</span><span class="pl-s1"><span class="pl-pds">&quot;</span>attr<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s1"><span class="pl-pds">&quot;</span>animate<span class="pl-pds">&quot;</span></span>](a.getTitlePosition()),</td>
      </tr>
      <tr>
        <td id="L139" class="blob-num js-line-number" data-line-number="139"></td>
        <td id="LC139" class="blob-code js-file-line">k.isNew<span class="pl-k">=!</span><span class="pl-c1">1</span>;o<span class="pl-k">&amp;&amp;</span>o.enabled<span class="pl-k">&amp;&amp;</span>a.renderStackTotals();a.isDirty<span class="pl-k">=!</span><span class="pl-c1">1</span>},<span class="pl-en">redraw</span>:<span class="pl-st">function</span>(){<span class="pl-v">this</span>.render();q(<span class="pl-v">this</span>.plotLinesAndBands,<span class="pl-st">function</span>(<span class="pl-vpf">a</span>){a.render()});q(<span class="pl-v">this</span>.series,<span class="pl-st">function</span>(<span class="pl-vpf">a</span>){a.isDirty<span class="pl-k">=!</span><span class="pl-c1">0</span>})},<span class="pl-en">destroy</span>:<span class="pl-st">function</span>(<span class="pl-vpf">a</span>){<span class="pl-s">var</span> b<span class="pl-k">=</span><span class="pl-v">this</span>,c<span class="pl-k">=</span>b.stacks,d,e<span class="pl-k">=</span>b.plotLinesAndBands;a<span class="pl-k">||</span>X(b);<span class="pl-k">for</span>(d <span class="pl-k">in</span> c)Pa(c[d]),c[d]<span class="pl-k">=</span><span class="pl-c1">null</span>;q([b.ticks,b.minorTicks,b.alternateBands],<span class="pl-st">function</span>(<span class="pl-vpf">a</span>){Pa(a)});<span class="pl-k">for</span>(a<span class="pl-k">=</span>e.<span class="pl-sc">length</span>;a<span class="pl-k">--</span>;)e[a].destroy();q(<span class="pl-s1"><span class="pl-pds">&quot;</span>stackTotalGroup,axisLine,axisTitle,axisGroup,cross,gridGroup,labelGroup<span class="pl-pds">&quot;</span></span>.<span class="pl-s3">split</span>(<span class="pl-s1"><span class="pl-pds">&quot;</span>,<span class="pl-pds">&quot;</span></span>),<span class="pl-st">function</span>(<span class="pl-vpf">a</span>){b[a]<span class="pl-k">&amp;&amp;</span>(b[a]<span class="pl-k">=</span>b[a].destroy())});</td>
      </tr>
      <tr>
        <td id="L140" class="blob-num js-line-number" data-line-number="140"></td>
        <td id="LC140" class="blob-code js-file-line"><span class="pl-v">this</span>.cross<span class="pl-k">&amp;&amp;</span><span class="pl-v">this</span>.cross.destroy()},<span class="pl-en">drawCrosshair</span>:<span class="pl-st">function</span>(<span class="pl-vpf">a</span>,<span class="pl-vpf">b</span>){<span class="pl-k">if</span>(<span class="pl-v">this</span>.crosshair)<span class="pl-k">if</span>((s(b)<span class="pl-k">||!</span>p(<span class="pl-v">this</span>.crosshair.snap,<span class="pl-k">!</span><span class="pl-c1">0</span>))<span class="pl-k">===!</span><span class="pl-c1">1</span>)<span class="pl-v">this</span>.hideCrosshair();<span class="pl-k">else</span>{<span class="pl-s">var</span> c,d<span class="pl-k">=</span><span class="pl-v">this</span>.crosshair,e<span class="pl-k">=</span>d.animation;p(d.snap,<span class="pl-k">!</span><span class="pl-c1">0</span>)<span class="pl-k">?</span>s(b)<span class="pl-k">&amp;&amp;</span>(c<span class="pl-k">=</span><span class="pl-v">this</span>.chart.inverted<span class="pl-k">!=</span><span class="pl-v">this</span>.horiz<span class="pl-k">?</span>b.plotX<span class="pl-k">:</span><span class="pl-v">this</span>.len<span class="pl-k">-</span>b.plotY)<span class="pl-k">:</span>c<span class="pl-k">=</span><span class="pl-v">this</span>.horiz<span class="pl-k">?</span>a.chartX<span class="pl-k">-</span><span class="pl-v">this</span>.pos<span class="pl-k">:</span><span class="pl-v">this</span>.len<span class="pl-k">-</span>a.chartY<span class="pl-k">+</span><span class="pl-v">this</span>.pos;c<span class="pl-k">=</span><span class="pl-v">this</span>.isRadial<span class="pl-k">?</span><span class="pl-v">this</span>.getPlotLinePath(<span class="pl-v">this</span>.isXAxis<span class="pl-k">?</span>b.<span class="pl-sc">x</span><span class="pl-k">:</span>p(b.stackY,b.<span class="pl-sc">y</span>))<span class="pl-k">:</span><span class="pl-v">this</span>.getPlotLinePath(<span class="pl-c1">null</span>,<span class="pl-c1">null</span>,<span class="pl-c1">null</span>,<span class="pl-c1">null</span>,c);<span class="pl-k">if</span>(c<span class="pl-k">===</span><span class="pl-c1">null</span>)<span class="pl-v">this</span>.hideCrosshair();<span class="pl-k">else</span> <span class="pl-k">if</span>(<span class="pl-v">this</span>.cross)<span class="pl-v">this</span>.cross.attr({visibility<span class="pl-k">:</span><span class="pl-s1"><span class="pl-pds">&quot;</span>visible<span class="pl-pds">&quot;</span></span>})[e<span class="pl-k">?</span></td>
      </tr>
      <tr>
        <td id="L141" class="blob-num js-line-number" data-line-number="141"></td>
        <td id="LC141" class="blob-code js-file-line"><span class="pl-s1"><span class="pl-pds">&quot;</span>animate<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s1"><span class="pl-pds">&quot;</span>attr<span class="pl-pds">&quot;</span></span>]({d<span class="pl-k">:</span>c},e);<span class="pl-k">else</span>{e<span class="pl-k">=</span>{<span class="pl-s1"><span class="pl-pds">&quot;</span>stroke-width<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span>d.<span class="pl-sc">width</span><span class="pl-k">||</span><span class="pl-c1">1</span>,stroke<span class="pl-k">:</span>d.<span class="pl-sc">color</span><span class="pl-k">||</span><span class="pl-s1"><span class="pl-pds">&quot;</span>#C0C0C0<span class="pl-pds">&quot;</span></span>,zIndex<span class="pl-k">:</span>d.<span class="pl-sc">zIndex</span><span class="pl-k">||</span><span class="pl-c1">2</span>};<span class="pl-k">if</span>(d.dashStyle)e.dashstyle<span class="pl-k">=</span>d.dashStyle;<span class="pl-v">this</span>.cross<span class="pl-k">=</span><span class="pl-v">this</span>.chart.renderer.path(c).attr(e).<span class="pl-s3">add</span>()}}},<span class="pl-en">hideCrosshair</span>:<span class="pl-st">function</span>(){<span class="pl-v">this</span>.cross<span class="pl-k">&amp;&amp;</span><span class="pl-v">this</span>.cross.hide()}};r(na.<span class="pl-sc">prototype</span>,{<span class="pl-en">getPlotBandPath</span>:<span class="pl-st">function</span>(<span class="pl-vpf">a</span>,<span class="pl-vpf">b</span>){<span class="pl-s">var</span> c<span class="pl-k">=</span><span class="pl-v">this</span>.getPlotLinePath(b),d<span class="pl-k">=</span><span class="pl-v">this</span>.getPlotLinePath(a);d<span class="pl-k">&amp;&amp;</span>c<span class="pl-k">?</span>d.<span class="pl-s3">push</span>(c[<span class="pl-c1">4</span>],c[<span class="pl-c1">5</span>],c[<span class="pl-c1">1</span>],c[<span class="pl-c1">2</span>])<span class="pl-k">:</span>d<span class="pl-k">=</span><span class="pl-c1">null</span>;<span class="pl-k">return</span> d},<span class="pl-en">addPlotBand</span>:<span class="pl-st">function</span>(<span class="pl-vpf">a</span>){<span class="pl-k">return</span> <span class="pl-v">this</span>.addPlotBandOrLine(a,<span class="pl-s1"><span class="pl-pds">&quot;</span>plotBands<span class="pl-pds">&quot;</span></span>)},<span class="pl-en">addPlotLine</span>:<span class="pl-st">function</span>(<span class="pl-vpf">a</span>){<span class="pl-k">return</span> <span class="pl-v">this</span>.addPlotBandOrLine(a,</td>
      </tr>
      <tr>
        <td id="L142" class="blob-num js-line-number" data-line-number="142"></td>
        <td id="LC142" class="blob-code js-file-line"><span class="pl-s1"><span class="pl-pds">&quot;</span>plotLines<span class="pl-pds">&quot;</span></span>)},<span class="pl-en">addPlotBandOrLine</span>:<span class="pl-st">function</span>(<span class="pl-vpf">a</span>,<span class="pl-vpf">b</span>){<span class="pl-s">var</span> c<span class="pl-k">=</span>(<span class="pl-k">new</span> <span class="pl-en">K.PlotLineOrBand</span>(<span class="pl-v">this</span>,a)).render(),d<span class="pl-k">=</span><span class="pl-v">this</span>.userOptions;c<span class="pl-k">&amp;&amp;</span>(b<span class="pl-k">&amp;&amp;</span>(d[b]<span class="pl-k">=</span>d[b]<span class="pl-k">||</span>[],d[b].<span class="pl-s3">push</span>(a)),<span class="pl-v">this</span>.plotLinesAndBands.<span class="pl-s3">push</span>(c));<span class="pl-k">return</span> c},<span class="pl-en">removePlotBandOrLine</span>:<span class="pl-st">function</span>(<span class="pl-vpf">a</span>){<span class="pl-k">for</span>(<span class="pl-s">var</span> b<span class="pl-k">=</span><span class="pl-v">this</span>.plotLinesAndBands,c<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-sc">options</span>,d<span class="pl-k">=</span><span class="pl-v">this</span>.userOptions,e<span class="pl-k">=</span>b.<span class="pl-sc">length</span>;e<span class="pl-k">--</span>;)b[e].<span class="pl-sc">id</span><span class="pl-k">===</span>a<span class="pl-k">&amp;&amp;</span>b[e].destroy();q([c.plotLines<span class="pl-k">||</span>[],d.plotLines<span class="pl-k">||</span>[],c.plotBands<span class="pl-k">||</span>[],d.plotBands<span class="pl-k">||</span>[]],<span class="pl-st">function</span>(<span class="pl-vpf">b</span>){<span class="pl-k">for</span>(e<span class="pl-k">=</span>b.<span class="pl-sc">length</span>;e<span class="pl-k">--</span>;)b[e].<span class="pl-sc">id</span><span class="pl-k">===</span>a<span class="pl-k">&amp;&amp;</span>la(b,b[e])})}});<span class="pl-s3">na</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">getTimeTicks</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>,<span class="pl-vpf">b</span>,</td>
      </tr>
      <tr>
        <td id="L143" class="blob-num js-line-number" data-line-number="143"></td>
        <td id="LC143" class="blob-code js-file-line"><span class="pl-vpf">c</span>,<span class="pl-vpf">d</span>){<span class="pl-s">var</span> e<span class="pl-k">=</span>[],f<span class="pl-k">=</span>{},g<span class="pl-k">=</span>E.<span class="pl-sc">global</span>.useUTC,h,i<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">Da</span>(b<span class="pl-k">-</span>Sa),j<span class="pl-k">=</span>a.unitRange,k<span class="pl-k">=</span>a.count;<span class="pl-k">if</span>(s(b)){j<span class="pl-k">&gt;=</span>A.second<span class="pl-k">&amp;&amp;</span>(i.<span class="pl-s3">setMilliseconds</span>(<span class="pl-c1">0</span>),i.<span class="pl-s3">setSeconds</span>(j<span class="pl-k">&gt;=</span>A.minute<span class="pl-k">?</span><span class="pl-c1">0</span><span class="pl-k">:</span>k<span class="pl-k">*</span>U(i.<span class="pl-s3">getSeconds</span>()/k)));<span class="pl-k">if</span>(j<span class="pl-k">&gt;=</span>A.minute)i[Cb](j<span class="pl-k">&gt;=</span>A.hour<span class="pl-k">?</span><span class="pl-c1">0</span><span class="pl-k">:</span>k<span class="pl-k">*</span>U(i[pb]()/k));<span class="pl-k">if</span>(j<span class="pl-k">&gt;=</span>A.hour)i[Db](j<span class="pl-k">&gt;=</span>A.day<span class="pl-k">?</span><span class="pl-c1">0</span><span class="pl-k">:</span>k<span class="pl-k">*</span>U(i[qb]()/k));<span class="pl-k">if</span>(j<span class="pl-k">&gt;=</span>A.day)i[sb](j<span class="pl-k">&gt;=</span>A.month<span class="pl-k">?</span><span class="pl-c1">1</span><span class="pl-k">:</span>k<span class="pl-k">*</span>U(i[Xa]()/k));j<span class="pl-k">&gt;=</span>A.month<span class="pl-k">&amp;&amp;</span>(i[Eb](j<span class="pl-k">&gt;=</span>A.year<span class="pl-k">?</span><span class="pl-c1">0</span><span class="pl-k">:</span>k<span class="pl-k">*</span>U(i[fb]()/k)),h<span class="pl-k">=</span>i[gb]());j<span class="pl-k">&gt;=</span>A.year<span class="pl-k">&amp;&amp;</span>(h<span class="pl-k">-=</span>h<span class="pl-k">%</span>k,i[Fb](h));<span class="pl-k">if</span>(j<span class="pl-k">===</span>A.week)i[sb](i[Xa]()<span class="pl-k">-</span>i[rb]()<span class="pl-k">+</span>p(d,<span class="pl-c1">1</span>));b<span class="pl-k">=</span><span class="pl-c1">1</span>;Sa<span class="pl-k">&amp;&amp;</span>(i<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">Da</span>(i.<span class="pl-s3">getTime</span>()<span class="pl-k">+</span>Sa));h<span class="pl-k">=</span>i[gb]();<span class="pl-k">for</span>(<span class="pl-s">var</span> d<span class="pl-k">=</span></td>
      </tr>
      <tr>
        <td id="L144" class="blob-num js-line-number" data-line-number="144"></td>
        <td id="LC144" class="blob-code js-file-line">i.<span class="pl-s3">getTime</span>(),l<span class="pl-k">=</span>i[fb](),n<span class="pl-k">=</span>i[Xa](),m<span class="pl-k">=</span>(A.day<span class="pl-k">+</span>(g<span class="pl-k">?</span>Sa<span class="pl-k">:</span>i.<span class="pl-s3">getTimezoneOffset</span>()<span class="pl-k">*</span><span class="pl-c1">6E4</span>))<span class="pl-k">%</span>A.day;d<span class="pl-k">&lt;</span>c;)e.<span class="pl-s3">push</span>(d),j<span class="pl-k">===</span>A.year<span class="pl-k">?</span>d<span class="pl-k">=</span>eb(h<span class="pl-k">+</span>b<span class="pl-k">*</span>k,<span class="pl-c1">0</span>)<span class="pl-k">:</span>j<span class="pl-k">===</span>A.month<span class="pl-k">?</span>d<span class="pl-k">=</span>eb(h,l<span class="pl-k">+</span>b<span class="pl-k">*</span>k)<span class="pl-k">:!</span>g<span class="pl-k">&amp;&amp;</span>(j<span class="pl-k">===</span>A.day<span class="pl-k">||</span>j<span class="pl-k">===</span>A.week)<span class="pl-k">?</span>d<span class="pl-k">=</span>eb(h,l,n<span class="pl-k">+</span>b<span class="pl-k">*</span>k<span class="pl-k">*</span>(j<span class="pl-k">===</span>A.day<span class="pl-k">?</span><span class="pl-c1">1</span><span class="pl-k">:</span><span class="pl-c1">7</span>))<span class="pl-k">:</span>d<span class="pl-k">+=</span>j<span class="pl-k">*</span>k,b<span class="pl-k">++</span>;e.<span class="pl-s3">push</span>(d);q(wb(e,<span class="pl-st">function</span>(<span class="pl-vpf">a</span>){<span class="pl-k">return</span> j<span class="pl-k">&lt;=</span>A.hour<span class="pl-k">&amp;&amp;</span>a<span class="pl-k">%</span>A.day<span class="pl-k">===</span>m}),<span class="pl-st">function</span>(<span class="pl-vpf">a</span>){f[a]<span class="pl-k">=</span><span class="pl-s1"><span class="pl-pds">&quot;</span>day<span class="pl-pds">&quot;</span></span>})}e<span class="pl-s3">.info</span><span class="pl-k">=</span>r(a,{higherRanks<span class="pl-k">:</span>f,totalRange<span class="pl-k">:</span>j<span class="pl-k">*</span>k});<span class="pl-k">return</span> e};<span class="pl-s3">na</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">normalizeTimeTickInterval</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>,<span class="pl-vpf">b</span>){<span class="pl-s">var</span> c<span class="pl-k">=</span>b<span class="pl-k">||</span>[[<span class="pl-s1"><span class="pl-pds">&quot;</span>millisecond<span class="pl-pds">&quot;</span></span>,[<span class="pl-c1">1</span>,<span class="pl-c1">2</span>,<span class="pl-c1">5</span>,<span class="pl-c1">10</span>,<span class="pl-c1">20</span>,<span class="pl-c1">25</span>,<span class="pl-c1">50</span>,<span class="pl-c1">100</span>,<span class="pl-c1">200</span>,<span class="pl-c1">500</span>]],[<span class="pl-s1"><span class="pl-pds">&quot;</span>second<span class="pl-pds">&quot;</span></span>,[<span class="pl-c1">1</span>,<span class="pl-c1">2</span>,<span class="pl-c1">5</span>,<span class="pl-c1">10</span>,<span class="pl-c1">15</span>,<span class="pl-c1">30</span>]],[<span class="pl-s1"><span class="pl-pds">&quot;</span>minute<span class="pl-pds">&quot;</span></span>,</td>
      </tr>
      <tr>
        <td id="L145" class="blob-num js-line-number" data-line-number="145"></td>
        <td id="LC145" class="blob-code js-file-line">[<span class="pl-c1">1</span>,<span class="pl-c1">2</span>,<span class="pl-c1">5</span>,<span class="pl-c1">10</span>,<span class="pl-c1">15</span>,<span class="pl-c1">30</span>]],[<span class="pl-s1"><span class="pl-pds">&quot;</span>hour<span class="pl-pds">&quot;</span></span>,[<span class="pl-c1">1</span>,<span class="pl-c1">2</span>,<span class="pl-c1">3</span>,<span class="pl-c1">4</span>,<span class="pl-c1">6</span>,<span class="pl-c1">8</span>,<span class="pl-c1">12</span>]],[<span class="pl-s1"><span class="pl-pds">&quot;</span>day<span class="pl-pds">&quot;</span></span>,[<span class="pl-c1">1</span>,<span class="pl-c1">2</span>]],[<span class="pl-s1"><span class="pl-pds">&quot;</span>week<span class="pl-pds">&quot;</span></span>,[<span class="pl-c1">1</span>,<span class="pl-c1">2</span>]],[<span class="pl-s1"><span class="pl-pds">&quot;</span>month<span class="pl-pds">&quot;</span></span>,[<span class="pl-c1">1</span>,<span class="pl-c1">2</span>,<span class="pl-c1">3</span>,<span class="pl-c1">4</span>,<span class="pl-c1">6</span>]],[<span class="pl-s1"><span class="pl-pds">&quot;</span>year<span class="pl-pds">&quot;</span></span>,<span class="pl-c1">null</span>]],d<span class="pl-k">=</span>c[c.<span class="pl-sc">length</span><span class="pl-k">-</span><span class="pl-c1">1</span>],e<span class="pl-k">=</span>A[d[<span class="pl-c1">0</span>]],f<span class="pl-k">=</span>d[<span class="pl-c1">1</span>],g;<span class="pl-k">for</span>(g<span class="pl-k">=</span><span class="pl-c1">0</span>;g<span class="pl-k">&lt;</span>c.<span class="pl-sc">length</span>;g<span class="pl-k">++</span>)<span class="pl-k">if</span>(d<span class="pl-k">=</span>c[g],e<span class="pl-k">=</span>A[d[<span class="pl-c1">0</span>]],f<span class="pl-k">=</span>d[<span class="pl-c1">1</span>],c[g<span class="pl-k">+</span><span class="pl-c1">1</span>]<span class="pl-k">&amp;&amp;</span>a<span class="pl-k">&lt;=</span>(e<span class="pl-k">*</span>f[f.<span class="pl-sc">length</span><span class="pl-k">-</span><span class="pl-c1">1</span>]<span class="pl-k">+</span>A[c[g<span class="pl-k">+</span><span class="pl-c1">1</span>][<span class="pl-c1">0</span>]])/<span class="pl-c1">2</span>)<span class="pl-k">break</span>;e<span class="pl-k">===</span>A.year<span class="pl-k">&amp;&amp;</span>a<span class="pl-k">&lt;</span><span class="pl-c1">5</span><span class="pl-k">*</span>e<span class="pl-k">&amp;&amp;</span>(f<span class="pl-k">=</span>[<span class="pl-c1">1</span>,<span class="pl-c1">2</span>,<span class="pl-c1">5</span>]);c<span class="pl-k">=</span>nb(a/e,f,d[<span class="pl-c1">0</span>]<span class="pl-k">===</span><span class="pl-s1"><span class="pl-pds">&quot;</span>year<span class="pl-pds">&quot;</span></span><span class="pl-k">?</span>t(mb(a/e),<span class="pl-c1">1</span>)<span class="pl-k">:</span><span class="pl-c1">1</span>);<span class="pl-k">return</span>{unitRange<span class="pl-k">:</span>e,count<span class="pl-k">:</span>c,unitName<span class="pl-k">:</span>d[<span class="pl-c1">0</span>]}};<span class="pl-s3">na</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">getLogTickPositions</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>,<span class="pl-vpf">b</span>,<span class="pl-vpf">c</span>,<span class="pl-vpf">d</span>){<span class="pl-s">var</span> e<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-sc">options</span>,f<span class="pl-k">=</span><span class="pl-v">this</span>.len,g<span class="pl-k">=</span>[];<span class="pl-k">if</span>(<span class="pl-k">!</span>d)<span class="pl-v">this</span>._minorAutoInterval<span class="pl-k">=</span><span class="pl-c1">null</span>;<span class="pl-k">if</span>(a<span class="pl-k">&gt;=</span><span class="pl-c1">0.5</span>)a<span class="pl-k">=</span>v(a),g<span class="pl-k">=</span><span class="pl-v">this</span>.getLinearTickPositions(a,</td>
      </tr>
      <tr>
        <td id="L146" class="blob-num js-line-number" data-line-number="146"></td>
        <td id="LC146" class="blob-code js-file-line">b,c);<span class="pl-k">else</span> <span class="pl-k">if</span>(a<span class="pl-k">&gt;=</span><span class="pl-c1">0.08</span>)<span class="pl-k">for</span>(<span class="pl-s">var</span> f<span class="pl-k">=</span>U(b),h,i,j,k,l,e<span class="pl-k">=</span>a<span class="pl-k">&gt;</span><span class="pl-c1">0.3</span><span class="pl-k">?</span>[<span class="pl-c1">1</span>,<span class="pl-c1">2</span>,<span class="pl-c1">4</span>]<span class="pl-k">:</span>a<span class="pl-k">&gt;</span><span class="pl-c1">0.15</span><span class="pl-k">?</span>[<span class="pl-c1">1</span>,<span class="pl-c1">2</span>,<span class="pl-c1">4</span>,<span class="pl-c1">6</span>,<span class="pl-c1">8</span>]<span class="pl-k">:</span>[<span class="pl-c1">1</span>,<span class="pl-c1">2</span>,<span class="pl-c1">3</span>,<span class="pl-c1">4</span>,<span class="pl-c1">5</span>,<span class="pl-c1">6</span>,<span class="pl-c1">7</span>,<span class="pl-c1">8</span>,<span class="pl-c1">9</span>];f<span class="pl-k">&lt;</span>c<span class="pl-k">+</span><span class="pl-c1">1</span><span class="pl-k">&amp;&amp;!</span>l;f<span class="pl-k">++</span>){i<span class="pl-k">=</span>e.<span class="pl-sc">length</span>;<span class="pl-k">for</span>(h<span class="pl-k">=</span><span class="pl-c1">0</span>;h<span class="pl-k">&lt;</span>i<span class="pl-k">&amp;&amp;!</span>l;h<span class="pl-k">++</span>)j<span class="pl-k">=</span>za(ka(f)<span class="pl-k">*</span>e[h]),j<span class="pl-k">&gt;</span>b<span class="pl-k">&amp;&amp;</span>(<span class="pl-k">!</span>d<span class="pl-k">||</span>k<span class="pl-k">&lt;=</span>c)<span class="pl-k">&amp;&amp;</span>k<span class="pl-k">!==</span>u<span class="pl-k">&amp;&amp;</span>g.<span class="pl-s3">push</span>(k),k<span class="pl-k">&gt;</span>c<span class="pl-k">&amp;&amp;</span>(l<span class="pl-k">=!</span><span class="pl-c1">0</span>),k<span class="pl-k">=</span>j}<span class="pl-k">else</span> <span class="pl-k">if</span>(b<span class="pl-k">=</span>ka(b),c<span class="pl-k">=</span>ka(c),a<span class="pl-k">=</span>e[d<span class="pl-k">?</span><span class="pl-s1"><span class="pl-pds">&quot;</span>minorTickInterval<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s1"><span class="pl-pds">&quot;</span>tickInterval<span class="pl-pds">&quot;</span></span>],a<span class="pl-k">=</span>p(a<span class="pl-k">===</span><span class="pl-s1"><span class="pl-pds">&quot;</span>auto<span class="pl-pds">&quot;</span></span><span class="pl-k">?</span>null<span class="pl-k">:</span>a,<span class="pl-v">this</span>._minorAutoInterval,(c<span class="pl-k">-</span>b)<span class="pl-k">*</span>(e.tickPixelInterval/(d<span class="pl-k">?</span><span class="pl-c1">5</span><span class="pl-k">:</span><span class="pl-c1">1</span>))/((d<span class="pl-k">?</span>f/<span class="pl-v">this</span>.tickPositions.<span class="pl-sc">length</span><span class="pl-k">:</span>f)<span class="pl-k">||</span><span class="pl-c1">1</span>)),a<span class="pl-k">=</span>nb(a,<span class="pl-c1">null</span>,mb(a)),g<span class="pl-k">=</span>Va(<span class="pl-v">this</span>.getLinearTickPositions(a,b,c),za),<span class="pl-k">!</span>d)<span class="pl-v">this</span>._minorAutoInterval<span class="pl-k">=</span>a/<span class="pl-c1">5</span>;<span class="pl-k">if</span>(<span class="pl-k">!</span>d)<span class="pl-v">this</span>.tickInterval<span class="pl-k">=</span></td>
      </tr>
      <tr>
        <td id="L147" class="blob-num js-line-number" data-line-number="147"></td>
        <td id="LC147" class="blob-code js-file-line">a;<span class="pl-k">return</span> g};<span class="pl-s">var</span> Nb<span class="pl-k">=</span><span class="pl-s3">K</span>.<span class="pl-en">Tooltip</span><span class="pl-k">=</span><span class="pl-st">function</span>(){<span class="pl-v">this</span>.init.<span class="pl-s3">apply</span>(<span class="pl-v">this</span>,arguments)};<span class="pl-s3">Nb</span>.<span class="pl-sc">prototype</span><span class="pl-k">=</span>{<span class="pl-en">init</span>:<span class="pl-st">function</span>(<span class="pl-vpf">a</span>,<span class="pl-vpf">b</span>){<span class="pl-s">var</span> c<span class="pl-k">=</span>b.<span class="pl-sc">borderWidth</span>,d<span class="pl-k">=</span>b.<span class="pl-sc">style</span>,e<span class="pl-k">=</span>y(d.padding);<span class="pl-v">this</span>.chart<span class="pl-k">=</span>a;<span class="pl-v">this</span>.<span class="pl-sc">options</span><span class="pl-k">=</span>b;<span class="pl-v">this</span>.crosshairs<span class="pl-k">=</span>[];<span class="pl-v">this</span>.now<span class="pl-k">=</span>{x<span class="pl-k">:</span><span class="pl-c1">0</span>,y<span class="pl-k">:</span><span class="pl-c1">0</span>};<span class="pl-v">this</span>.isHidden<span class="pl-k">=!</span><span class="pl-c1">0</span>;<span class="pl-v">this</span>.<span class="pl-sc">label</span><span class="pl-k">=</span>a.renderer.<span class="pl-sc">label</span>(<span class="pl-s1"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>,<span class="pl-c1">0</span>,<span class="pl-c1">0</span>,b.<span class="pl-sc">shape</span><span class="pl-k">||</span><span class="pl-s1"><span class="pl-pds">&quot;</span>callout<span class="pl-pds">&quot;</span></span>,<span class="pl-c1">null</span>,<span class="pl-c1">null</span>,b.useHTML,<span class="pl-c1">null</span>,<span class="pl-s1"><span class="pl-pds">&quot;</span>tooltip<span class="pl-pds">&quot;</span></span>).attr({padding<span class="pl-k">:</span>e,fill<span class="pl-k">:</span>b.<span class="pl-sc">backgroundColor</span>,<span class="pl-s1"><span class="pl-pds">&quot;</span>stroke-width<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span>c,r<span class="pl-k">:</span>b.borderRadius,zIndex<span class="pl-k">:</span><span class="pl-c1">8</span>}).css(d).css({padding<span class="pl-k">:</span><span class="pl-c1">0</span>}).<span class="pl-s3">add</span>().attr({y<span class="pl-k">:-</span><span class="pl-c1">9999</span>});ga<span class="pl-k">||</span><span class="pl-v">this</span>.<span class="pl-sc">label</span>.shadow(b.shadow);<span class="pl-v">this</span>.shared<span class="pl-k">=</span>b.shared},</td>
      </tr>
      <tr>
        <td id="L148" class="blob-num js-line-number" data-line-number="148"></td>
        <td id="LC148" class="blob-code js-file-line"><span class="pl-en">destroy</span>:<span class="pl-st">function</span>(){<span class="pl-k">if</span>(<span class="pl-v">this</span>.<span class="pl-sc">label</span>)<span class="pl-v">this</span>.<span class="pl-sc">label</span><span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-sc">label</span>.destroy();<span class="pl-s3">clearTimeout</span>(<span class="pl-v">this</span>.hideTimer);<span class="pl-s3">clearTimeout</span>(<span class="pl-v">this</span>.tooltipTimeout)},<span class="pl-en">move</span>:<span class="pl-st">function</span>(<span class="pl-vpf">a</span>,<span class="pl-vpf">b</span>,<span class="pl-vpf">c</span>,<span class="pl-vpf">d</span>){<span class="pl-s">var</span> e<span class="pl-k">=</span><span class="pl-v">this</span>,f<span class="pl-k">=</span>e.now,g<span class="pl-k">=</span>e.<span class="pl-sc">options</span>.animation<span class="pl-k">!==!</span><span class="pl-c1">1</span><span class="pl-k">&amp;&amp;!</span>e.isHidden<span class="pl-k">&amp;&amp;</span>(Q(a<span class="pl-k">-</span>f.<span class="pl-sc">x</span>)<span class="pl-k">&gt;</span><span class="pl-c1">1</span><span class="pl-k">||</span>Q(b<span class="pl-k">-</span>f.<span class="pl-sc">y</span>)<span class="pl-k">&gt;</span><span class="pl-c1">1</span>),h<span class="pl-k">=</span>e.followPointer<span class="pl-k">||</span>e.len<span class="pl-k">&gt;</span><span class="pl-c1">1</span>;r(f,{x<span class="pl-k">:</span>g<span class="pl-k">?</span>(<span class="pl-c1">2</span><span class="pl-k">*</span>f.<span class="pl-sc">x</span><span class="pl-k">+</span>a)/<span class="pl-c1">3</span><span class="pl-k">:</span>a,y<span class="pl-k">:</span>g<span class="pl-k">?</span>(f.<span class="pl-sc">y</span><span class="pl-k">+</span>b)/<span class="pl-c1">2</span><span class="pl-k">:</span>b,anchorX<span class="pl-k">:</span>h<span class="pl-k">?</span>u<span class="pl-k">:</span>g<span class="pl-k">?</span>(<span class="pl-c1">2</span><span class="pl-k">*</span>f.anchorX<span class="pl-k">+</span>c)/<span class="pl-c1">3</span><span class="pl-k">:</span>c,anchorY<span class="pl-k">:</span>h<span class="pl-k">?</span>u<span class="pl-k">:</span>g<span class="pl-k">?</span>(f.anchorY<span class="pl-k">+</span>d)/<span class="pl-c1">2</span><span class="pl-k">:</span>d});e.<span class="pl-sc">label</span>.attr(f);<span class="pl-k">if</span>(g)<span class="pl-s3">clearTimeout</span>(<span class="pl-v">this</span>.tooltipTimeout),<span class="pl-v">this</span>.tooltipTimeout<span class="pl-k">=</span><span class="pl-s3">setTimeout</span>(<span class="pl-st">function</span>(){e<span class="pl-k">&amp;&amp;</span>e.move(a,b,c,d)},<span class="pl-c1">32</span>)},<span class="pl-en">hide</span>:<span class="pl-st">function</span>(<span class="pl-vpf">a</span>){<span class="pl-s">var</span> b<span class="pl-k">=</span></td>
      </tr>
      <tr>
        <td id="L149" class="blob-num js-line-number" data-line-number="149"></td>
        <td id="LC149" class="blob-code js-file-line"><span class="pl-v">this</span>,c;<span class="pl-s3">clearTimeout</span>(<span class="pl-v">this</span>.hideTimer);<span class="pl-k">if</span>(<span class="pl-k">!</span><span class="pl-v">this</span>.isHidden)c<span class="pl-k">=</span><span class="pl-v">this</span>.chart.hoverPoints,<span class="pl-v">this</span>.hideTimer<span class="pl-k">=</span><span class="pl-s3">setTimeout</span>(<span class="pl-st">function</span>(){b.<span class="pl-sc">label</span>.fadeOut();b.isHidden<span class="pl-k">=!</span><span class="pl-c1">0</span>},p(a,<span class="pl-v">this</span>.<span class="pl-sc">options</span>.hideDelay,<span class="pl-c1">500</span>)),c<span class="pl-k">&amp;&amp;</span>q(c,<span class="pl-st">function</span>(<span class="pl-vpf">a</span>){a.setState()}),<span class="pl-v">this</span>.chart.hoverPoints<span class="pl-k">=</span><span class="pl-c1">null</span>},<span class="pl-en">getAnchor</span>:<span class="pl-st">function</span>(<span class="pl-vpf">a</span>,<span class="pl-vpf">b</span>){<span class="pl-s">var</span> c,d<span class="pl-k">=</span><span class="pl-v">this</span>.chart,e<span class="pl-k">=</span>d.inverted,f<span class="pl-k">=</span>d.plotTop,g<span class="pl-k">=</span><span class="pl-c1">0</span>,h<span class="pl-k">=</span><span class="pl-c1">0</span>,i,a<span class="pl-k">=</span>ra(a);c<span class="pl-k">=</span>a[<span class="pl-c1">0</span>].tooltipPos;<span class="pl-v">this</span>.followPointer<span class="pl-k">&amp;&amp;</span>b<span class="pl-k">&amp;&amp;</span>(b.chartX<span class="pl-k">===</span>u<span class="pl-k">&amp;&amp;</span>(b<span class="pl-k">=</span>d.pointer.normalize(b)),c<span class="pl-k">=</span>[b.chartX<span class="pl-k">-</span>d.plotLeft,b.chartY<span class="pl-k">-</span>f]);c<span class="pl-k">||</span>(q(a,<span class="pl-st">function</span>(<span class="pl-vpf">a</span>){i<span class="pl-k">=</span>a.series.yAxis;g<span class="pl-k">+=</span>a.plotX;h<span class="pl-k">+=</span></td>
      </tr>
      <tr>
        <td id="L150" class="blob-num js-line-number" data-line-number="150"></td>
        <td id="LC150" class="blob-code js-file-line">(a.plotLow<span class="pl-k">?</span>(a.plotLow<span class="pl-k">+</span>a.plotHigh)/<span class="pl-c1">2</span><span class="pl-k">:</span>a.plotY)<span class="pl-k">+</span>(<span class="pl-k">!</span>e<span class="pl-k">&amp;&amp;</span>i<span class="pl-k">?</span>i.<span class="pl-sc">top</span><span class="pl-k">-</span>f<span class="pl-k">:</span><span class="pl-c1">0</span>)}),g<span class="pl-k">/=</span>a.<span class="pl-sc">length</span>,h<span class="pl-k">/=</span>a.<span class="pl-sc">length</span>,c<span class="pl-k">=</span>[e<span class="pl-k">?</span>d.plotWidth<span class="pl-k">-</span>h<span class="pl-k">:</span>g,<span class="pl-v">this</span>.shared<span class="pl-k">&amp;&amp;!</span>e<span class="pl-k">&amp;&amp;</span>a.<span class="pl-sc">length</span><span class="pl-k">&gt;</span><span class="pl-c1">1</span><span class="pl-k">&amp;&amp;</span>b<span class="pl-k">?</span>b.chartY<span class="pl-k">-</span>f<span class="pl-k">:</span>e<span class="pl-k">?</span>d.plotHeight<span class="pl-k">-</span>g<span class="pl-k">:</span>h]);<span class="pl-k">return</span> Va(c,v)},<span class="pl-en">getPosition</span>:<span class="pl-st">function</span>(<span class="pl-vpf">a</span>,<span class="pl-vpf">b</span>,<span class="pl-vpf">c</span>){<span class="pl-s">var</span> d<span class="pl-k">=</span><span class="pl-v">this</span>.chart,e<span class="pl-k">=</span><span class="pl-v">this</span>.distance,f<span class="pl-k">=</span>{},g,h<span class="pl-k">=</span>[<span class="pl-s1"><span class="pl-pds">&quot;</span>y<span class="pl-pds">&quot;</span></span>,d.chartHeight,b,c.plotY<span class="pl-k">+</span>d.plotTop],i<span class="pl-k">=</span>[<span class="pl-s1"><span class="pl-pds">&quot;</span>x<span class="pl-pds">&quot;</span></span>,d.chartWidth,a,c.plotX<span class="pl-k">+</span>d.plotLeft],j<span class="pl-k">=</span>c.ttBelow<span class="pl-k">||</span>d.inverted<span class="pl-k">&amp;&amp;!</span>c.negative<span class="pl-k">||!</span>d.inverted<span class="pl-k">&amp;&amp;</span>c.negative,<span class="pl-en">k</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>,<span class="pl-vpf">b</span>,<span class="pl-vpf">c</span>,<span class="pl-vpf">d</span>){<span class="pl-s">var</span> g<span class="pl-k">=</span>c<span class="pl-k">&lt;</span>d<span class="pl-k">-</span>e,b<span class="pl-k">=</span>d<span class="pl-k">+</span>e<span class="pl-k">+</span>c<span class="pl-k">&lt;</span>b,c<span class="pl-k">=</span>d<span class="pl-k">-</span>e<span class="pl-k">-</span>c;d<span class="pl-k">+=</span>e;<span class="pl-k">if</span>(j<span class="pl-k">&amp;&amp;</span>b)f[a]<span class="pl-k">=</span>d;<span class="pl-k">else</span> <span class="pl-k">if</span>(<span class="pl-k">!</span>j<span class="pl-k">&amp;&amp;</span>g)f[a]<span class="pl-k">=</span>c;<span class="pl-k">else</span> <span class="pl-k">if</span>(g)f[a]<span class="pl-k">=</span></td>
      </tr>
      <tr>
        <td id="L151" class="blob-num js-line-number" data-line-number="151"></td>
        <td id="LC151" class="blob-code js-file-line">c;<span class="pl-k">else</span> <span class="pl-k">if</span>(b)f[a]<span class="pl-k">=</span>d;<span class="pl-k">else</span> <span class="pl-k">return</span><span class="pl-k">!</span><span class="pl-c1">1</span>},<span class="pl-en">l</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>,<span class="pl-vpf">b</span>,<span class="pl-vpf">c</span>,<span class="pl-vpf">d</span>){<span class="pl-k">if</span>(d<span class="pl-k">&lt;</span>e<span class="pl-k">||</span>d<span class="pl-k">&gt;</span>b<span class="pl-k">-</span>e)<span class="pl-k">return</span><span class="pl-k">!</span><span class="pl-c1">1</span>;<span class="pl-k">else</span> f[a]<span class="pl-k">=</span>d<span class="pl-k">&lt;</span>c/<span class="pl-c1">2</span><span class="pl-k">?</span><span class="pl-c1">1</span><span class="pl-k">:</span>d<span class="pl-k">&gt;</span>b<span class="pl-k">-</span>c/<span class="pl-c1">2</span><span class="pl-k">?</span>b<span class="pl-k">-</span>c<span class="pl-k">-</span><span class="pl-c1">2</span><span class="pl-k">:</span>d<span class="pl-k">-</span>c/<span class="pl-c1">2</span>},<span class="pl-en">n</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){<span class="pl-s">var</span> b<span class="pl-k">=</span>h;h<span class="pl-k">=</span>i;i<span class="pl-k">=</span>b;g<span class="pl-k">=</span>a},<span class="pl-en">m</span><span class="pl-k">=</span><span class="pl-st">function</span>(){k.<span class="pl-s3">apply</span>(<span class="pl-c1">0</span>,h)<span class="pl-k">!==!</span><span class="pl-c1">1</span><span class="pl-k">?</span>l.<span class="pl-s3">apply</span>(<span class="pl-c1">0</span>,i)<span class="pl-k">===!</span><span class="pl-c1">1</span><span class="pl-k">&amp;&amp;!</span>g<span class="pl-k">&amp;&amp;</span>(n(<span class="pl-k">!</span><span class="pl-c1">0</span>),m())<span class="pl-k">:</span>g<span class="pl-k">?</span>f.<span class="pl-sc">x</span><span class="pl-k">=</span>f.<span class="pl-sc">y</span><span class="pl-k">=</span><span class="pl-c1">0</span><span class="pl-k">:</span>(n(<span class="pl-k">!</span><span class="pl-c1">0</span>),m())};(d.inverted<span class="pl-k">||</span><span class="pl-v">this</span>.len<span class="pl-k">&gt;</span><span class="pl-c1">1</span>)<span class="pl-k">&amp;&amp;</span>n();m();<span class="pl-k">return</span> f},<span class="pl-en">defaultFormatter</span>:<span class="pl-st">function</span>(<span class="pl-vpf">a</span>){<span class="pl-s">var</span> b<span class="pl-k">=</span><span class="pl-v">this</span>.points<span class="pl-k">||</span>ra(<span class="pl-v">this</span>),c<span class="pl-k">=</span>b[<span class="pl-c1">0</span>].series,d;d<span class="pl-k">=</span>[a.tooltipHeaderFormatter(b[<span class="pl-c1">0</span>])];q(b,<span class="pl-st">function</span>(<span class="pl-vpf">a</span>){c<span class="pl-k">=</span>a.series;d.<span class="pl-s3">push</span>(c.tooltipFormatter<span class="pl-k">&amp;&amp;</span>c.tooltipFormatter(a)<span class="pl-k">||</span>a.point.tooltipFormatter(c.tooltipOptions.pointFormat))});</td>
      </tr>
      <tr>
        <td id="L152" class="blob-num js-line-number" data-line-number="152"></td>
        <td id="LC152" class="blob-code js-file-line">d.<span class="pl-s3">push</span>(a.<span class="pl-sc">options</span>.footerFormat<span class="pl-k">||</span><span class="pl-s1"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>);<span class="pl-k">return</span> d.<span class="pl-s3">join</span>(<span class="pl-s1"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>)},<span class="pl-en">refresh</span>:<span class="pl-st">function</span>(<span class="pl-vpf">a</span>,<span class="pl-vpf">b</span>){<span class="pl-s">var</span> c<span class="pl-k">=</span><span class="pl-v">this</span>.chart,d<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-sc">label</span>,e<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-sc">options</span>,f,g,h<span class="pl-k">=</span>{},i,j<span class="pl-k">=</span>[];i<span class="pl-k">=</span>e.formatter<span class="pl-k">||</span><span class="pl-v">this</span>.defaultFormatter;<span class="pl-s">var</span> h<span class="pl-k">=</span>c.hoverPoints,k,l<span class="pl-k">=</span><span class="pl-v">this</span>.shared;<span class="pl-s3">clearTimeout</span>(<span class="pl-v">this</span>.hideTimer);<span class="pl-v">this</span>.followPointer<span class="pl-k">=</span>ra(a)[<span class="pl-c1">0</span>].series.tooltipOptions.followPointer;g<span class="pl-k">=</span><span class="pl-v">this</span>.getAnchor(a,b);f<span class="pl-k">=</span>g[<span class="pl-c1">0</span>];g<span class="pl-k">=</span>g[<span class="pl-c1">1</span>];l<span class="pl-k">&amp;&amp;</span>(<span class="pl-k">!</span>a.series<span class="pl-k">||!</span>a.series.noSharedTooltip)<span class="pl-k">?</span>(c.hoverPoints<span class="pl-k">=</span>a,h<span class="pl-k">&amp;&amp;</span>q(h,<span class="pl-st">function</span>(<span class="pl-vpf">a</span>){a.setState()}),q(a,<span class="pl-st">function</span>(<span class="pl-vpf">a</span>){a.setState(<span class="pl-s1"><span class="pl-pds">&quot;</span>hover<span class="pl-pds">&quot;</span></span>);j.<span class="pl-s3">push</span>(a.getLabelConfig())}),h<span class="pl-k">=</span>{x<span class="pl-k">:</span>a[<span class="pl-c1">0</span>].category,</td>
      </tr>
      <tr>
        <td id="L153" class="blob-num js-line-number" data-line-number="153"></td>
        <td id="LC153" class="blob-code js-file-line">y<span class="pl-k">:</span>a[<span class="pl-c1">0</span>].<span class="pl-sc">y</span>},h.points<span class="pl-k">=</span>j,<span class="pl-v">this</span>.len<span class="pl-k">=</span>j.<span class="pl-sc">length</span>,a<span class="pl-k">=</span>a[<span class="pl-c1">0</span>])<span class="pl-k">:</span>h<span class="pl-k">=</span>a.getLabelConfig();i<span class="pl-k">=</span>i.<span class="pl-s3">call</span>(h,<span class="pl-v">this</span>);h<span class="pl-k">=</span>a.series;<span class="pl-v">this</span>.distance<span class="pl-k">=</span>p(h.tooltipOptions.distance,<span class="pl-c1">16</span>);i<span class="pl-k">===!</span><span class="pl-c1">1</span><span class="pl-k">?</span><span class="pl-v">this</span>.hide()<span class="pl-k">:</span>(<span class="pl-v">this</span>.isHidden<span class="pl-k">&amp;&amp;</span>(bb(d),d.attr(<span class="pl-s1"><span class="pl-pds">&quot;</span>opacity<span class="pl-pds">&quot;</span></span>,<span class="pl-c1">1</span>).show()),d.attr({text<span class="pl-k">:</span>i}),k<span class="pl-k">=</span>e.<span class="pl-sc">borderColor</span><span class="pl-k">||</span>a.<span class="pl-sc">color</span><span class="pl-k">||</span>h.<span class="pl-sc">color</span><span class="pl-k">||</span><span class="pl-s1"><span class="pl-pds">&quot;</span>#606060<span class="pl-pds">&quot;</span></span>,d.attr({stroke<span class="pl-k">:</span>k}),<span class="pl-v">this</span>.updatePosition({plotX<span class="pl-k">:</span>f,plotY<span class="pl-k">:</span>g,negative<span class="pl-k">:</span>a.negative,ttBelow<span class="pl-k">:</span>a.ttBelow}),<span class="pl-v">this</span>.isHidden<span class="pl-k">=!</span><span class="pl-c1">1</span>);I(c,<span class="pl-s1"><span class="pl-pds">&quot;</span>tooltipRefresh<span class="pl-pds">&quot;</span></span>,{text<span class="pl-k">:</span>i,x<span class="pl-k">:</span>f<span class="pl-k">+</span>c.plotLeft,y<span class="pl-k">:</span>g<span class="pl-k">+</span>c.plotTop,borderColor<span class="pl-k">:</span>k})},<span class="pl-en">updatePosition</span>:<span class="pl-st">function</span>(<span class="pl-vpf">a</span>){<span class="pl-s">var</span> b<span class="pl-k">=</span><span class="pl-v">this</span>.chart,</td>
      </tr>
      <tr>
        <td id="L154" class="blob-num js-line-number" data-line-number="154"></td>
        <td id="LC154" class="blob-code js-file-line">c<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-sc">label</span>,c<span class="pl-k">=</span>(<span class="pl-v">this</span>.<span class="pl-sc">options</span>.positioner<span class="pl-k">||</span><span class="pl-v">this</span>.getPosition).<span class="pl-s3">call</span>(<span class="pl-v">this</span>,c.<span class="pl-sc">width</span>,c.<span class="pl-sc">height</span>,a);<span class="pl-v">this</span>.move(v(c.<span class="pl-sc">x</span>),v(c.<span class="pl-sc">y</span>),a.plotX<span class="pl-k">+</span>b.plotLeft,a.plotY<span class="pl-k">+</span>b.plotTop)},<span class="pl-en">tooltipHeaderFormatter</span>:<span class="pl-st">function</span>(<span class="pl-vpf">a</span>){<span class="pl-s">var</span> b<span class="pl-k">=</span>a.series,c<span class="pl-k">=</span>b.tooltipOptions,d<span class="pl-k">=</span>c.dateTimeLabelFormats,e<span class="pl-k">=</span>c.xDateFormat,f<span class="pl-k">=</span>b.xAxis,g<span class="pl-k">=</span>f<span class="pl-k">&amp;&amp;</span>f.<span class="pl-sc">options</span>.<span class="pl-sc">type</span><span class="pl-k">===</span><span class="pl-s1"><span class="pl-pds">&quot;</span>datetime<span class="pl-pds">&quot;</span></span><span class="pl-k">&amp;&amp;</span>ja(a.key),c<span class="pl-k">=</span>c.headerFormat,f<span class="pl-k">=</span>f<span class="pl-k">&amp;&amp;</span>f.closestPointRange,h;<span class="pl-k">if</span>(g<span class="pl-k">&amp;&amp;!</span>e){<span class="pl-k">if</span>(f)<span class="pl-k">for</span>(h <span class="pl-k">in</span> A){<span class="pl-k">if</span>(A[h]<span class="pl-k">&gt;=</span>f<span class="pl-k">||</span>A[h]<span class="pl-k">&lt;=</span>A.day<span class="pl-k">&amp;&amp;</span>a.key<span class="pl-k">%</span>A[h]<span class="pl-k">&gt;</span><span class="pl-c1">0</span>){e<span class="pl-k">=</span>d[h];<span class="pl-k">break</span>}}<span class="pl-k">else</span> e<span class="pl-k">=</span>d.day;e<span class="pl-k">=</span>e<span class="pl-k">||</span>d.year}g<span class="pl-k">&amp;&amp;</span>e<span class="pl-k">&amp;&amp;</span>(c<span class="pl-k">=</span>c.<span class="pl-s3">replace</span>(<span class="pl-s1"><span class="pl-pds">&quot;</span>{point.key}<span class="pl-pds">&quot;</span></span>,<span class="pl-s1"><span class="pl-pds">&quot;</span>{point.key:<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span></td>
      </tr>
      <tr>
        <td id="L155" class="blob-num js-line-number" data-line-number="155"></td>
        <td id="LC155" class="blob-code js-file-line">e<span class="pl-k">+</span><span class="pl-s1"><span class="pl-pds">&quot;</span>}<span class="pl-pds">&quot;</span></span>));<span class="pl-k">return</span> Ja(c,{point<span class="pl-k">:</span>a,series<span class="pl-k">:</span>b})}};<span class="pl-s">var</span> pa;$a<span class="pl-k">=</span>x.<span class="pl-sc">documentElement</span>.ontouchstart<span class="pl-k">!==</span>u;<span class="pl-s">var</span> Wa<span class="pl-k">=</span><span class="pl-s3">K</span>.<span class="pl-en">Pointer</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>,<span class="pl-vpf">b</span>){<span class="pl-v">this</span>.init(a,b)};<span class="pl-s3">Wa</span>.<span class="pl-sc">prototype</span><span class="pl-k">=</span>{<span class="pl-en">init</span>:<span class="pl-st">function</span>(<span class="pl-vpf">a</span>,<span class="pl-vpf">b</span>){<span class="pl-s">var</span> c<span class="pl-k">=</span>b.chart,d<span class="pl-k">=</span>c.events,e<span class="pl-k">=</span>ga<span class="pl-k">?</span><span class="pl-s1"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span><span class="pl-k">:</span>c.zoomType,c<span class="pl-k">=</span>a.inverted,f;<span class="pl-v">this</span>.<span class="pl-sc">options</span><span class="pl-k">=</span>b;<span class="pl-v">this</span>.chart<span class="pl-k">=</span>a;<span class="pl-v">this</span>.zoomX<span class="pl-k">=</span>f<span class="pl-k">=</span><span class="pl-sr"><span class="pl-pds">/</span>x<span class="pl-pds">/</span></span>.<span class="pl-s3">test</span>(e);<span class="pl-v">this</span>.zoomY<span class="pl-k">=</span>e<span class="pl-k">=</span><span class="pl-sr"><span class="pl-pds">/</span>y<span class="pl-pds">/</span></span>.<span class="pl-s3">test</span>(e);<span class="pl-v">this</span>.zoomHor<span class="pl-k">=</span>f<span class="pl-k">&amp;&amp;!</span>c<span class="pl-k">||</span>e<span class="pl-k">&amp;&amp;</span>c;<span class="pl-v">this</span>.zoomVert<span class="pl-k">=</span>e<span class="pl-k">&amp;&amp;!</span>c<span class="pl-k">||</span>f<span class="pl-k">&amp;&amp;</span>c;<span class="pl-v">this</span>.hasZoom<span class="pl-k">=</span>f<span class="pl-k">||</span>e;<span class="pl-v">this</span>.runChartClick<span class="pl-k">=</span>d<span class="pl-k">&amp;&amp;!!</span>d.click;<span class="pl-v">this</span>.pinchDown<span class="pl-k">=</span>[];<span class="pl-v">this</span>.lastValidTouch<span class="pl-k">=</span>{};<span class="pl-k">if</span>(K.Tooltip<span class="pl-k">&amp;&amp;</span>b.tooltip.enabled)a.tooltip<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">Nb</span>(a,b.tooltip),</td>
      </tr>
      <tr>
        <td id="L156" class="blob-num js-line-number" data-line-number="156"></td>
        <td id="LC156" class="blob-code js-file-line"><span class="pl-v">this</span>.followTouchMove<span class="pl-k">=</span>b.tooltip.followTouchMove;<span class="pl-v">this</span>.setDOMEvents()},<span class="pl-en">normalize</span>:<span class="pl-st">function</span>(<span class="pl-vpf">a</span>,<span class="pl-vpf">b</span>){<span class="pl-s">var</span> c,d,a<span class="pl-k">=</span>a<span class="pl-k">||</span><span class="pl-s3">window</span>.<span class="pl-s3">event</span>,a<span class="pl-k">=</span>Tb(a);<span class="pl-k">if</span>(<span class="pl-k">!</span>a.<span class="pl-sc">target</span>)a.<span class="pl-sc">target</span><span class="pl-k">=</span>a.srcElement;d<span class="pl-k">=</span>a.touches<span class="pl-k">?</span>a.touches.<span class="pl-sc">length</span><span class="pl-k">?</span>a.touches.<span class="pl-s3">item</span>(<span class="pl-c1">0</span>)<span class="pl-k">:</span>a.changedTouches[<span class="pl-c1">0</span>]<span class="pl-k">:</span>a;<span class="pl-k">if</span>(<span class="pl-k">!</span>b)<span class="pl-v">this</span>.chartPosition<span class="pl-k">=</span>b<span class="pl-k">=</span>Sb(<span class="pl-v">this</span>.chart.container);d.<span class="pl-sc">pageX</span><span class="pl-k">===</span>u<span class="pl-k">?</span>(c<span class="pl-k">=</span>t(a.<span class="pl-sc">x</span>,a.clientX<span class="pl-k">-</span>b.<span class="pl-sc">left</span>),d<span class="pl-k">=</span>a.<span class="pl-sc">y</span>)<span class="pl-k">:</span>(c<span class="pl-k">=</span>d.<span class="pl-sc">pageX</span><span class="pl-k">-</span>b.<span class="pl-sc">left</span>,d<span class="pl-k">=</span>d.<span class="pl-sc">pageY</span><span class="pl-k">-</span>b.<span class="pl-sc">top</span>);<span class="pl-k">return</span> r(a,{chartX<span class="pl-k">:</span>v(c),chartY<span class="pl-k">:</span>v(d)})},<span class="pl-en">getCoordinates</span>:<span class="pl-st">function</span>(<span class="pl-vpf">a</span>){<span class="pl-s">var</span> b<span class="pl-k">=</span>{xAxis<span class="pl-k">:</span>[],yAxis<span class="pl-k">:</span>[]};q(<span class="pl-v">this</span>.chart.axes,<span class="pl-st">function</span>(<span class="pl-vpf">c</span>){b[c.isXAxis<span class="pl-k">?</span><span class="pl-s1"><span class="pl-pds">&quot;</span>xAxis<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span></td>
      </tr>
      <tr>
        <td id="L157" class="blob-num js-line-number" data-line-number="157"></td>
        <td id="LC157" class="blob-code js-file-line"><span class="pl-s1"><span class="pl-pds">&quot;</span>yAxis<span class="pl-pds">&quot;</span></span>].<span class="pl-s3">push</span>({axis<span class="pl-k">:</span>c,value<span class="pl-k">:</span>c.toValue(a[c.horiz<span class="pl-k">?</span><span class="pl-s1"><span class="pl-pds">&quot;</span>chartX<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s1"><span class="pl-pds">&quot;</span>chartY<span class="pl-pds">&quot;</span></span>])})});<span class="pl-k">return</span> b},<span class="pl-en">getIndex</span>:<span class="pl-st">function</span>(<span class="pl-vpf">a</span>){<span class="pl-s">var</span> b<span class="pl-k">=</span><span class="pl-v">this</span>.chart;<span class="pl-k">return</span> b.inverted<span class="pl-k">?</span>b.plotHeight<span class="pl-k">+</span>b.plotTop<span class="pl-k">-</span>a.chartY<span class="pl-k">:</span>a.chartX<span class="pl-k">-</span>b.plotLeft},<span class="pl-en">runPointActions</span>:<span class="pl-st">function</span>(<span class="pl-vpf">a</span>){<span class="pl-s">var</span> b<span class="pl-k">=</span><span class="pl-v">this</span>.chart,c<span class="pl-k">=</span>b.series,d<span class="pl-k">=</span>b.tooltip,e,f,g<span class="pl-k">=</span>b.hoverPoint,h<span class="pl-k">=</span>b.hoverSeries,i,j,k<span class="pl-k">=</span>b.chartWidth,l<span class="pl-k">=</span><span class="pl-v">this</span>.getIndex(a);<span class="pl-k">if</span>(d<span class="pl-k">&amp;&amp;</span><span class="pl-v">this</span>.<span class="pl-sc">options</span>.tooltip.shared<span class="pl-k">&amp;&amp;</span>(<span class="pl-k">!</span>h<span class="pl-k">||!</span>h.noSharedTooltip)){f<span class="pl-k">=</span>[];i<span class="pl-k">=</span>c.<span class="pl-sc">length</span>;<span class="pl-k">for</span>(j<span class="pl-k">=</span><span class="pl-c1">0</span>;j<span class="pl-k">&lt;</span>i;j<span class="pl-k">++</span>)<span class="pl-k">if</span>(c[j].visible<span class="pl-k">&amp;&amp;</span>c[j].<span class="pl-sc">options</span>.enableMouseTracking<span class="pl-k">!==!</span><span class="pl-c1">1</span><span class="pl-k">&amp;&amp;!</span>c[j].noSharedTooltip<span class="pl-k">&amp;&amp;</span></td>
      </tr>
      <tr>
        <td id="L158" class="blob-num js-line-number" data-line-number="158"></td>
        <td id="LC158" class="blob-code js-file-line">c[j].singularTooltips<span class="pl-k">!==!</span><span class="pl-c1">0</span><span class="pl-k">&amp;&amp;</span>c[j].tooltipPoints.<span class="pl-sc">length</span><span class="pl-k">&amp;&amp;</span>(e<span class="pl-k">=</span>c[j].tooltipPoints[l])<span class="pl-k">&amp;&amp;</span>e.series)e._dist<span class="pl-k">=</span>Q(l<span class="pl-k">-</span>e.clientX),k<span class="pl-k">=</span>L(k,e._dist),f.<span class="pl-s3">push</span>(e);<span class="pl-k">for</span>(i<span class="pl-k">=</span>f.<span class="pl-sc">length</span>;i<span class="pl-k">--</span>;)f[i]._dist<span class="pl-k">&gt;</span>k<span class="pl-k">&amp;&amp;</span>f.<span class="pl-s3">splice</span>(i,<span class="pl-c1">1</span>);<span class="pl-k">if</span>(f.<span class="pl-sc">length</span><span class="pl-k">&amp;&amp;</span>f[<span class="pl-c1">0</span>].clientX<span class="pl-k">!==</span><span class="pl-v">this</span>.hoverX)d.refresh(f,a),<span class="pl-v">this</span>.hoverX<span class="pl-k">=</span>f[<span class="pl-c1">0</span>].clientX}c<span class="pl-k">=</span>h<span class="pl-k">&amp;&amp;</span>h.tooltipOptions.followPointer;<span class="pl-k">if</span>(h<span class="pl-k">&amp;&amp;</span>h.tracker<span class="pl-k">&amp;&amp;!</span>c){<span class="pl-k">if</span>((e<span class="pl-k">=</span>h.tooltipPoints[l])<span class="pl-k">&amp;&amp;</span>e<span class="pl-k">!==</span>g)e.onMouseOver(a)}<span class="pl-k">else</span> d<span class="pl-k">&amp;&amp;</span>c<span class="pl-k">&amp;&amp;!</span>d.isHidden<span class="pl-k">&amp;&amp;</span>(h<span class="pl-k">=</span>d.getAnchor([{}],a),d.updatePosition({plotX<span class="pl-k">:</span>h[<span class="pl-c1">0</span>],plotY<span class="pl-k">:</span>h[<span class="pl-c1">1</span>]}));<span class="pl-k">if</span>(d<span class="pl-k">&amp;&amp;!</span><span class="pl-v">this</span>._onDocumentMouseMove)<span class="pl-v">this</span>._onDocumentMouseMove<span class="pl-k">=</span></td>
      </tr>
      <tr>
        <td id="L159" class="blob-num js-line-number" data-line-number="159"></td>
        <td id="LC159" class="blob-code js-file-line"><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){<span class="pl-k">if</span>(W[pa])W[pa].pointer.onDocumentMouseMove(a)},N(x,<span class="pl-s1"><span class="pl-pds">&quot;</span>mousemove<span class="pl-pds">&quot;</span></span>,<span class="pl-v">this</span>._onDocumentMouseMove);q(b.axes,<span class="pl-st">function</span>(<span class="pl-vpf">b</span>){b.drawCrosshair(a,p(e,g))})},<span class="pl-en">reset</span>:<span class="pl-st">function</span>(<span class="pl-vpf">a</span>,<span class="pl-vpf">b</span>){<span class="pl-s">var</span> c<span class="pl-k">=</span><span class="pl-v">this</span>.chart,d<span class="pl-k">=</span>c.hoverSeries,e<span class="pl-k">=</span>c.hoverPoint,f<span class="pl-k">=</span>c.tooltip,g<span class="pl-k">=</span>f<span class="pl-k">&amp;&amp;</span>f.shared<span class="pl-k">?</span>c.hoverPoints<span class="pl-k">:</span>e;(a<span class="pl-k">=</span>a<span class="pl-k">&amp;&amp;</span>f<span class="pl-k">&amp;&amp;</span>g)<span class="pl-k">&amp;&amp;</span>ra(g)[<span class="pl-c1">0</span>].plotX<span class="pl-k">===</span>u<span class="pl-k">&amp;&amp;</span>(a<span class="pl-k">=!</span><span class="pl-c1">1</span>);<span class="pl-k">if</span>(a)f.refresh(g),e<span class="pl-k">&amp;&amp;</span>e.setState(e.state,<span class="pl-k">!</span><span class="pl-c1">0</span>);<span class="pl-k">else</span>{<span class="pl-k">if</span>(e)e.onMouseOut();<span class="pl-k">if</span>(d)d.onMouseOut();f<span class="pl-k">&amp;&amp;</span>f.hide(b);<span class="pl-k">if</span>(<span class="pl-v">this</span>._onDocumentMouseMove)X(x,<span class="pl-s1"><span class="pl-pds">&quot;</span>mousemove<span class="pl-pds">&quot;</span></span>,<span class="pl-v">this</span>._onDocumentMouseMove),<span class="pl-v">this</span>._onDocumentMouseMove<span class="pl-k">=</span></td>
      </tr>
      <tr>
        <td id="L160" class="blob-num js-line-number" data-line-number="160"></td>
        <td id="LC160" class="blob-code js-file-line"><span class="pl-c1">null</span>;q(c.axes,<span class="pl-st">function</span>(<span class="pl-vpf">a</span>){a.hideCrosshair()});<span class="pl-v">this</span>.hoverX<span class="pl-k">=</span><span class="pl-c1">null</span>}},<span class="pl-en">scaleGroups</span>:<span class="pl-st">function</span>(<span class="pl-vpf">a</span>,<span class="pl-vpf">b</span>){<span class="pl-s">var</span> c<span class="pl-k">=</span><span class="pl-v">this</span>.chart,d;q(c.series,<span class="pl-st">function</span>(<span class="pl-vpf">e</span>){d<span class="pl-k">=</span>a<span class="pl-k">||</span>e.getPlotBox();e.xAxis<span class="pl-k">&amp;&amp;</span>e.xAxis.zoomEnabled<span class="pl-k">&amp;&amp;</span>(e.group.attr(d),e.markerGroup<span class="pl-k">&amp;&amp;</span>(e.markerGroup.attr(d),e.markerGroup.<span class="pl-sc">clip</span>(b<span class="pl-k">?</span>c.clipRect<span class="pl-k">:</span><span class="pl-c1">null</span>)),e.dataLabelsGroup<span class="pl-k">&amp;&amp;</span>e.dataLabelsGroup.attr(d))});c.clipRect.attr(b<span class="pl-k">||</span>c.clipBox)},<span class="pl-en">dragStart</span>:<span class="pl-st">function</span>(<span class="pl-vpf">a</span>){<span class="pl-s">var</span> b<span class="pl-k">=</span><span class="pl-v">this</span>.chart;b.mouseIsDown<span class="pl-k">=</span>a.<span class="pl-sc">type</span>;b.cancelClick<span class="pl-k">=!</span><span class="pl-c1">1</span>;b.mouseDownX<span class="pl-k">=</span><span class="pl-v">this</span>.mouseDownX<span class="pl-k">=</span>a.chartX;b.mouseDownY<span class="pl-k">=</span><span class="pl-v">this</span>.mouseDownY<span class="pl-k">=</span>a.chartY},</td>
      </tr>
      <tr>
        <td id="L161" class="blob-num js-line-number" data-line-number="161"></td>
        <td id="LC161" class="blob-code js-file-line"><span class="pl-en">drag</span>:<span class="pl-st">function</span>(<span class="pl-vpf">a</span>){<span class="pl-s">var</span> b<span class="pl-k">=</span><span class="pl-v">this</span>.chart,c<span class="pl-k">=</span>b.<span class="pl-sc">options</span>.chart,d<span class="pl-k">=</span>a.chartX,e<span class="pl-k">=</span>a.chartY,f<span class="pl-k">=</span><span class="pl-v">this</span>.zoomHor,g<span class="pl-k">=</span><span class="pl-v">this</span>.zoomVert,h<span class="pl-k">=</span>b.plotLeft,i<span class="pl-k">=</span>b.plotTop,j<span class="pl-k">=</span>b.plotWidth,k<span class="pl-k">=</span>b.plotHeight,l,n<span class="pl-k">=</span><span class="pl-v">this</span>.mouseDownX,m<span class="pl-k">=</span><span class="pl-v">this</span>.mouseDownY,o<span class="pl-k">=</span>c.panKey<span class="pl-k">&amp;&amp;</span>a[c.panKey<span class="pl-k">+</span><span class="pl-s1"><span class="pl-pds">&quot;</span>Key<span class="pl-pds">&quot;</span></span>];d<span class="pl-k">&lt;</span>h<span class="pl-k">?</span>d<span class="pl-k">=</span>h<span class="pl-k">:</span>d<span class="pl-k">&gt;</span>h<span class="pl-k">+</span>j<span class="pl-k">&amp;&amp;</span>(d<span class="pl-k">=</span>h<span class="pl-k">+</span>j);e<span class="pl-k">&lt;</span>i<span class="pl-k">?</span>e<span class="pl-k">=</span>i<span class="pl-k">:</span>e<span class="pl-k">&gt;</span>i<span class="pl-k">+</span>k<span class="pl-k">&amp;&amp;</span>(e<span class="pl-k">=</span>i<span class="pl-k">+</span>k);<span class="pl-v">this</span>.hasDragged<span class="pl-k">=</span><span class="pl-s3">Math</span>.<span class="pl-s3">sqrt</span>(<span class="pl-s3">Math</span>.<span class="pl-s3">pow</span>(n<span class="pl-k">-</span>d,<span class="pl-c1">2</span>)<span class="pl-k">+</span><span class="pl-s3">Math</span>.<span class="pl-s3">pow</span>(m<span class="pl-k">-</span>e,<span class="pl-c1">2</span>));<span class="pl-k">if</span>(<span class="pl-v">this</span>.hasDragged<span class="pl-k">&gt;</span><span class="pl-c1">10</span>){l<span class="pl-k">=</span>b.isInsidePlot(n<span class="pl-k">-</span>h,m<span class="pl-k">-</span>i);<span class="pl-k">if</span>(b.hasCartesianSeries<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.zoomX<span class="pl-k">||</span><span class="pl-v">this</span>.zoomY)<span class="pl-k">&amp;&amp;</span>l<span class="pl-k">&amp;&amp;!</span>o<span class="pl-k">&amp;&amp;!</span><span class="pl-v">this</span>.selectionMarker)<span class="pl-v">this</span>.selectionMarker<span class="pl-k">=</span>b.renderer.rect(h,i,</td>
      </tr>
      <tr>
        <td id="L162" class="blob-num js-line-number" data-line-number="162"></td>
        <td id="LC162" class="blob-code js-file-line">f<span class="pl-k">?</span><span class="pl-c1">1</span><span class="pl-k">:</span>j,g<span class="pl-k">?</span><span class="pl-c1">1</span><span class="pl-k">:</span>k,<span class="pl-c1">0</span>).attr({fill<span class="pl-k">:</span>c.selectionMarkerFill<span class="pl-k">||</span><span class="pl-s1"><span class="pl-pds">&quot;</span>rgba(69,114,167,0.25)<span class="pl-pds">&quot;</span></span>,zIndex<span class="pl-k">:</span><span class="pl-c1">7</span>}).<span class="pl-s3">add</span>();<span class="pl-v">this</span>.selectionMarker<span class="pl-k">&amp;&amp;</span>f<span class="pl-k">&amp;&amp;</span>(d<span class="pl-k">-=</span>n,<span class="pl-v">this</span>.selectionMarker.attr({width<span class="pl-k">:</span>Q(d),x<span class="pl-k">:</span>(d<span class="pl-k">&gt;</span><span class="pl-c1">0</span><span class="pl-k">?</span><span class="pl-c1">0</span><span class="pl-k">:</span>d)<span class="pl-k">+</span>n}));<span class="pl-v">this</span>.selectionMarker<span class="pl-k">&amp;&amp;</span>g<span class="pl-k">&amp;&amp;</span>(d<span class="pl-k">=</span>e<span class="pl-k">-</span>m,<span class="pl-v">this</span>.selectionMarker.attr({height<span class="pl-k">:</span>Q(d),y<span class="pl-k">:</span>(d<span class="pl-k">&gt;</span><span class="pl-c1">0</span><span class="pl-k">?</span><span class="pl-c1">0</span><span class="pl-k">:</span>d)<span class="pl-k">+</span>m}));l<span class="pl-k">&amp;&amp;!</span><span class="pl-v">this</span>.selectionMarker<span class="pl-k">&amp;&amp;</span>c.panning<span class="pl-k">&amp;&amp;</span>b.pan(a,c.panning)}},<span class="pl-en">drop</span>:<span class="pl-st">function</span>(<span class="pl-vpf">a</span>){<span class="pl-s">var</span> b<span class="pl-k">=</span><span class="pl-v">this</span>.chart,c<span class="pl-k">=</span><span class="pl-v">this</span>.hasPinched;<span class="pl-k">if</span>(<span class="pl-v">this</span>.selectionMarker){<span class="pl-s">var</span> d<span class="pl-k">=</span>{xAxis<span class="pl-k">:</span>[],yAxis<span class="pl-k">:</span>[],originalEvent<span class="pl-k">:</span>a.originalEvent<span class="pl-k">||</span>a},e<span class="pl-k">=</span><span class="pl-v">this</span>.selectionMarker,f<span class="pl-k">=</span>e.attr<span class="pl-k">?</span>e.attr(<span class="pl-s1"><span class="pl-pds">&quot;</span>x<span class="pl-pds">&quot;</span></span>)<span class="pl-k">:</span></td>
      </tr>
      <tr>
        <td id="L163" class="blob-num js-line-number" data-line-number="163"></td>
        <td id="LC163" class="blob-code js-file-line">e.<span class="pl-sc">x</span>,g<span class="pl-k">=</span>e.attr<span class="pl-k">?</span>e.attr(<span class="pl-s1"><span class="pl-pds">&quot;</span>y<span class="pl-pds">&quot;</span></span>)<span class="pl-k">:</span>e.<span class="pl-sc">y</span>,h<span class="pl-k">=</span>e.attr<span class="pl-k">?</span>e.attr(<span class="pl-s1"><span class="pl-pds">&quot;</span>width<span class="pl-pds">&quot;</span></span>)<span class="pl-k">:</span>e.<span class="pl-sc">width</span>,i<span class="pl-k">=</span>e.attr<span class="pl-k">?</span>e.attr(<span class="pl-s1"><span class="pl-pds">&quot;</span>height<span class="pl-pds">&quot;</span></span>)<span class="pl-k">:</span>e.<span class="pl-sc">height</span>,j;<span class="pl-k">if</span>(<span class="pl-v">this</span>.hasDragged<span class="pl-k">||</span>c)q(b.axes,<span class="pl-st">function</span>(<span class="pl-vpf">b</span>){<span class="pl-k">if</span>(b.zoomEnabled){<span class="pl-s">var</span> c<span class="pl-k">=</span>b.horiz,e<span class="pl-k">=</span>a.<span class="pl-sc">type</span><span class="pl-k">===</span><span class="pl-s1"><span class="pl-pds">&quot;</span>touchend<span class="pl-pds">&quot;</span></span><span class="pl-k">?</span>b.minPixelPadding<span class="pl-k">:</span><span class="pl-c1">0</span>,m<span class="pl-k">=</span>b.toValue((c<span class="pl-k">?</span>f<span class="pl-k">:</span>g)<span class="pl-k">+</span>e),c<span class="pl-k">=</span>b.toValue((c<span class="pl-k">?</span>f<span class="pl-k">+</span>h<span class="pl-k">:</span>g<span class="pl-k">+</span>i)<span class="pl-k">-</span>e);<span class="pl-k">!</span><span class="pl-s3">isNaN</span>(m)<span class="pl-k">&amp;&amp;!</span><span class="pl-s3">isNaN</span>(c)<span class="pl-k">&amp;&amp;</span>(d[b.coll].<span class="pl-s3">push</span>({axis<span class="pl-k">:</span>b,min<span class="pl-k">:</span>L(m,c),max<span class="pl-k">:</span>t(m,c)}),j<span class="pl-k">=!</span><span class="pl-c1">0</span>)}}),j<span class="pl-k">&amp;&amp;</span>I(b,<span class="pl-s1"><span class="pl-pds">&quot;</span>selection<span class="pl-pds">&quot;</span></span>,d,<span class="pl-st">function</span>(<span class="pl-vpf">a</span>){b.zoom(r(a,c<span class="pl-k">?</span>{animation<span class="pl-k">:!</span><span class="pl-c1">1</span>}<span class="pl-k">:</span><span class="pl-c1">null</span>))});<span class="pl-v">this</span>.selectionMarker<span class="pl-k">=</span><span class="pl-v">this</span>.selectionMarker.destroy();c<span class="pl-k">&amp;&amp;</span><span class="pl-v">this</span>.scaleGroups()}<span class="pl-k">if</span>(b)B(b.container,</td>
      </tr>
      <tr>
        <td id="L164" class="blob-num js-line-number" data-line-number="164"></td>
        <td id="LC164" class="blob-code js-file-line">{cursor<span class="pl-k">:</span>b._cursor}),b.cancelClick<span class="pl-k">=</span><span class="pl-v">this</span>.hasDragged<span class="pl-k">&gt;</span><span class="pl-c1">10</span>,b.mouseIsDown<span class="pl-k">=</span><span class="pl-v">this</span>.hasDragged<span class="pl-k">=</span><span class="pl-v">this</span>.hasPinched<span class="pl-k">=!</span><span class="pl-c1">1</span>,<span class="pl-v">this</span>.pinchDown<span class="pl-k">=</span>[]},<span class="pl-en">onContainerMouseDown</span>:<span class="pl-st">function</span>(<span class="pl-vpf">a</span>){a<span class="pl-k">=</span><span class="pl-v">this</span>.normalize(a);a.preventDefault<span class="pl-k">&amp;&amp;</span>a.preventDefault();<span class="pl-v">this</span>.dragStart(a)},<span class="pl-en">onDocumentMouseUp</span>:<span class="pl-st">function</span>(<span class="pl-vpf">a</span>){W[pa]<span class="pl-k">&amp;&amp;</span>W[pa].pointer.drop(a)},<span class="pl-en">onDocumentMouseMove</span>:<span class="pl-st">function</span>(<span class="pl-vpf">a</span>){<span class="pl-s">var</span> b<span class="pl-k">=</span><span class="pl-v">this</span>.chart,c<span class="pl-k">=</span><span class="pl-v">this</span>.chartPosition,d<span class="pl-k">=</span>b.hoverSeries,a<span class="pl-k">=</span><span class="pl-v">this</span>.normalize(a,c);c<span class="pl-k">&amp;&amp;</span>d<span class="pl-k">&amp;&amp;!</span><span class="pl-v">this</span>.inClass(a.<span class="pl-sc">target</span>,<span class="pl-s1"><span class="pl-pds">&quot;</span>highcharts-tracker<span class="pl-pds">&quot;</span></span>)<span class="pl-k">&amp;&amp;!</span>b.isInsidePlot(a.chartX<span class="pl-k">-</span>b.plotLeft,a.chartY<span class="pl-k">-</span>b.plotTop)<span class="pl-k">&amp;&amp;</span></td>
      </tr>
      <tr>
        <td id="L165" class="blob-num js-line-number" data-line-number="165"></td>
        <td id="LC165" class="blob-code js-file-line"><span class="pl-v">this</span>.<span class="pl-s3">reset</span>()},<span class="pl-en">onContainerMouseLeave</span>:<span class="pl-st">function</span>(){<span class="pl-s">var</span> a<span class="pl-k">=</span>W[pa];<span class="pl-k">if</span>(a)a.pointer.<span class="pl-s3">reset</span>(),a.pointer.chartPosition<span class="pl-k">=</span><span class="pl-c1">null</span>},<span class="pl-en">onContainerMouseMove</span>:<span class="pl-st">function</span>(<span class="pl-vpf">a</span>){<span class="pl-s">var</span> b<span class="pl-k">=</span><span class="pl-v">this</span>.chart;pa<span class="pl-k">=</span>b.<span class="pl-sc">index</span>;a<span class="pl-k">=</span><span class="pl-v">this</span>.normalize(a);a.returnValue<span class="pl-k">=!</span><span class="pl-c1">1</span>;b.mouseIsDown<span class="pl-k">===</span><span class="pl-s1"><span class="pl-pds">&quot;</span>mousedown<span class="pl-pds">&quot;</span></span><span class="pl-k">&amp;&amp;</span><span class="pl-v">this</span>.drag(a);(<span class="pl-v">this</span>.inClass(a.<span class="pl-sc">target</span>,<span class="pl-s1"><span class="pl-pds">&quot;</span>highcharts-tracker<span class="pl-pds">&quot;</span></span>)<span class="pl-k">||</span>b.isInsidePlot(a.chartX<span class="pl-k">-</span>b.plotLeft,a.chartY<span class="pl-k">-</span>b.plotTop))<span class="pl-k">&amp;&amp;!</span>b.openMenu<span class="pl-k">&amp;&amp;</span><span class="pl-v">this</span>.runPointActions(a)},<span class="pl-en">inClass</span>:<span class="pl-st">function</span>(<span class="pl-vpf">a</span>,<span class="pl-vpf">b</span>){<span class="pl-k">for</span>(<span class="pl-s">var</span> c;a;){<span class="pl-k">if</span>(c<span class="pl-k">=</span>F(a,<span class="pl-s1"><span class="pl-pds">&quot;</span>class<span class="pl-pds">&quot;</span></span>))<span class="pl-k">if</span>(c.<span class="pl-s3">indexOf</span>(b)<span class="pl-k">!==-</span><span class="pl-c1">1</span>)<span class="pl-k">return</span><span class="pl-k">!</span><span class="pl-c1">0</span>;<span class="pl-k">else</span> <span class="pl-k">if</span>(c.<span class="pl-s3">indexOf</span>(<span class="pl-s1"><span class="pl-pds">&quot;</span>highcharts-container<span class="pl-pds">&quot;</span></span>)<span class="pl-k">!==</span></td>
      </tr>
      <tr>
        <td id="L166" class="blob-num js-line-number" data-line-number="166"></td>
        <td id="LC166" class="blob-code js-file-line"><span class="pl-k">-</span><span class="pl-c1">1</span>)<span class="pl-k">return</span><span class="pl-k">!</span><span class="pl-c1">1</span>;a<span class="pl-k">=</span>a.<span class="pl-sc">parentNode</span>}},<span class="pl-en">onTrackerMouseOut</span>:<span class="pl-st">function</span>(<span class="pl-vpf">a</span>){<span class="pl-s">var</span> b<span class="pl-k">=</span><span class="pl-v">this</span>.chart.hoverSeries,c<span class="pl-k">=</span>(a<span class="pl-k">=</span>a.relatedTarget<span class="pl-k">||</span>a.toElement)<span class="pl-k">&amp;&amp;</span>a.point<span class="pl-k">&amp;&amp;</span>a.point.series;<span class="pl-k">if</span>(b<span class="pl-k">&amp;&amp;!</span>b.<span class="pl-sc">options</span>.stickyTracking<span class="pl-k">&amp;&amp;!</span><span class="pl-v">this</span>.inClass(a,<span class="pl-s1"><span class="pl-pds">&quot;</span>highcharts-tooltip<span class="pl-pds">&quot;</span></span>)<span class="pl-k">&amp;&amp;</span>c<span class="pl-k">!==</span>b)b.onMouseOut()},<span class="pl-en">onContainerClick</span>:<span class="pl-st">function</span>(<span class="pl-vpf">a</span>){<span class="pl-s">var</span> b<span class="pl-k">=</span><span class="pl-v">this</span>.chart,c<span class="pl-k">=</span>b.hoverPoint,d<span class="pl-k">=</span>b.plotLeft,e<span class="pl-k">=</span>b.plotTop,a<span class="pl-k">=</span><span class="pl-v">this</span>.normalize(a);a.cancelBubble<span class="pl-k">=!</span><span class="pl-c1">0</span>;b.cancelClick<span class="pl-k">||</span>(c<span class="pl-k">&amp;&amp;</span><span class="pl-v">this</span>.inClass(a.<span class="pl-sc">target</span>,<span class="pl-s1"><span class="pl-pds">&quot;</span>highcharts-tracker<span class="pl-pds">&quot;</span></span>)<span class="pl-k">?</span>(I(c.series,<span class="pl-s1"><span class="pl-pds">&quot;</span>click<span class="pl-pds">&quot;</span></span>,r(a,{point<span class="pl-k">:</span>c})),b.hoverPoint<span class="pl-k">&amp;&amp;</span>c.firePointEvent(<span class="pl-s1"><span class="pl-pds">&quot;</span>click<span class="pl-pds">&quot;</span></span>,</td>
      </tr>
      <tr>
        <td id="L167" class="blob-num js-line-number" data-line-number="167"></td>
        <td id="LC167" class="blob-code js-file-line">a))<span class="pl-k">:</span>(r(a,<span class="pl-v">this</span>.getCoordinates(a)),b.isInsidePlot(a.chartX<span class="pl-k">-</span>d,a.chartY<span class="pl-k">-</span>e)<span class="pl-k">&amp;&amp;</span>I(b,<span class="pl-s1"><span class="pl-pds">&quot;</span>click<span class="pl-pds">&quot;</span></span>,a)))},<span class="pl-en">setDOMEvents</span>:<span class="pl-st">function</span>(){<span class="pl-s">var</span> a<span class="pl-k">=</span><span class="pl-v">this</span>,b<span class="pl-k">=</span>a.chart.container;<span class="pl-s3">b</span>.<span class="pl-en">onmousedown</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">b</span>){a.onContainerMouseDown(b)};<span class="pl-s3">b</span>.<span class="pl-en">onmousemove</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">b</span>){a.onContainerMouseMove(b)};<span class="pl-s3">b</span>.<span class="pl-en">onclick</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">b</span>){a.onContainerClick(b)};N(b,<span class="pl-s1"><span class="pl-pds">&quot;</span>mouseleave<span class="pl-pds">&quot;</span></span>,a.onContainerMouseLeave);ab<span class="pl-k">===</span><span class="pl-c1">1</span><span class="pl-k">&amp;&amp;</span>N(x,<span class="pl-s1"><span class="pl-pds">&quot;</span>mouseup<span class="pl-pds">&quot;</span></span>,a.onDocumentMouseUp);<span class="pl-k">if</span>($a)<span class="pl-s3">b</span>.<span class="pl-en">ontouchstart</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">b</span>){a.onContainerTouchStart(b)},<span class="pl-s3">b</span>.<span class="pl-en">ontouchmove</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">b</span>){a.onContainerTouchMove(b)},ab<span class="pl-k">===</span><span class="pl-c1">1</span><span class="pl-k">&amp;&amp;</span></td>
      </tr>
      <tr>
        <td id="L168" class="blob-num js-line-number" data-line-number="168"></td>
        <td id="LC168" class="blob-code js-file-line">N(x,<span class="pl-s1"><span class="pl-pds">&quot;</span>touchend<span class="pl-pds">&quot;</span></span>,a.onDocumentTouchEnd)},<span class="pl-en">destroy</span>:<span class="pl-st">function</span>(){<span class="pl-s">var</span> a;X(<span class="pl-v">this</span>.chart.container,<span class="pl-s1"><span class="pl-pds">&quot;</span>mouseleave<span class="pl-pds">&quot;</span></span>,<span class="pl-v">this</span>.onContainerMouseLeave);ab<span class="pl-k">||</span>(X(x,<span class="pl-s1"><span class="pl-pds">&quot;</span>mouseup<span class="pl-pds">&quot;</span></span>,<span class="pl-v">this</span>.onDocumentMouseUp),X(x,<span class="pl-s1"><span class="pl-pds">&quot;</span>touchend<span class="pl-pds">&quot;</span></span>,<span class="pl-v">this</span>.onDocumentTouchEnd));<span class="pl-s3">clearInterval</span>(<span class="pl-v">this</span>.tooltipTimeout);<span class="pl-k">for</span>(a <span class="pl-k">in</span> <span class="pl-v">this</span>)<span class="pl-v">this</span>[a]<span class="pl-k">=</span><span class="pl-c1">null</span>}};r(K.Pointer.<span class="pl-sc">prototype</span>,{<span class="pl-en">pinchTranslate</span>:<span class="pl-st">function</span>(<span class="pl-vpf">a</span>,<span class="pl-vpf">b</span>,<span class="pl-vpf">c</span>,<span class="pl-vpf">d</span>,<span class="pl-vpf">e</span>,<span class="pl-vpf">f</span>){(<span class="pl-v">this</span>.zoomHor<span class="pl-k">||</span><span class="pl-v">this</span>.pinchHor)<span class="pl-k">&amp;&amp;</span><span class="pl-v">this</span>.pinchTranslateDirection(<span class="pl-k">!</span><span class="pl-c1">0</span>,a,b,c,d,e,f);(<span class="pl-v">this</span>.zoomVert<span class="pl-k">||</span><span class="pl-v">this</span>.pinchVert)<span class="pl-k">&amp;&amp;</span><span class="pl-v">this</span>.pinchTranslateDirection(<span class="pl-k">!</span><span class="pl-c1">1</span>,a,b,c,d,e,f)},<span class="pl-en">pinchTranslateDirection</span>:<span class="pl-st">function</span>(<span class="pl-vpf">a</span>,</td>
      </tr>
      <tr>
        <td id="L169" class="blob-num js-line-number" data-line-number="169"></td>
        <td id="LC169" class="blob-code js-file-line"><span class="pl-vpf">b</span>,<span class="pl-vpf">c</span>,<span class="pl-vpf">d</span>,<span class="pl-vpf">e</span>,<span class="pl-vpf">f</span>,<span class="pl-vpf">g</span>,<span class="pl-vpf">h</span>){<span class="pl-s">var</span> i<span class="pl-k">=</span><span class="pl-v">this</span>.chart,j<span class="pl-k">=</span>a<span class="pl-k">?</span><span class="pl-s1"><span class="pl-pds">&quot;</span>x<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s1"><span class="pl-pds">&quot;</span>y<span class="pl-pds">&quot;</span></span>,k<span class="pl-k">=</span>a<span class="pl-k">?</span><span class="pl-s1"><span class="pl-pds">&quot;</span>X<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s1"><span class="pl-pds">&quot;</span>Y<span class="pl-pds">&quot;</span></span>,l<span class="pl-k">=</span><span class="pl-s1"><span class="pl-pds">&quot;</span>chart<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>k,n<span class="pl-k">=</span>a<span class="pl-k">?</span><span class="pl-s1"><span class="pl-pds">&quot;</span>width<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s1"><span class="pl-pds">&quot;</span>height<span class="pl-pds">&quot;</span></span>,m<span class="pl-k">=</span>i[<span class="pl-s1"><span class="pl-pds">&quot;</span>plot<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>(a<span class="pl-k">?</span><span class="pl-s1"><span class="pl-pds">&quot;</span>Left<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s1"><span class="pl-pds">&quot;</span>Top<span class="pl-pds">&quot;</span></span>)],o,p,q<span class="pl-k">=</span>h<span class="pl-k">||</span><span class="pl-c1">1</span>,r<span class="pl-k">=</span>i.inverted,C<span class="pl-k">=</span>i.bounds[a<span class="pl-k">?</span><span class="pl-s1"><span class="pl-pds">&quot;</span>h<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s1"><span class="pl-pds">&quot;</span>v<span class="pl-pds">&quot;</span></span>],t<span class="pl-k">=</span>b.<span class="pl-sc">length</span><span class="pl-k">===</span><span class="pl-c1">1</span>,s<span class="pl-k">=</span>b[<span class="pl-c1">0</span>][l],v<span class="pl-k">=</span>c[<span class="pl-c1">0</span>][l],u<span class="pl-k">=!</span>t<span class="pl-k">&amp;&amp;</span>b[<span class="pl-c1">1</span>][l],w<span class="pl-k">=!</span>t<span class="pl-k">&amp;&amp;</span>c[<span class="pl-c1">1</span>][l],x,<span class="pl-en">c</span><span class="pl-k">=</span><span class="pl-st">function</span>(){<span class="pl-k">!</span>t<span class="pl-k">&amp;&amp;</span>Q(s<span class="pl-k">-</span>u)<span class="pl-k">&gt;</span><span class="pl-c1">20</span><span class="pl-k">&amp;&amp;</span>(q<span class="pl-k">=</span>h<span class="pl-k">||</span>Q(v<span class="pl-k">-</span>w)/Q(s<span class="pl-k">-</span>u));p<span class="pl-k">=</span>(m<span class="pl-k">-</span>v)/q<span class="pl-k">+</span>s;o<span class="pl-k">=</span>i[<span class="pl-s1"><span class="pl-pds">&quot;</span>plot<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>(a<span class="pl-k">?</span><span class="pl-s1"><span class="pl-pds">&quot;</span>Width<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s1"><span class="pl-pds">&quot;</span>Height<span class="pl-pds">&quot;</span></span>)]/q};c();b<span class="pl-k">=</span>p;b<span class="pl-k">&lt;</span>C.min<span class="pl-k">?</span>(b<span class="pl-k">=</span>C.min,x<span class="pl-k">=!</span><span class="pl-c1">0</span>)<span class="pl-k">:</span>b<span class="pl-k">+</span>o<span class="pl-k">&gt;</span>C.max<span class="pl-k">&amp;&amp;</span>(b<span class="pl-k">=</span>C.max<span class="pl-k">-</span>o,x<span class="pl-k">=!</span><span class="pl-c1">0</span>);x<span class="pl-k">?</span>(v<span class="pl-k">-=</span><span class="pl-c1">0.8</span><span class="pl-k">*</span>(v<span class="pl-k">-</span>g[j][<span class="pl-c1">0</span>]),t<span class="pl-k">||</span>(w<span class="pl-k">-=</span><span class="pl-c1">0.8</span><span class="pl-k">*</span>(w<span class="pl-k">-</span>g[j][<span class="pl-c1">1</span>])),c())<span class="pl-k">:</span>g[j]<span class="pl-k">=</span>[v,w];r<span class="pl-k">||</span>(f[j]<span class="pl-k">=</span>p<span class="pl-k">-</span>m,f[n]<span class="pl-k">=</span>o);f<span class="pl-k">=</span>r<span class="pl-k">?</span><span class="pl-c1">1</span>/q<span class="pl-k">:</span>q;e[n]<span class="pl-k">=</span>o;e[j]<span class="pl-k">=</span>b;d[r<span class="pl-k">?</span>a<span class="pl-k">?</span><span class="pl-s1"><span class="pl-pds">&quot;</span>scaleY<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span></td>
      </tr>
      <tr>
        <td id="L170" class="blob-num js-line-number" data-line-number="170"></td>
        <td id="LC170" class="blob-code js-file-line"><span class="pl-s1"><span class="pl-pds">&quot;</span>scaleX<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s1"><span class="pl-pds">&quot;</span>scale<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>k]<span class="pl-k">=</span>q;d[<span class="pl-s1"><span class="pl-pds">&quot;</span>translate<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>k]<span class="pl-k">=</span>f<span class="pl-k">*</span>m<span class="pl-k">+</span>(v<span class="pl-k">-</span>f<span class="pl-k">*</span>s)},<span class="pl-en">pinch</span>:<span class="pl-st">function</span>(<span class="pl-vpf">a</span>){<span class="pl-s">var</span> b<span class="pl-k">=</span><span class="pl-v">this</span>,c<span class="pl-k">=</span>b.chart,d<span class="pl-k">=</span>b.pinchDown,e<span class="pl-k">=</span>b.followTouchMove,f<span class="pl-k">=</span>a.touches,g<span class="pl-k">=</span>f.<span class="pl-sc">length</span>,h<span class="pl-k">=</span>b.lastValidTouch,i<span class="pl-k">=</span>b.hasZoom,j<span class="pl-k">=</span>b.selectionMarker,k<span class="pl-k">=</span>{},l<span class="pl-k">=</span>g<span class="pl-k">===</span><span class="pl-c1">1</span><span class="pl-k">&amp;&amp;</span>(b.inClass(a.<span class="pl-sc">target</span>,<span class="pl-s1"><span class="pl-pds">&quot;</span>highcharts-tracker<span class="pl-pds">&quot;</span></span>)<span class="pl-k">&amp;&amp;</span>c.runTrackerClick<span class="pl-k">||</span>b.runChartClick),n<span class="pl-k">=</span>{};(i<span class="pl-k">||</span>e)<span class="pl-k">&amp;&amp;!</span>l<span class="pl-k">&amp;&amp;</span>a.preventDefault();Va(f,<span class="pl-st">function</span>(<span class="pl-vpf">a</span>){<span class="pl-k">return</span> b.normalize(a)});<span class="pl-k">if</span>(a.<span class="pl-sc">type</span><span class="pl-k">===</span><span class="pl-s1"><span class="pl-pds">&quot;</span>touchstart<span class="pl-pds">&quot;</span></span>)q(f,<span class="pl-st">function</span>(<span class="pl-vpf">a</span>,<span class="pl-vpf">b</span>){d[b]<span class="pl-k">=</span>{chartX<span class="pl-k">:</span>a.chartX,chartY<span class="pl-k">:</span>a.chartY}}),h.<span class="pl-sc">x</span><span class="pl-k">=</span>[d[<span class="pl-c1">0</span>].chartX,d[<span class="pl-c1">1</span>]<span class="pl-k">&amp;&amp;</span>d[<span class="pl-c1">1</span>].chartX],h.<span class="pl-sc">y</span><span class="pl-k">=</span>[d[<span class="pl-c1">0</span>].chartY,</td>
      </tr>
      <tr>
        <td id="L171" class="blob-num js-line-number" data-line-number="171"></td>
        <td id="LC171" class="blob-code js-file-line">d[<span class="pl-c1">1</span>]<span class="pl-k">&amp;&amp;</span>d[<span class="pl-c1">1</span>].chartY],q(c.axes,<span class="pl-st">function</span>(<span class="pl-vpf">a</span>){<span class="pl-k">if</span>(a.zoomEnabled){<span class="pl-s">var</span> b<span class="pl-k">=</span>c.bounds[a.horiz<span class="pl-k">?</span><span class="pl-s1"><span class="pl-pds">&quot;</span>h<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s1"><span class="pl-pds">&quot;</span>v<span class="pl-pds">&quot;</span></span>],d<span class="pl-k">=</span>a.minPixelPadding,e<span class="pl-k">=</span>a.toPixels(p(a.<span class="pl-sc">options</span>.min,a.dataMin)),f<span class="pl-k">=</span>a.toPixels(p(a.<span class="pl-sc">options</span>.max,a.dataMax)),g<span class="pl-k">=</span>L(e,f),e<span class="pl-k">=</span>t(e,f);b.min<span class="pl-k">=</span>L(a.pos,g<span class="pl-k">-</span>d);b.max<span class="pl-k">=</span>t(a.pos<span class="pl-k">+</span>a.len,e<span class="pl-k">+</span>d)}}),b.res<span class="pl-k">=!</span><span class="pl-c1">0</span>;<span class="pl-k">else</span> <span class="pl-k">if</span>(d.<span class="pl-sc">length</span>){<span class="pl-k">if</span>(<span class="pl-k">!</span>j)b.selectionMarker<span class="pl-k">=</span>j<span class="pl-k">=</span>r({destroy<span class="pl-k">:</span>sa},c.plotBox);b.pinchTranslate(d,f,k,j,n,h);b.hasPinched<span class="pl-k">=</span>i;b.scaleGroups(k,n);<span class="pl-k">if</span>(<span class="pl-k">!</span>i<span class="pl-k">&amp;&amp;</span>e<span class="pl-k">&amp;&amp;</span>g<span class="pl-k">===</span><span class="pl-c1">1</span>)<span class="pl-v">this</span>.runPointActions(b.normalize(a));<span class="pl-k">else</span> <span class="pl-k">if</span>(b.res)b.res<span class="pl-k">=!</span><span class="pl-c1">1</span>,<span class="pl-v">this</span>.<span class="pl-s3">reset</span>(<span class="pl-k">!</span><span class="pl-c1">1</span>,<span class="pl-c1">0</span>)}},<span class="pl-en">onContainerTouchStart</span>:<span class="pl-st">function</span>(<span class="pl-vpf">a</span>){<span class="pl-s">var</span> b<span class="pl-k">=</span></td>
      </tr>
      <tr>
        <td id="L172" class="blob-num js-line-number" data-line-number="172"></td>
        <td id="LC172" class="blob-code js-file-line"><span class="pl-v">this</span>.chart;pa<span class="pl-k">=</span>b.<span class="pl-sc">index</span>;a.touches.<span class="pl-sc">length</span><span class="pl-k">===</span><span class="pl-c1">1</span><span class="pl-k">?</span>(a<span class="pl-k">=</span><span class="pl-v">this</span>.normalize(a),b.isInsidePlot(a.chartX<span class="pl-k">-</span>b.plotLeft,a.chartY<span class="pl-k">-</span>b.plotTop)<span class="pl-k">?</span>(<span class="pl-v">this</span>.runPointActions(a),<span class="pl-v">this</span>.pinch(a))<span class="pl-k">:</span><span class="pl-v">this</span>.<span class="pl-s3">reset</span>())<span class="pl-k">:</span>a.touches.<span class="pl-sc">length</span><span class="pl-k">===</span><span class="pl-c1">2</span><span class="pl-k">&amp;&amp;</span><span class="pl-v">this</span>.pinch(a)},<span class="pl-en">onContainerTouchMove</span>:<span class="pl-st">function</span>(<span class="pl-vpf">a</span>){(a.touches.<span class="pl-sc">length</span><span class="pl-k">===</span><span class="pl-c1">1</span><span class="pl-k">||</span>a.touches.<span class="pl-sc">length</span><span class="pl-k">===</span><span class="pl-c1">2</span>)<span class="pl-k">&amp;&amp;</span><span class="pl-v">this</span>.pinch(a)},<span class="pl-en">onDocumentTouchEnd</span>:<span class="pl-st">function</span>(<span class="pl-vpf">a</span>){W[pa]<span class="pl-k">&amp;&amp;</span>W[pa].pointer.drop(a)}});<span class="pl-k">if</span>(G.PointerEvent<span class="pl-k">||</span>G.MSPointerEvent){<span class="pl-s">var</span> ua<span class="pl-k">=</span>{},zb<span class="pl-k">=!!</span>G.PointerEvent,<span class="pl-en">Xb</span><span class="pl-k">=</span><span class="pl-st">function</span>(){<span class="pl-s">var</span> a,b<span class="pl-k">=</span>[];<span class="pl-s3">b</span>.<span class="pl-en">item</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){<span class="pl-k">return</span> <span class="pl-v">this</span>[a]};<span class="pl-k">for</span>(a <span class="pl-k">in</span> ua)ua.hasOwnProperty(a)<span class="pl-k">&amp;&amp;</span></td>
      </tr>
      <tr>
        <td id="L173" class="blob-num js-line-number" data-line-number="173"></td>
        <td id="LC173" class="blob-code js-file-line">b.<span class="pl-s3">push</span>({pageX<span class="pl-k">:</span>ua[a].<span class="pl-sc">pageX</span>,pageY<span class="pl-k">:</span>ua[a].<span class="pl-sc">pageY</span>,target<span class="pl-k">:</span>ua[a].<span class="pl-sc">target</span>});<span class="pl-k">return</span> b},<span class="pl-en">Ab</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>,<span class="pl-vpf">b</span>,<span class="pl-vpf">c</span>,<span class="pl-vpf">d</span>){a<span class="pl-k">=</span>a.originalEvent<span class="pl-k">||</span>a;<span class="pl-k">if</span>((a.pointerType<span class="pl-k">===</span><span class="pl-s1"><span class="pl-pds">&quot;</span>touch<span class="pl-pds">&quot;</span></span><span class="pl-k">||</span>a.pointerType<span class="pl-k">===</span>a.MSPOINTER_TYPE_TOUCH)<span class="pl-k">&amp;&amp;</span>W[pa])d(a),d<span class="pl-k">=</span>W[pa].pointer,d[b]({type<span class="pl-k">:</span>c,target<span class="pl-k">:</span>a.currentTarget,preventDefault<span class="pl-k">:</span>sa,touches<span class="pl-k">:</span>Xb()})};r(Wa.<span class="pl-sc">prototype</span>,{<span class="pl-en">onContainerPointerDown</span>:<span class="pl-st">function</span>(<span class="pl-vpf">a</span>){Ab(a,<span class="pl-s1"><span class="pl-pds">&quot;</span>onContainerTouchStart<span class="pl-pds">&quot;</span></span>,<span class="pl-s1"><span class="pl-pds">&quot;</span>touchstart<span class="pl-pds">&quot;</span></span>,<span class="pl-st">function</span>(<span class="pl-vpf">a</span>){ua[a.pointerId]<span class="pl-k">=</span>{pageX<span class="pl-k">:</span>a.<span class="pl-sc">pageX</span>,pageY<span class="pl-k">:</span>a.<span class="pl-sc">pageY</span>,target<span class="pl-k">:</span>a.currentTarget}})},<span class="pl-en">onContainerPointerMove</span>:<span class="pl-st">function</span>(<span class="pl-vpf">a</span>){Ab(a,</td>
      </tr>
      <tr>
        <td id="L174" class="blob-num js-line-number" data-line-number="174"></td>
        <td id="LC174" class="blob-code js-file-line"><span class="pl-s1"><span class="pl-pds">&quot;</span>onContainerTouchMove<span class="pl-pds">&quot;</span></span>,<span class="pl-s1"><span class="pl-pds">&quot;</span>touchmove<span class="pl-pds">&quot;</span></span>,<span class="pl-st">function</span>(<span class="pl-vpf">a</span>){ua[a.pointerId]<span class="pl-k">=</span>{pageX<span class="pl-k">:</span>a.<span class="pl-sc">pageX</span>,pageY<span class="pl-k">:</span>a.<span class="pl-sc">pageY</span>};<span class="pl-k">if</span>(<span class="pl-k">!</span>ua[a.pointerId].<span class="pl-sc">target</span>)ua[a.pointerId].<span class="pl-sc">target</span><span class="pl-k">=</span>a.currentTarget})},<span class="pl-en">onDocumentPointerUp</span>:<span class="pl-st">function</span>(<span class="pl-vpf">a</span>){Ab(a,<span class="pl-s1"><span class="pl-pds">&quot;</span>onContainerTouchEnd<span class="pl-pds">&quot;</span></span>,<span class="pl-s1"><span class="pl-pds">&quot;</span>touchend<span class="pl-pds">&quot;</span></span>,<span class="pl-st">function</span>(<span class="pl-vpf">a</span>){<span class="pl-k">delete</span> ua[a.pointerId]})},<span class="pl-en">batchMSEvents</span>:<span class="pl-st">function</span>(<span class="pl-vpf">a</span>){a(<span class="pl-v">this</span>.chart.container,zb<span class="pl-k">?</span><span class="pl-s1"><span class="pl-pds">&quot;</span>pointerdown<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s1"><span class="pl-pds">&quot;</span>MSPointerDown<span class="pl-pds">&quot;</span></span>,<span class="pl-v">this</span>.onContainerPointerDown);a(<span class="pl-v">this</span>.chart.container,zb<span class="pl-k">?</span><span class="pl-s1"><span class="pl-pds">&quot;</span>pointermove<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s1"><span class="pl-pds">&quot;</span>MSPointerMove<span class="pl-pds">&quot;</span></span>,<span class="pl-v">this</span>.onContainerPointerMove);a(x,zb<span class="pl-k">?</span><span class="pl-s1"><span class="pl-pds">&quot;</span>pointerup<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s1"><span class="pl-pds">&quot;</span>MSPointerUp<span class="pl-pds">&quot;</span></span>,<span class="pl-v">this</span>.onDocumentPointerUp)}});</td>
      </tr>
      <tr>
        <td id="L175" class="blob-num js-line-number" data-line-number="175"></td>
        <td id="LC175" class="blob-code js-file-line">Na(Wa.<span class="pl-sc">prototype</span>,<span class="pl-s1"><span class="pl-pds">&quot;</span>init<span class="pl-pds">&quot;</span></span>,<span class="pl-st">function</span>(<span class="pl-vpf">a</span>,<span class="pl-vpf">b</span>,<span class="pl-vpf">c</span>){a.<span class="pl-s3">call</span>(<span class="pl-v">this</span>,b,c);(<span class="pl-v">this</span>.hasZoom<span class="pl-k">||</span><span class="pl-v">this</span>.followTouchMove)<span class="pl-k">&amp;&amp;</span>B(b.container,{<span class="pl-s1"><span class="pl-pds">&quot;</span>-ms-touch-action<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span>P,<span class="pl-s1"><span class="pl-pds">&quot;</span>touch-action<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span>P})});Na(Wa.<span class="pl-sc">prototype</span>,<span class="pl-s1"><span class="pl-pds">&quot;</span>setDOMEvents<span class="pl-pds">&quot;</span></span>,<span class="pl-st">function</span>(<span class="pl-vpf">a</span>){a.<span class="pl-s3">apply</span>(<span class="pl-v">this</span>);(<span class="pl-v">this</span>.hasZoom<span class="pl-k">||</span><span class="pl-v">this</span>.followTouchMove)<span class="pl-k">&amp;&amp;</span><span class="pl-v">this</span>.batchMSEvents(N)});Na(Wa.<span class="pl-sc">prototype</span>,<span class="pl-s1"><span class="pl-pds">&quot;</span>destroy<span class="pl-pds">&quot;</span></span>,<span class="pl-st">function</span>(<span class="pl-vpf">a</span>){<span class="pl-v">this</span>.batchMSEvents(X);a.<span class="pl-s3">call</span>(<span class="pl-v">this</span>)})}<span class="pl-s">var</span> lb<span class="pl-k">=</span><span class="pl-s3">K</span>.<span class="pl-en">Legend</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>,<span class="pl-vpf">b</span>){<span class="pl-v">this</span>.init(a,b)};<span class="pl-s3">lb</span>.<span class="pl-sc">prototype</span><span class="pl-k">=</span>{<span class="pl-en">init</span>:<span class="pl-st">function</span>(<span class="pl-vpf">a</span>,<span class="pl-vpf">b</span>){<span class="pl-s">var</span> c<span class="pl-k">=</span><span class="pl-v">this</span>,d<span class="pl-k">=</span>b.itemStyle,e<span class="pl-k">=</span>p(b.padding,<span class="pl-c1">8</span>),f<span class="pl-k">=</span>b.itemMarginTop<span class="pl-k">||</span><span class="pl-c1">0</span>;<span class="pl-v">this</span>.<span class="pl-sc">options</span><span class="pl-k">=</span>b;</td>
      </tr>
      <tr>
        <td id="L176" class="blob-num js-line-number" data-line-number="176"></td>
        <td id="LC176" class="blob-code js-file-line"><span class="pl-k">if</span>(b.enabled)c.itemStyle<span class="pl-k">=</span>d,c.itemHiddenStyle<span class="pl-k">=</span>w(d,b.itemHiddenStyle),c.itemMarginTop<span class="pl-k">=</span>f,c.padding<span class="pl-k">=</span>e,c.initialItemX<span class="pl-k">=</span>e,c.initialItemY<span class="pl-k">=</span>e<span class="pl-k">-</span><span class="pl-c1">5</span>,c.maxItemWidth<span class="pl-k">=</span><span class="pl-c1">0</span>,c.chart<span class="pl-k">=</span>a,c.itemHeight<span class="pl-k">=</span><span class="pl-c1">0</span>,c.lastLineHeight<span class="pl-k">=</span><span class="pl-c1">0</span>,c.symbolWidth<span class="pl-k">=</span>p(b.symbolWidth,<span class="pl-c1">16</span>),c.pages<span class="pl-k">=</span>[],c.render(),N(c.chart,<span class="pl-s1"><span class="pl-pds">&quot;</span>endResize<span class="pl-pds">&quot;</span></span>,<span class="pl-st">function</span>(){c.positionCheckboxes()})},<span class="pl-en">colorizeItem</span>:<span class="pl-st">function</span>(<span class="pl-vpf">a</span>,<span class="pl-vpf">b</span>){<span class="pl-s">var</span> c<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-sc">options</span>,d<span class="pl-k">=</span>a.legendItem,e<span class="pl-k">=</span>a.legendLine,f<span class="pl-k">=</span>a.legendSymbol,g<span class="pl-k">=</span><span class="pl-v">this</span>.itemHiddenStyle.<span class="pl-sc">color</span>,c<span class="pl-k">=</span>b<span class="pl-k">?</span>c.itemStyle.<span class="pl-sc">color</span><span class="pl-k">:</span>g,h<span class="pl-k">=</span>b<span class="pl-k">?</span>a.legendColor<span class="pl-k">||</span>a.<span class="pl-sc">color</span><span class="pl-k">||</span><span class="pl-s1"><span class="pl-pds">&quot;</span>#CCC<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span>g,g<span class="pl-k">=</span>a.<span class="pl-sc">options</span><span class="pl-k">&amp;&amp;</span></td>
      </tr>
      <tr>
        <td id="L177" class="blob-num js-line-number" data-line-number="177"></td>
        <td id="LC177" class="blob-code js-file-line">a.<span class="pl-sc">options</span>.marker,i<span class="pl-k">=</span>{fill<span class="pl-k">:</span>h},j;d<span class="pl-k">&amp;&amp;</span>d.css({fill<span class="pl-k">:</span>c,color<span class="pl-k">:</span>c});e<span class="pl-k">&amp;&amp;</span>e.attr({stroke<span class="pl-k">:</span>h});<span class="pl-k">if</span>(f){<span class="pl-k">if</span>(g<span class="pl-k">&amp;&amp;</span>f.isMarker)<span class="pl-k">for</span>(j <span class="pl-k">in</span> i.stroke<span class="pl-k">=</span>h,g<span class="pl-k">=</span>a.convertAttribs(g),g)d<span class="pl-k">=</span>g[j],d<span class="pl-k">!==</span>u<span class="pl-k">&amp;&amp;</span>(i[j]<span class="pl-k">=</span>d);f.attr(i)}},<span class="pl-en">positionItem</span>:<span class="pl-st">function</span>(<span class="pl-vpf">a</span>){<span class="pl-s">var</span> b<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-sc">options</span>,c<span class="pl-k">=</span>b.symbolPadding,b<span class="pl-k">=!</span>b.rtl,d<span class="pl-k">=</span>a._legendItemPos,e<span class="pl-k">=</span>d[<span class="pl-c1">0</span>],d<span class="pl-k">=</span>d[<span class="pl-c1">1</span>],f<span class="pl-k">=</span>a.checkbox;a.legendGroup<span class="pl-k">&amp;&amp;</span>a.legendGroup.translate(b<span class="pl-k">?</span>e<span class="pl-k">:</span><span class="pl-v">this</span>.legendWidth<span class="pl-k">-</span>e<span class="pl-k">-</span><span class="pl-c1">2</span><span class="pl-k">*</span>c<span class="pl-k">-</span><span class="pl-c1">4</span>,d);<span class="pl-k">if</span>(f)f.<span class="pl-sc">x</span><span class="pl-k">=</span>e,f.<span class="pl-sc">y</span><span class="pl-k">=</span>d},<span class="pl-en">destroyItem</span>:<span class="pl-st">function</span>(<span class="pl-vpf">a</span>){<span class="pl-s">var</span> b<span class="pl-k">=</span>a.checkbox;q([<span class="pl-s1"><span class="pl-pds">&quot;</span>legendItem<span class="pl-pds">&quot;</span></span>,<span class="pl-s1"><span class="pl-pds">&quot;</span>legendLine<span class="pl-pds">&quot;</span></span>,<span class="pl-s1"><span class="pl-pds">&quot;</span>legendSymbol<span class="pl-pds">&quot;</span></span>,<span class="pl-s1"><span class="pl-pds">&quot;</span>legendGroup<span class="pl-pds">&quot;</span></span>],<span class="pl-st">function</span>(<span class="pl-vpf">b</span>){a[b]<span class="pl-k">&amp;&amp;</span></td>
      </tr>
      <tr>
        <td id="L178" class="blob-num js-line-number" data-line-number="178"></td>
        <td id="LC178" class="blob-code js-file-line">(a[b]<span class="pl-k">=</span>a[b].destroy())});b<span class="pl-k">&amp;&amp;</span>Qa(a.checkbox)},<span class="pl-en">destroy</span>:<span class="pl-st">function</span>(){<span class="pl-s">var</span> a<span class="pl-k">=</span><span class="pl-v">this</span>.group,b<span class="pl-k">=</span><span class="pl-v">this</span>.box;<span class="pl-k">if</span>(b)<span class="pl-v">this</span>.box<span class="pl-k">=</span>b.destroy();<span class="pl-k">if</span>(a)<span class="pl-v">this</span>.group<span class="pl-k">=</span>a.destroy()},<span class="pl-en">positionCheckboxes</span>:<span class="pl-st">function</span>(<span class="pl-vpf">a</span>){<span class="pl-s">var</span> b<span class="pl-k">=</span><span class="pl-v">this</span>.group.alignAttr,c,d<span class="pl-k">=</span><span class="pl-v">this</span>.clipHeight<span class="pl-k">||</span><span class="pl-v">this</span>.legendHeight;<span class="pl-k">if</span>(b)c<span class="pl-k">=</span>b.translateY,q(<span class="pl-v">this</span>.allItems,<span class="pl-st">function</span>(<span class="pl-vpf">e</span>){<span class="pl-s">var</span> f<span class="pl-k">=</span>e.checkbox,g;f<span class="pl-k">&amp;&amp;</span>(g<span class="pl-k">=</span>c<span class="pl-k">+</span>f.<span class="pl-sc">y</span><span class="pl-k">+</span>(a<span class="pl-k">||</span><span class="pl-c1">0</span>)<span class="pl-k">+</span><span class="pl-c1">3</span>,B(f,{left<span class="pl-k">:</span>b.translateX<span class="pl-k">+</span>e.checkboxOffset<span class="pl-k">+</span>f.<span class="pl-sc">x</span><span class="pl-k">-</span><span class="pl-c1">20</span><span class="pl-k">+</span><span class="pl-s1"><span class="pl-pds">&quot;</span>px<span class="pl-pds">&quot;</span></span>,top<span class="pl-k">:</span>g<span class="pl-k">+</span><span class="pl-s1"><span class="pl-pds">&quot;</span>px<span class="pl-pds">&quot;</span></span>,display<span class="pl-k">:</span>g<span class="pl-k">&gt;</span>c<span class="pl-k">-</span><span class="pl-c1">6</span><span class="pl-k">&amp;&amp;</span>g<span class="pl-k">&lt;</span>c<span class="pl-k">+</span>d<span class="pl-k">-</span><span class="pl-c1">6</span><span class="pl-k">?</span><span class="pl-s1"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span><span class="pl-k">:</span>P}))})},<span class="pl-en">renderTitle</span>:<span class="pl-st">function</span>(){<span class="pl-s">var</span> a<span class="pl-k">=</span><span class="pl-v">this</span>.padding,b<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-sc">options</span>.<span class="pl-sc">title</span>,c<span class="pl-k">=</span><span class="pl-c1">0</span>;<span class="pl-k">if</span>(b.<span class="pl-sc">text</span>){<span class="pl-k">if</span>(<span class="pl-k">!</span><span class="pl-v">this</span>.<span class="pl-sc">title</span>)<span class="pl-v">this</span>.<span class="pl-sc">title</span><span class="pl-k">=</span></td>
      </tr>
      <tr>
        <td id="L179" class="blob-num js-line-number" data-line-number="179"></td>
        <td id="LC179" class="blob-code js-file-line"><span class="pl-v">this</span>.chart.renderer.<span class="pl-sc">label</span>(b.<span class="pl-sc">text</span>,a<span class="pl-k">-</span><span class="pl-c1">3</span>,a<span class="pl-k">-</span><span class="pl-c1">4</span>,<span class="pl-c1">null</span>,<span class="pl-c1">null</span>,<span class="pl-c1">null</span>,<span class="pl-c1">null</span>,<span class="pl-c1">null</span>,<span class="pl-s1"><span class="pl-pds">&quot;</span>legend-title<span class="pl-pds">&quot;</span></span>).attr({zIndex<span class="pl-k">:</span><span class="pl-c1">1</span>}).css(b.<span class="pl-sc">style</span>).<span class="pl-s3">add</span>(<span class="pl-v">this</span>.group);a<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-sc">title</span>.getBBox();c<span class="pl-k">=</span>a.<span class="pl-sc">height</span>;<span class="pl-v">this</span>.offsetWidth<span class="pl-k">=</span>a.<span class="pl-sc">width</span>;<span class="pl-v">this</span>.contentGroup.attr({translateY<span class="pl-k">:</span>c})}<span class="pl-v">this</span>.titleHeight<span class="pl-k">=</span>c},<span class="pl-en">renderItem</span>:<span class="pl-st">function</span>(<span class="pl-vpf">a</span>){<span class="pl-s">var</span> b<span class="pl-k">=</span><span class="pl-v">this</span>.chart,c<span class="pl-k">=</span>b.renderer,d<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-sc">options</span>,e<span class="pl-k">=</span>d.layout<span class="pl-k">===</span><span class="pl-s1"><span class="pl-pds">&quot;</span>horizontal<span class="pl-pds">&quot;</span></span>,f<span class="pl-k">=</span><span class="pl-v">this</span>.symbolWidth,g<span class="pl-k">=</span>d.symbolPadding,h<span class="pl-k">=</span><span class="pl-v">this</span>.itemStyle,i<span class="pl-k">=</span><span class="pl-v">this</span>.itemHiddenStyle,j<span class="pl-k">=</span><span class="pl-v">this</span>.padding,k<span class="pl-k">=</span>e<span class="pl-k">?</span>p(d.itemDistance,<span class="pl-c1">20</span>)<span class="pl-k">:</span><span class="pl-c1">0</span>,l<span class="pl-k">=!</span>d.rtl,n<span class="pl-k">=</span>d.<span class="pl-sc">width</span>,m<span class="pl-k">=</span>d.itemMarginBottom<span class="pl-k">||</span><span class="pl-c1">0</span>,</td>
      </tr>
      <tr>
        <td id="L180" class="blob-num js-line-number" data-line-number="180"></td>
        <td id="LC180" class="blob-code js-file-line">o<span class="pl-k">=</span><span class="pl-v">this</span>.itemMarginTop,q<span class="pl-k">=</span><span class="pl-v">this</span>.initialItemX,r<span class="pl-k">=</span>a.legendItem,s<span class="pl-k">=</span>a.series<span class="pl-k">&amp;&amp;</span>a.series.drawLegendSymbol<span class="pl-k">?</span>a.series<span class="pl-k">:</span>a,C<span class="pl-k">=</span>s.<span class="pl-sc">options</span>,C<span class="pl-k">=</span><span class="pl-v">this</span>.createCheckboxForItem<span class="pl-k">&amp;&amp;</span>C<span class="pl-k">&amp;&amp;</span>C.showCheckbox,u<span class="pl-k">=</span>d.useHTML;<span class="pl-k">if</span>(<span class="pl-k">!</span>r){a.legendGroup<span class="pl-k">=</span>c.g(<span class="pl-s1"><span class="pl-pds">&quot;</span>legend-item<span class="pl-pds">&quot;</span></span>).attr({zIndex<span class="pl-k">:</span><span class="pl-c1">1</span>}).<span class="pl-s3">add</span>(<span class="pl-v">this</span>.scrollGroup);a.legendItem<span class="pl-k">=</span>r<span class="pl-k">=</span>c.<span class="pl-sc">text</span>(d.labelFormat<span class="pl-k">?</span>Ja(d.labelFormat,a)<span class="pl-k">:</span>d.labelFormatter.<span class="pl-s3">call</span>(a),l<span class="pl-k">?</span>f<span class="pl-k">+</span>g<span class="pl-k">:-</span>g,<span class="pl-v">this</span>.baseline<span class="pl-k">||</span><span class="pl-c1">0</span>,u).css(w(a.visible<span class="pl-k">?</span>h<span class="pl-k">:</span>i)).attr({align<span class="pl-k">:</span>l<span class="pl-k">?</span><span class="pl-s1"><span class="pl-pds">&quot;</span>left<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s1"><span class="pl-pds">&quot;</span>right<span class="pl-pds">&quot;</span></span>,zIndex<span class="pl-k">:</span><span class="pl-c1">2</span>}).<span class="pl-s3">add</span>(a.legendGroup);<span class="pl-k">if</span>(<span class="pl-k">!</span><span class="pl-v">this</span>.baseline)<span class="pl-v">this</span>.baseline<span class="pl-k">=</span>c.fontMetrics(h.<span class="pl-sc">fontSize</span>,</td>
      </tr>
      <tr>
        <td id="L181" class="blob-num js-line-number" data-line-number="181"></td>
        <td id="LC181" class="blob-code js-file-line">r).f<span class="pl-k">+</span><span class="pl-c1">3</span><span class="pl-k">+</span>o,r.attr(<span class="pl-s1"><span class="pl-pds">&quot;</span>y<span class="pl-pds">&quot;</span></span>,<span class="pl-v">this</span>.baseline);s.drawLegendSymbol(<span class="pl-v">this</span>,a);<span class="pl-v">this</span>.setItemEvents<span class="pl-k">&amp;&amp;</span><span class="pl-v">this</span>.setItemEvents(a,r,u,h,i);<span class="pl-v">this</span>.colorizeItem(a,a.visible);C<span class="pl-k">&amp;&amp;</span><span class="pl-v">this</span>.createCheckboxForItem(a)}c<span class="pl-k">=</span>r.getBBox();f<span class="pl-k">=</span>a.checkboxOffset<span class="pl-k">=</span>d.itemWidth<span class="pl-k">||</span>a.legendItemWidth<span class="pl-k">||</span>f<span class="pl-k">+</span>g<span class="pl-k">+</span>c.<span class="pl-sc">width</span><span class="pl-k">+</span>k<span class="pl-k">+</span>(C<span class="pl-k">?</span><span class="pl-c1">20</span><span class="pl-k">:</span><span class="pl-c1">0</span>);<span class="pl-v">this</span>.itemHeight<span class="pl-k">=</span>g<span class="pl-k">=</span>v(a.legendItemHeight<span class="pl-k">||</span>c.<span class="pl-sc">height</span>);<span class="pl-k">if</span>(e<span class="pl-k">&amp;&amp;</span><span class="pl-v">this</span>.itemX<span class="pl-k">-</span>q<span class="pl-k">+</span>f<span class="pl-k">&gt;</span>(n<span class="pl-k">||</span>b.chartWidth<span class="pl-k">-</span><span class="pl-c1">2</span><span class="pl-k">*</span>j<span class="pl-k">-</span>q<span class="pl-k">-</span>d.<span class="pl-sc">x</span>))<span class="pl-v">this</span>.itemX<span class="pl-k">=</span>q,<span class="pl-v">this</span>.itemY<span class="pl-k">+=</span>o<span class="pl-k">+</span><span class="pl-v">this</span>.lastLineHeight<span class="pl-k">+</span>m,<span class="pl-v">this</span>.lastLineHeight<span class="pl-k">=</span><span class="pl-c1">0</span>;<span class="pl-v">this</span>.maxItemWidth<span class="pl-k">=</span>t(<span class="pl-v">this</span>.maxItemWidth,f);<span class="pl-v">this</span>.lastItemY<span class="pl-k">=</span>o<span class="pl-k">+</span><span class="pl-v">this</span>.itemY<span class="pl-k">+</span></td>
      </tr>
      <tr>
        <td id="L182" class="blob-num js-line-number" data-line-number="182"></td>
        <td id="LC182" class="blob-code js-file-line">m;<span class="pl-v">this</span>.lastLineHeight<span class="pl-k">=</span>t(g,<span class="pl-v">this</span>.lastLineHeight);a._legendItemPos<span class="pl-k">=</span>[<span class="pl-v">this</span>.itemX,<span class="pl-v">this</span>.itemY];e<span class="pl-k">?</span><span class="pl-v">this</span>.itemX<span class="pl-k">+=</span>f<span class="pl-k">:</span>(<span class="pl-v">this</span>.itemY<span class="pl-k">+=</span>o<span class="pl-k">+</span>g<span class="pl-k">+</span>m,<span class="pl-v">this</span>.lastLineHeight<span class="pl-k">=</span>g);<span class="pl-v">this</span>.offsetWidth<span class="pl-k">=</span>n<span class="pl-k">||</span>t((e<span class="pl-k">?</span><span class="pl-v">this</span>.itemX<span class="pl-k">-</span>q<span class="pl-k">-</span>k<span class="pl-k">:</span>f)<span class="pl-k">+</span>j,<span class="pl-v">this</span>.offsetWidth)},<span class="pl-en">getAllItems</span>:<span class="pl-st">function</span>(){<span class="pl-s">var</span> a<span class="pl-k">=</span>[];q(<span class="pl-v">this</span>.chart.series,<span class="pl-st">function</span>(<span class="pl-vpf">b</span>){<span class="pl-s">var</span> c<span class="pl-k">=</span>b.<span class="pl-sc">options</span>;<span class="pl-k">if</span>(p(c.showInLegend,<span class="pl-k">!</span>s(c.linkedTo)<span class="pl-k">?</span>u<span class="pl-k">:!</span><span class="pl-c1">1</span>,<span class="pl-k">!</span><span class="pl-c1">0</span>))a<span class="pl-k">=</span>a.<span class="pl-s3">concat</span>(b.legendItems<span class="pl-k">||</span>(c.legendType<span class="pl-k">===</span><span class="pl-s1"><span class="pl-pds">&quot;</span>point<span class="pl-pds">&quot;</span></span><span class="pl-k">?</span>b.<span class="pl-sc">data</span><span class="pl-k">:</span>b))});<span class="pl-k">return</span> a},<span class="pl-en">render</span>:<span class="pl-st">function</span>(){<span class="pl-s">var</span> a<span class="pl-k">=</span><span class="pl-v">this</span>,b<span class="pl-k">=</span>a.chart,c<span class="pl-k">=</span>b.renderer,d<span class="pl-k">=</span>a.group,e,f,g,h,i<span class="pl-k">=</span>a.box,j<span class="pl-k">=</span>a.<span class="pl-sc">options</span>,k<span class="pl-k">=</span>a.padding,</td>
      </tr>
      <tr>
        <td id="L183" class="blob-num js-line-number" data-line-number="183"></td>
        <td id="LC183" class="blob-code js-file-line">l<span class="pl-k">=</span>j.<span class="pl-sc">borderWidth</span>,n<span class="pl-k">=</span>j.<span class="pl-sc">backgroundColor</span>;a.itemX<span class="pl-k">=</span>a.initialItemX;a.itemY<span class="pl-k">=</span>a.initialItemY;a.offsetWidth<span class="pl-k">=</span><span class="pl-c1">0</span>;a.lastItemY<span class="pl-k">=</span><span class="pl-c1">0</span>;<span class="pl-k">if</span>(<span class="pl-k">!</span>d)a.group<span class="pl-k">=</span>d<span class="pl-k">=</span>c.g(<span class="pl-s1"><span class="pl-pds">&quot;</span>legend<span class="pl-pds">&quot;</span></span>).attr({zIndex<span class="pl-k">:</span><span class="pl-c1">7</span>}).<span class="pl-s3">add</span>(),a.contentGroup<span class="pl-k">=</span>c.g().attr({zIndex<span class="pl-k">:</span><span class="pl-c1">1</span>}).<span class="pl-s3">add</span>(d),a.scrollGroup<span class="pl-k">=</span>c.g().<span class="pl-s3">add</span>(a.contentGroup);a.renderTitle();e<span class="pl-k">=</span>a.getAllItems();ob(e,<span class="pl-st">function</span>(<span class="pl-vpf">a</span>,<span class="pl-vpf">b</span>){<span class="pl-k">return</span>(a.<span class="pl-sc">options</span><span class="pl-k">&amp;&amp;</span>a.<span class="pl-sc">options</span>.legendIndex<span class="pl-k">||</span><span class="pl-c1">0</span>)<span class="pl-k">-</span>(b.<span class="pl-sc">options</span><span class="pl-k">&amp;&amp;</span>b.<span class="pl-sc">options</span>.legendIndex<span class="pl-k">||</span><span class="pl-c1">0</span>)});j.reversed<span class="pl-k">&amp;&amp;</span>e.<span class="pl-s3">reverse</span>();a.allItems<span class="pl-k">=</span>e;a.<span class="pl-sc">display</span><span class="pl-k">=</span>f<span class="pl-k">=!!</span>e.<span class="pl-sc">length</span>;q(e,<span class="pl-st">function</span>(<span class="pl-vpf">b</span>){a.renderItem(b)});g<span class="pl-k">=</span>j.<span class="pl-sc">width</span><span class="pl-k">||</span>a.offsetWidth;</td>
      </tr>
      <tr>
        <td id="L184" class="blob-num js-line-number" data-line-number="184"></td>
        <td id="LC184" class="blob-code js-file-line">h<span class="pl-k">=</span>a.lastItemY<span class="pl-k">+</span>a.lastLineHeight<span class="pl-k">+</span>a.titleHeight;h<span class="pl-k">=</span>a.handleOverflow(h);<span class="pl-k">if</span>(l<span class="pl-k">||</span>n){g<span class="pl-k">+=</span>k;h<span class="pl-k">+=</span>k;<span class="pl-k">if</span>(i){<span class="pl-k">if</span>(g<span class="pl-k">&gt;</span><span class="pl-c1">0</span><span class="pl-k">&amp;&amp;</span>h<span class="pl-k">&gt;</span><span class="pl-c1">0</span>)i[i.isNew<span class="pl-k">?</span><span class="pl-s1"><span class="pl-pds">&quot;</span>attr<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s1"><span class="pl-pds">&quot;</span>animate<span class="pl-pds">&quot;</span></span>](i.crisp({width<span class="pl-k">:</span>g,height<span class="pl-k">:</span>h})),i.isNew<span class="pl-k">=!</span><span class="pl-c1">1</span>}<span class="pl-k">else</span> a.box<span class="pl-k">=</span>i<span class="pl-k">=</span>c.rect(<span class="pl-c1">0</span>,<span class="pl-c1">0</span>,g,h,j.borderRadius,l<span class="pl-k">||</span><span class="pl-c1">0</span>).attr({stroke<span class="pl-k">:</span>j.<span class="pl-sc">borderColor</span>,<span class="pl-s1"><span class="pl-pds">&quot;</span>stroke-width<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span>l<span class="pl-k">||</span><span class="pl-c1">0</span>,fill<span class="pl-k">:</span>n<span class="pl-k">||</span>P}).<span class="pl-s3">add</span>(d).shadow(j.shadow),i.isNew<span class="pl-k">=!</span><span class="pl-c1">0</span>;i[f<span class="pl-k">?</span><span class="pl-s1"><span class="pl-pds">&quot;</span>show<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s1"><span class="pl-pds">&quot;</span>hide<span class="pl-pds">&quot;</span></span>]()}a.legendWidth<span class="pl-k">=</span>g;a.legendHeight<span class="pl-k">=</span>h;q(e,<span class="pl-st">function</span>(<span class="pl-vpf">b</span>){a.positionItem(b)});f<span class="pl-k">&amp;&amp;</span>d.<span class="pl-sc">align</span>(r({width<span class="pl-k">:</span>g,height<span class="pl-k">:</span>h},j),<span class="pl-k">!</span><span class="pl-c1">0</span>,<span class="pl-s1"><span class="pl-pds">&quot;</span>spacingBox<span class="pl-pds">&quot;</span></span>);b.isResizing<span class="pl-k">||</span><span class="pl-v">this</span>.positionCheckboxes()},<span class="pl-en">handleOverflow</span>:<span class="pl-st">function</span>(<span class="pl-vpf">a</span>){<span class="pl-s">var</span> b<span class="pl-k">=</span></td>
      </tr>
      <tr>
        <td id="L185" class="blob-num js-line-number" data-line-number="185"></td>
        <td id="LC185" class="blob-code js-file-line"><span class="pl-v">this</span>,c<span class="pl-k">=</span><span class="pl-v">this</span>.chart,d<span class="pl-k">=</span>c.renderer,e<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-sc">options</span>,f<span class="pl-k">=</span>e.<span class="pl-sc">y</span>,f<span class="pl-k">=</span>c.spacingBox.<span class="pl-sc">height</span><span class="pl-k">+</span>(e.verticalAlign<span class="pl-k">===</span><span class="pl-s1"><span class="pl-pds">&quot;</span>top<span class="pl-pds">&quot;</span></span><span class="pl-k">?-</span>f<span class="pl-k">:</span>f)<span class="pl-k">-</span><span class="pl-v">this</span>.padding,g<span class="pl-k">=</span>e.maxHeight,h,i<span class="pl-k">=</span><span class="pl-v">this</span>.clipRect,j<span class="pl-k">=</span>e.navigation,k<span class="pl-k">=</span>p(j.animation,<span class="pl-k">!</span><span class="pl-c1">0</span>),l<span class="pl-k">=</span>j.arrowSize<span class="pl-k">||</span><span class="pl-c1">12</span>,n<span class="pl-k">=</span><span class="pl-v">this</span>.nav,m<span class="pl-k">=</span><span class="pl-v">this</span>.pages,o,r<span class="pl-k">=</span><span class="pl-v">this</span>.allItems;e.layout<span class="pl-k">===</span><span class="pl-s1"><span class="pl-pds">&quot;</span>horizontal<span class="pl-pds">&quot;</span></span><span class="pl-k">&amp;&amp;</span>(f<span class="pl-k">/=</span><span class="pl-c1">2</span>);g<span class="pl-k">&amp;&amp;</span>(f<span class="pl-k">=</span>L(f,g));m.<span class="pl-sc">length</span><span class="pl-k">=</span><span class="pl-c1">0</span>;<span class="pl-k">if</span>(a<span class="pl-k">&gt;</span>f<span class="pl-k">&amp;&amp;!</span>e.useHTML){<span class="pl-v">this</span>.clipHeight<span class="pl-k">=</span>h<span class="pl-k">=</span>t(f<span class="pl-k">-</span><span class="pl-c1">20</span><span class="pl-k">-</span><span class="pl-v">this</span>.titleHeight<span class="pl-k">-</span><span class="pl-v">this</span>.padding,<span class="pl-c1">0</span>);<span class="pl-v">this</span>.currentPage<span class="pl-k">=</span>p(<span class="pl-v">this</span>.currentPage,<span class="pl-c1">1</span>);<span class="pl-v">this</span>.fullHeight<span class="pl-k">=</span>a;q(r,<span class="pl-st">function</span>(<span class="pl-vpf">a</span>,<span class="pl-vpf">b</span>){<span class="pl-s">var</span> c<span class="pl-k">=</span>a._legendItemPos[<span class="pl-c1">1</span>],d<span class="pl-k">=</span>v(a.legendItem.getBBox().<span class="pl-sc">height</span>),</td>
      </tr>
      <tr>
        <td id="L186" class="blob-num js-line-number" data-line-number="186"></td>
        <td id="LC186" class="blob-code js-file-line">e<span class="pl-k">=</span>m.<span class="pl-sc">length</span>;<span class="pl-k">if</span>(<span class="pl-k">!</span>e<span class="pl-k">||</span>c<span class="pl-k">-</span>m[e<span class="pl-k">-</span><span class="pl-c1">1</span>]<span class="pl-k">&gt;</span>h<span class="pl-k">&amp;&amp;</span>(o<span class="pl-k">||</span>c)<span class="pl-k">!==</span>m[e<span class="pl-k">-</span><span class="pl-c1">1</span>])m.<span class="pl-s3">push</span>(o<span class="pl-k">||</span>c),e<span class="pl-k">++</span>;b<span class="pl-k">===</span>r.<span class="pl-sc">length</span><span class="pl-k">-</span><span class="pl-c1">1</span><span class="pl-k">&amp;&amp;</span>c<span class="pl-k">+</span>d<span class="pl-k">-</span>m[e<span class="pl-k">-</span><span class="pl-c1">1</span>]<span class="pl-k">&gt;</span>h<span class="pl-k">&amp;&amp;</span>m.<span class="pl-s3">push</span>(c);c<span class="pl-k">!==</span>o<span class="pl-k">&amp;&amp;</span>(o<span class="pl-k">=</span>c)});<span class="pl-k">if</span>(<span class="pl-k">!</span>i)i<span class="pl-k">=</span>b.clipRect<span class="pl-k">=</span>d.clipRect(<span class="pl-c1">0</span>,<span class="pl-v">this</span>.padding,<span class="pl-c1">9999</span>,<span class="pl-c1">0</span>),b.contentGroup.<span class="pl-sc">clip</span>(i);i.attr({height<span class="pl-k">:</span>h});<span class="pl-k">if</span>(<span class="pl-k">!</span>n)<span class="pl-v">this</span>.nav<span class="pl-k">=</span>n<span class="pl-k">=</span>d.g().attr({zIndex<span class="pl-k">:</span><span class="pl-c1">1</span>}).<span class="pl-s3">add</span>(<span class="pl-v">this</span>.group),<span class="pl-v">this</span>.up<span class="pl-k">=</span>d.symbol(<span class="pl-s1"><span class="pl-pds">&quot;</span>triangle<span class="pl-pds">&quot;</span></span>,<span class="pl-c1">0</span>,<span class="pl-c1">0</span>,l,l).on(<span class="pl-s1"><span class="pl-pds">&quot;</span>click<span class="pl-pds">&quot;</span></span>,<span class="pl-st">function</span>(){b.<span class="pl-s3">scroll</span>(<span class="pl-k">-</span><span class="pl-c1">1</span>,k)}).<span class="pl-s3">add</span>(n),<span class="pl-v">this</span>.pager<span class="pl-k">=</span>d.<span class="pl-sc">text</span>(<span class="pl-s1"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>,<span class="pl-c1">15</span>,<span class="pl-c1">10</span>).css(j.<span class="pl-sc">style</span>).<span class="pl-s3">add</span>(n),<span class="pl-v">this</span>.down<span class="pl-k">=</span>d.symbol(<span class="pl-s1"><span class="pl-pds">&quot;</span>triangle-down<span class="pl-pds">&quot;</span></span>,<span class="pl-c1">0</span>,<span class="pl-c1">0</span>,l,l).on(<span class="pl-s1"><span class="pl-pds">&quot;</span>click<span class="pl-pds">&quot;</span></span>,<span class="pl-st">function</span>(){b.<span class="pl-s3">scroll</span>(<span class="pl-c1">1</span>,k)}).<span class="pl-s3">add</span>(n);b.<span class="pl-s3">scroll</span>(<span class="pl-c1">0</span>);</td>
      </tr>
      <tr>
        <td id="L187" class="blob-num js-line-number" data-line-number="187"></td>
        <td id="LC187" class="blob-code js-file-line">a<span class="pl-k">=</span>f}<span class="pl-k">else</span> <span class="pl-k">if</span>(n)i.attr({height<span class="pl-k">:</span>c.chartHeight}),n.hide(),<span class="pl-v">this</span>.scrollGroup.attr({translateY<span class="pl-k">:</span><span class="pl-c1">1</span>}),<span class="pl-v">this</span>.clipHeight<span class="pl-k">=</span><span class="pl-c1">0</span>;<span class="pl-k">return</span> a},<span class="pl-en">scroll</span>:<span class="pl-st">function</span>(<span class="pl-vpf">a</span>,<span class="pl-vpf">b</span>){<span class="pl-s">var</span> c<span class="pl-k">=</span><span class="pl-v">this</span>.pages,d<span class="pl-k">=</span>c.<span class="pl-sc">length</span>,e<span class="pl-k">=</span><span class="pl-v">this</span>.currentPage<span class="pl-k">+</span>a,f<span class="pl-k">=</span><span class="pl-v">this</span>.clipHeight,g<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-sc">options</span>.navigation,h<span class="pl-k">=</span>g.activeColor,g<span class="pl-k">=</span>g.inactiveColor,i<span class="pl-k">=</span><span class="pl-v">this</span>.pager,j<span class="pl-k">=</span><span class="pl-v">this</span>.padding;e<span class="pl-k">&gt;</span>d<span class="pl-k">&amp;&amp;</span>(e<span class="pl-k">=</span>d);<span class="pl-k">if</span>(e<span class="pl-k">&gt;</span><span class="pl-c1">0</span>)b<span class="pl-k">!==</span>u<span class="pl-k">&amp;&amp;</span>Ra(b,<span class="pl-v">this</span>.chart),<span class="pl-v">this</span>.nav.attr({translateX<span class="pl-k">:</span>j,translateY<span class="pl-k">:</span>f<span class="pl-k">+</span><span class="pl-v">this</span>.padding<span class="pl-k">+</span><span class="pl-c1">7</span><span class="pl-k">+</span><span class="pl-v">this</span>.titleHeight,visibility<span class="pl-k">:</span><span class="pl-s1"><span class="pl-pds">&quot;</span>visible<span class="pl-pds">&quot;</span></span>}),<span class="pl-v">this</span>.up.attr({fill<span class="pl-k">:</span>e<span class="pl-k">===</span><span class="pl-c1">1</span><span class="pl-k">?</span>g<span class="pl-k">:</span>h}).css({cursor<span class="pl-k">:</span>e<span class="pl-k">===</span><span class="pl-c1">1</span><span class="pl-k">?</span><span class="pl-s1"><span class="pl-pds">&quot;</span>default<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s1"><span class="pl-pds">&quot;</span>pointer<span class="pl-pds">&quot;</span></span>}),</td>
      </tr>
      <tr>
        <td id="L188" class="blob-num js-line-number" data-line-number="188"></td>
        <td id="LC188" class="blob-code js-file-line">i.attr({text<span class="pl-k">:</span>e<span class="pl-k">+</span><span class="pl-s1"><span class="pl-pds">&quot;</span>/<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>d}),<span class="pl-v">this</span>.down.attr({x<span class="pl-k">:</span><span class="pl-c1">18</span><span class="pl-k">+</span><span class="pl-v">this</span>.pager.getBBox().<span class="pl-sc">width</span>,fill<span class="pl-k">:</span>e<span class="pl-k">===</span>d<span class="pl-k">?</span>g<span class="pl-k">:</span>h}).css({cursor<span class="pl-k">:</span>e<span class="pl-k">===</span>d<span class="pl-k">?</span><span class="pl-s1"><span class="pl-pds">&quot;</span>default<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s1"><span class="pl-pds">&quot;</span>pointer<span class="pl-pds">&quot;</span></span>}),c<span class="pl-k">=-</span>c[e<span class="pl-k">-</span><span class="pl-c1">1</span>]<span class="pl-k">+</span><span class="pl-v">this</span>.initialItemY,<span class="pl-v">this</span>.scrollGroup.animate({translateY<span class="pl-k">:</span>c}),<span class="pl-v">this</span>.currentPage<span class="pl-k">=</span>e,<span class="pl-v">this</span>.positionCheckboxes(c)}};M<span class="pl-k">=</span>K.LegendSymbolMixin<span class="pl-k">=</span>{<span class="pl-en">drawRectangle</span>:<span class="pl-st">function</span>(<span class="pl-vpf">a</span>,<span class="pl-vpf">b</span>){<span class="pl-s">var</span> c<span class="pl-k">=</span>a.<span class="pl-sc">options</span>.symbolHeight<span class="pl-k">||</span><span class="pl-c1">12</span>;b.legendSymbol<span class="pl-k">=</span><span class="pl-v">this</span>.chart.renderer.rect(<span class="pl-c1">0</span>,a.baseline<span class="pl-k">-</span><span class="pl-c1">5</span><span class="pl-k">-</span>c/<span class="pl-c1">2</span>,a.symbolWidth,c,a.<span class="pl-sc">options</span>.symbolRadius<span class="pl-k">||</span><span class="pl-c1">0</span>).attr({zIndex<span class="pl-k">:</span><span class="pl-c1">3</span>}).<span class="pl-s3">add</span>(b.legendGroup)},<span class="pl-en">drawLineMarker</span>:<span class="pl-st">function</span>(<span class="pl-vpf">a</span>){<span class="pl-s">var</span> b<span class="pl-k">=</span></td>
      </tr>
      <tr>
        <td id="L189" class="blob-num js-line-number" data-line-number="189"></td>
        <td id="LC189" class="blob-code js-file-line"><span class="pl-v">this</span>.<span class="pl-sc">options</span>,c<span class="pl-k">=</span>b.marker,d;d<span class="pl-k">=</span>a.symbolWidth;<span class="pl-s">var</span> e<span class="pl-k">=</span><span class="pl-v">this</span>.chart.renderer,f<span class="pl-k">=</span><span class="pl-v">this</span>.legendGroup,a<span class="pl-k">=</span>a.baseline<span class="pl-k">-</span>v(e.fontMetrics(a.<span class="pl-sc">options</span>.itemStyle.<span class="pl-sc">fontSize</span>,<span class="pl-v">this</span>.legendItem).b<span class="pl-k">*</span><span class="pl-c1">0.3</span>),g;<span class="pl-k">if</span>(b.lineWidth){g<span class="pl-k">=</span>{<span class="pl-s1"><span class="pl-pds">&quot;</span>stroke-width<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span>b.lineWidth};<span class="pl-k">if</span>(b.dashStyle)g.dashstyle<span class="pl-k">=</span>b.dashStyle;<span class="pl-v">this</span>.legendLine<span class="pl-k">=</span>e.path([<span class="pl-s1"><span class="pl-pds">&quot;</span>M<span class="pl-pds">&quot;</span></span>,<span class="pl-c1">0</span>,a,<span class="pl-s1"><span class="pl-pds">&quot;</span>L<span class="pl-pds">&quot;</span></span>,d,a]).attr(g).<span class="pl-s3">add</span>(f)}<span class="pl-k">if</span>(c<span class="pl-k">&amp;&amp;</span>c.enabled<span class="pl-k">!==!</span><span class="pl-c1">1</span>)b<span class="pl-k">=</span>c.radius,<span class="pl-v">this</span>.legendSymbol<span class="pl-k">=</span>d<span class="pl-k">=</span>e.symbol(<span class="pl-v">this</span>.symbol,d/<span class="pl-c1">2</span><span class="pl-k">-</span>b,a<span class="pl-k">-</span>b,<span class="pl-c1">2</span><span class="pl-k">*</span>b,<span class="pl-c1">2</span><span class="pl-k">*</span>b).<span class="pl-s3">add</span>(f),d.isMarker<span class="pl-k">=!</span><span class="pl-c1">0</span>}};(<span class="pl-sr"><span class="pl-pds">/</span>Trident<span class="pl-cce">\/</span>7<span class="pl-cce">\.</span>0<span class="pl-pds">/</span></span>.<span class="pl-s3">test</span>(wa)<span class="pl-k">||</span>Ua)<span class="pl-k">&amp;&amp;</span>Na(lb.<span class="pl-sc">prototype</span>,<span class="pl-s1"><span class="pl-pds">&quot;</span>positionItem<span class="pl-pds">&quot;</span></span>,<span class="pl-st">function</span>(<span class="pl-vpf">a</span>,</td>
      </tr>
      <tr>
        <td id="L190" class="blob-num js-line-number" data-line-number="190"></td>
        <td id="LC190" class="blob-code js-file-line"><span class="pl-vpf">b</span>){<span class="pl-s">var</span> c<span class="pl-k">=</span><span class="pl-v">this</span>,<span class="pl-en">d</span><span class="pl-k">=</span><span class="pl-st">function</span>(){b._legendItemPos<span class="pl-k">&amp;&amp;</span>a.<span class="pl-s3">call</span>(c,b)};d();<span class="pl-s3">setTimeout</span>(d)});<span class="pl-s3">Ya</span>.<span class="pl-sc">prototype</span><span class="pl-k">=</span>{<span class="pl-en">init</span>:<span class="pl-st">function</span>(<span class="pl-vpf">a</span>,<span class="pl-vpf">b</span>){<span class="pl-s">var</span> c,d<span class="pl-k">=</span>a.series;a.series<span class="pl-k">=</span><span class="pl-c1">null</span>;c<span class="pl-k">=</span>w(E,a);c.series<span class="pl-k">=</span>a.series<span class="pl-k">=</span>d;<span class="pl-v">this</span>.userOptions<span class="pl-k">=</span>a;d<span class="pl-k">=</span>c.chart;<span class="pl-v">this</span>.margin<span class="pl-k">=</span><span class="pl-v">this</span>.splashArray(<span class="pl-s1"><span class="pl-pds">&quot;</span>margin<span class="pl-pds">&quot;</span></span>,d);<span class="pl-v">this</span>.spacing<span class="pl-k">=</span><span class="pl-v">this</span>.splashArray(<span class="pl-s1"><span class="pl-pds">&quot;</span>spacing<span class="pl-pds">&quot;</span></span>,d);<span class="pl-s">var</span> e<span class="pl-k">=</span>d.events;<span class="pl-v">this</span>.bounds<span class="pl-k">=</span>{h<span class="pl-k">:</span>{},v<span class="pl-k">:</span>{}};<span class="pl-v">this</span>.callback<span class="pl-k">=</span>b;<span class="pl-v">this</span>.isResizing<span class="pl-k">=</span><span class="pl-c1">0</span>;<span class="pl-v">this</span>.<span class="pl-sc">options</span><span class="pl-k">=</span>c;<span class="pl-v">this</span>.axes<span class="pl-k">=</span>[];<span class="pl-v">this</span>.series<span class="pl-k">=</span>[];<span class="pl-v">this</span>.hasCartesianSeries<span class="pl-k">=</span>d.showAxes;<span class="pl-s">var</span> f<span class="pl-k">=</span><span class="pl-v">this</span>,g;f.<span class="pl-sc">index</span><span class="pl-k">=</span>W.<span class="pl-sc">length</span>;W.<span class="pl-s3">push</span>(f);ab<span class="pl-k">++</span>;d.reflow<span class="pl-k">!==!</span><span class="pl-c1">1</span><span class="pl-k">&amp;&amp;</span>N(f,<span class="pl-s1"><span class="pl-pds">&quot;</span>load<span class="pl-pds">&quot;</span></span>,</td>
      </tr>
      <tr>
        <td id="L191" class="blob-num js-line-number" data-line-number="191"></td>
        <td id="LC191" class="blob-code js-file-line"><span class="pl-st">function</span>(){f.initReflow()});<span class="pl-k">if</span>(e)<span class="pl-k">for</span>(g <span class="pl-k">in</span> e)N(f,g,e[g]);f.xAxis<span class="pl-k">=</span>[];f.yAxis<span class="pl-k">=</span>[];f.animation<span class="pl-k">=</span>ga<span class="pl-k">?!</span><span class="pl-c1">1</span><span class="pl-k">:</span>p(d.animation,<span class="pl-k">!</span><span class="pl-c1">0</span>);f.pointCount<span class="pl-k">=</span>f.colorCounter<span class="pl-k">=</span>f.symbolCounter<span class="pl-k">=</span><span class="pl-c1">0</span>;f.firstRender()},<span class="pl-en">initSeries</span>:<span class="pl-st">function</span>(<span class="pl-vpf">a</span>){<span class="pl-s">var</span> b<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-sc">options</span>.chart;(b<span class="pl-k">=</span>H[a.<span class="pl-sc">type</span><span class="pl-k">||</span>b.<span class="pl-sc">type</span><span class="pl-k">||</span>b.defaultSeriesType])<span class="pl-k">||</span>ha(<span class="pl-c1">17</span>,<span class="pl-k">!</span><span class="pl-c1">0</span>);b<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">b</span>;b.init(<span class="pl-v">this</span>,a);<span class="pl-k">return</span> b},<span class="pl-en">isInsidePlot</span>:<span class="pl-st">function</span>(<span class="pl-vpf">a</span>,<span class="pl-vpf">b</span>,<span class="pl-vpf">c</span>){<span class="pl-s">var</span> d<span class="pl-k">=</span>c<span class="pl-k">?</span>b<span class="pl-k">:</span>a,a<span class="pl-k">=</span>c<span class="pl-k">?</span>a<span class="pl-k">:</span>b;<span class="pl-k">return</span> d<span class="pl-k">&gt;=</span><span class="pl-c1">0</span><span class="pl-k">&amp;&amp;</span>d<span class="pl-k">&lt;=</span><span class="pl-v">this</span>.plotWidth<span class="pl-k">&amp;&amp;</span>a<span class="pl-k">&gt;=</span><span class="pl-c1">0</span><span class="pl-k">&amp;&amp;</span>a<span class="pl-k">&lt;=</span><span class="pl-v">this</span>.plotHeight},<span class="pl-en">adjustTickAmounts</span>:<span class="pl-st">function</span>(){<span class="pl-v">this</span>.<span class="pl-sc">options</span>.chart.alignTicks<span class="pl-k">!==!</span><span class="pl-c1">1</span><span class="pl-k">&amp;&amp;</span>q(<span class="pl-v">this</span>.axes,<span class="pl-st">function</span>(<span class="pl-vpf">a</span>){a.adjustTickAmount()});</td>
      </tr>
      <tr>
        <td id="L192" class="blob-num js-line-number" data-line-number="192"></td>
        <td id="LC192" class="blob-code js-file-line"><span class="pl-v">this</span>.maxTicks<span class="pl-k">=</span><span class="pl-c1">null</span>},<span class="pl-en">redraw</span>:<span class="pl-st">function</span>(<span class="pl-vpf">a</span>){<span class="pl-s">var</span> b<span class="pl-k">=</span><span class="pl-v">this</span>.axes,c<span class="pl-k">=</span><span class="pl-v">this</span>.series,d<span class="pl-k">=</span><span class="pl-v">this</span>.pointer,e<span class="pl-k">=</span><span class="pl-v">this</span>.legend,f<span class="pl-k">=</span><span class="pl-v">this</span>.isDirtyLegend,g,h,i<span class="pl-k">=</span><span class="pl-v">this</span>.hasCartesianSeries,j<span class="pl-k">=</span><span class="pl-v">this</span>.isDirtyBox,k<span class="pl-k">=</span>c.<span class="pl-sc">length</span>,l<span class="pl-k">=</span>k,n<span class="pl-k">=</span><span class="pl-v">this</span>.renderer,m<span class="pl-k">=</span>n.isHidden(),o<span class="pl-k">=</span>[];Ra(a,<span class="pl-v">this</span>);m<span class="pl-k">&amp;&amp;</span><span class="pl-v">this</span>.cloneRenderTo();<span class="pl-k">for</span>(<span class="pl-v">this</span>.layOutTitles();l<span class="pl-k">--</span>;)<span class="pl-k">if</span>(a<span class="pl-k">=</span>c[l],a.<span class="pl-sc">options</span>.stacking<span class="pl-k">&amp;&amp;</span>(g<span class="pl-k">=!</span><span class="pl-c1">0</span>,a.isDirty)){h<span class="pl-k">=!</span><span class="pl-c1">0</span>;<span class="pl-k">break</span>}<span class="pl-k">if</span>(h)<span class="pl-k">for</span>(l<span class="pl-k">=</span>k;l<span class="pl-k">--</span>;)<span class="pl-k">if</span>(a<span class="pl-k">=</span>c[l],a.<span class="pl-sc">options</span>.stacking)a.isDirty<span class="pl-k">=!</span><span class="pl-c1">0</span>;q(c,<span class="pl-st">function</span>(<span class="pl-vpf">a</span>){a.isDirty<span class="pl-k">&amp;&amp;</span>a.<span class="pl-sc">options</span>.legendType<span class="pl-k">===</span><span class="pl-s1"><span class="pl-pds">&quot;</span>point<span class="pl-pds">&quot;</span></span><span class="pl-k">&amp;&amp;</span>(f<span class="pl-k">=!</span><span class="pl-c1">0</span>)});<span class="pl-k">if</span>(f<span class="pl-k">&amp;&amp;</span>e.<span class="pl-sc">options</span>.enabled)e.render(),</td>
      </tr>
      <tr>
        <td id="L193" class="blob-num js-line-number" data-line-number="193"></td>
        <td id="LC193" class="blob-code js-file-line"><span class="pl-v">this</span>.isDirtyLegend<span class="pl-k">=!</span><span class="pl-c1">1</span>;g<span class="pl-k">&amp;&amp;</span><span class="pl-v">this</span>.getStacks();<span class="pl-k">if</span>(i){<span class="pl-k">if</span>(<span class="pl-k">!</span><span class="pl-v">this</span>.isResizing)<span class="pl-v">this</span>.maxTicks<span class="pl-k">=</span><span class="pl-c1">null</span>,q(b,<span class="pl-st">function</span>(<span class="pl-vpf">a</span>){a.setScale()});<span class="pl-v">this</span>.adjustTickAmounts()}<span class="pl-v">this</span>.getMargins();i<span class="pl-k">&amp;&amp;</span>(q(b,<span class="pl-st">function</span>(<span class="pl-vpf">a</span>){a.isDirty<span class="pl-k">&amp;&amp;</span>(j<span class="pl-k">=!</span><span class="pl-c1">0</span>)}),q(b,<span class="pl-st">function</span>(<span class="pl-vpf">a</span>){<span class="pl-k">if</span>(a.isDirtyExtremes)a.isDirtyExtremes<span class="pl-k">=!</span><span class="pl-c1">1</span>,o.<span class="pl-s3">push</span>(<span class="pl-st">function</span>(){I(a,<span class="pl-s1"><span class="pl-pds">&quot;</span>afterSetExtremes<span class="pl-pds">&quot;</span></span>,r(a.eventArgs,a.getExtremes()));<span class="pl-k">delete</span> a.eventArgs});(j<span class="pl-k">||</span>g)<span class="pl-k">&amp;&amp;</span>a.redraw()}));j<span class="pl-k">&amp;&amp;</span><span class="pl-v">this</span>.drawChartBox();q(c,<span class="pl-st">function</span>(<span class="pl-vpf">a</span>){a.isDirty<span class="pl-k">&amp;&amp;</span>a.visible<span class="pl-k">&amp;&amp;</span>(<span class="pl-k">!</span>a.isCartesian<span class="pl-k">||</span>a.xAxis)<span class="pl-k">&amp;&amp;</span>a.redraw()});d<span class="pl-k">&amp;&amp;</span>d.<span class="pl-s3">reset</span>(<span class="pl-k">!</span><span class="pl-c1">0</span>);n.draw();I(<span class="pl-v">this</span>,</td>
      </tr>
      <tr>
        <td id="L194" class="blob-num js-line-number" data-line-number="194"></td>
        <td id="LC194" class="blob-code js-file-line"><span class="pl-s1"><span class="pl-pds">&quot;</span>redraw<span class="pl-pds">&quot;</span></span>);m<span class="pl-k">&amp;&amp;</span><span class="pl-v">this</span>.cloneRenderTo(<span class="pl-k">!</span><span class="pl-c1">0</span>);q(o,<span class="pl-st">function</span>(<span class="pl-vpf">a</span>){a.<span class="pl-s3">call</span>()})},<span class="pl-en">get</span>:<span class="pl-st">function</span>(<span class="pl-vpf">a</span>){<span class="pl-s">var</span> b<span class="pl-k">=</span><span class="pl-v">this</span>.axes,c<span class="pl-k">=</span><span class="pl-v">this</span>.series,d,e;<span class="pl-k">for</span>(d<span class="pl-k">=</span><span class="pl-c1">0</span>;d<span class="pl-k">&lt;</span>b.<span class="pl-sc">length</span>;d<span class="pl-k">++</span>)<span class="pl-k">if</span>(b[d].<span class="pl-sc">options</span>.<span class="pl-sc">id</span><span class="pl-k">===</span>a)<span class="pl-k">return</span> b[d];<span class="pl-k">for</span>(d<span class="pl-k">=</span><span class="pl-c1">0</span>;d<span class="pl-k">&lt;</span>c.<span class="pl-sc">length</span>;d<span class="pl-k">++</span>)<span class="pl-k">if</span>(c[d].<span class="pl-sc">options</span>.<span class="pl-sc">id</span><span class="pl-k">===</span>a)<span class="pl-k">return</span> c[d];<span class="pl-k">for</span>(d<span class="pl-k">=</span><span class="pl-c1">0</span>;d<span class="pl-k">&lt;</span>c.<span class="pl-sc">length</span>;d<span class="pl-k">++</span>){e<span class="pl-k">=</span>c[d].points<span class="pl-k">||</span>[];<span class="pl-k">for</span>(b<span class="pl-k">=</span><span class="pl-c1">0</span>;b<span class="pl-k">&lt;</span>e.<span class="pl-sc">length</span>;b<span class="pl-k">++</span>)<span class="pl-k">if</span>(e[b].<span class="pl-sc">id</span><span class="pl-k">===</span>a)<span class="pl-k">return</span> e[b]}<span class="pl-k">return</span> <span class="pl-c1">null</span>},<span class="pl-en">getAxes</span>:<span class="pl-st">function</span>(){<span class="pl-s">var</span> a<span class="pl-k">=</span><span class="pl-v">this</span>,b<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-sc">options</span>,c<span class="pl-k">=</span>b.xAxis<span class="pl-k">=</span>ra(b.xAxis<span class="pl-k">||</span>{}),b<span class="pl-k">=</span>b.yAxis<span class="pl-k">=</span>ra(b.yAxis<span class="pl-k">||</span>{});q(c,<span class="pl-st">function</span>(<span class="pl-vpf">a</span>,<span class="pl-vpf">b</span>){a.<span class="pl-sc">index</span><span class="pl-k">=</span>b;a.isX<span class="pl-k">=!</span><span class="pl-c1">0</span>});q(b,<span class="pl-st">function</span>(<span class="pl-vpf">a</span>,<span class="pl-vpf">b</span>){a.<span class="pl-sc">index</span><span class="pl-k">=</span>b});</td>
      </tr>
      <tr>
        <td id="L195" class="blob-num js-line-number" data-line-number="195"></td>
        <td id="LC195" class="blob-code js-file-line">c<span class="pl-k">=</span>c.<span class="pl-s3">concat</span>(b);q(c,<span class="pl-st">function</span>(<span class="pl-vpf">b</span>){<span class="pl-k">new</span> <span class="pl-en">na</span>(a,b)});a.adjustTickAmounts()},<span class="pl-en">getSelectedPoints</span>:<span class="pl-st">function</span>(){<span class="pl-s">var</span> a<span class="pl-k">=</span>[];q(<span class="pl-v">this</span>.series,<span class="pl-st">function</span>(<span class="pl-vpf">b</span>){a<span class="pl-k">=</span>a.<span class="pl-s3">concat</span>(wb(b.points<span class="pl-k">||</span>[],<span class="pl-st">function</span>(<span class="pl-vpf">a</span>){<span class="pl-k">return</span> a.<span class="pl-sc">selected</span>}))});<span class="pl-k">return</span> a},<span class="pl-en">getSelectedSeries</span>:<span class="pl-st">function</span>(){<span class="pl-k">return</span> wb(<span class="pl-v">this</span>.series,<span class="pl-st">function</span>(<span class="pl-vpf">a</span>){<span class="pl-k">return</span> a.<span class="pl-sc">selected</span>})},<span class="pl-en">getStacks</span>:<span class="pl-st">function</span>(){<span class="pl-s">var</span> a<span class="pl-k">=</span><span class="pl-v">this</span>;q(a.yAxis,<span class="pl-st">function</span>(<span class="pl-vpf">a</span>){<span class="pl-k">if</span>(a.stacks<span class="pl-k">&amp;&amp;</span>a.hasVisibleSeries)a.oldStacks<span class="pl-k">=</span>a.stacks});q(a.series,<span class="pl-st">function</span>(<span class="pl-vpf">b</span>){<span class="pl-k">if</span>(b.<span class="pl-sc">options</span>.stacking<span class="pl-k">&amp;&amp;</span>(b.visible<span class="pl-k">===!</span><span class="pl-c1">0</span><span class="pl-k">||</span>a.<span class="pl-sc">options</span>.chart.ignoreHiddenSeries<span class="pl-k">===!</span><span class="pl-c1">1</span>))b.stackKey<span class="pl-k">=</span></td>
      </tr>
      <tr>
        <td id="L196" class="blob-num js-line-number" data-line-number="196"></td>
        <td id="LC196" class="blob-code js-file-line">b.<span class="pl-sc">type</span><span class="pl-k">+</span>p(b.<span class="pl-sc">options</span>.stack,<span class="pl-s1"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>)})},<span class="pl-en">setTitle</span>:<span class="pl-st">function</span>(<span class="pl-vpf">a</span>,<span class="pl-vpf">b</span>,<span class="pl-vpf">c</span>){<span class="pl-s">var</span> g;<span class="pl-s">var</span> d<span class="pl-k">=</span><span class="pl-v">this</span>,e<span class="pl-k">=</span>d.<span class="pl-sc">options</span>,f;f<span class="pl-k">=</span>e.<span class="pl-sc">title</span><span class="pl-k">=</span>w(e.<span class="pl-sc">title</span>,a);g<span class="pl-k">=</span>e.subtitle<span class="pl-k">=</span>w(e.subtitle,b),e<span class="pl-k">=</span>g;q([[<span class="pl-s1"><span class="pl-pds">&quot;</span>title<span class="pl-pds">&quot;</span></span>,a,f],[<span class="pl-s1"><span class="pl-pds">&quot;</span>subtitle<span class="pl-pds">&quot;</span></span>,b,e]],<span class="pl-st">function</span>(<span class="pl-vpf">a</span>){<span class="pl-s">var</span> b<span class="pl-k">=</span>a[<span class="pl-c1">0</span>],c<span class="pl-k">=</span>d[b],e<span class="pl-k">=</span>a[<span class="pl-c1">1</span>],a<span class="pl-k">=</span>a[<span class="pl-c1">2</span>];c<span class="pl-k">&amp;&amp;</span>e<span class="pl-k">&amp;&amp;</span>(d[b]<span class="pl-k">=</span>c<span class="pl-k">=</span>c.destroy());a<span class="pl-k">&amp;&amp;</span>a.<span class="pl-sc">text</span><span class="pl-k">&amp;&amp;!</span>c<span class="pl-k">&amp;&amp;</span>(d[b]<span class="pl-k">=</span>d.renderer.<span class="pl-sc">text</span>(a.<span class="pl-sc">text</span>,<span class="pl-c1">0</span>,<span class="pl-c1">0</span>,a.useHTML).attr({align<span class="pl-k">:</span>a.<span class="pl-sc">align</span>,<span class="pl-s1"><span class="pl-pds">&quot;</span>class<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s1"><span class="pl-pds">&quot;</span>highcharts-<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>b,zIndex<span class="pl-k">:</span>a.<span class="pl-sc">zIndex</span><span class="pl-k">||</span><span class="pl-c1">4</span>}).css(a.<span class="pl-sc">style</span>).<span class="pl-s3">add</span>())});d.layOutTitles(c)},<span class="pl-en">layOutTitles</span>:<span class="pl-st">function</span>(<span class="pl-vpf">a</span>){<span class="pl-s">var</span> b<span class="pl-k">=</span><span class="pl-c1">0</span>,c<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-sc">title</span>,d<span class="pl-k">=</span><span class="pl-v">this</span>.subtitle,e<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-sc">options</span>,f<span class="pl-k">=</span>e.<span class="pl-sc">title</span>,</td>
      </tr>
      <tr>
        <td id="L197" class="blob-num js-line-number" data-line-number="197"></td>
        <td id="LC197" class="blob-code js-file-line">e<span class="pl-k">=</span>e.subtitle,g<span class="pl-k">=</span><span class="pl-v">this</span>.renderer,h<span class="pl-k">=</span><span class="pl-v">this</span>.spacingBox.<span class="pl-sc">width</span><span class="pl-k">-</span><span class="pl-c1">44</span>;<span class="pl-k">if</span>(c<span class="pl-k">&amp;&amp;</span>(c.css({width<span class="pl-k">:</span>(f.<span class="pl-sc">width</span><span class="pl-k">||</span>h)<span class="pl-k">+</span><span class="pl-s1"><span class="pl-pds">&quot;</span>px<span class="pl-pds">&quot;</span></span>}).<span class="pl-sc">align</span>(r({y<span class="pl-k">:</span>g.fontMetrics(f.<span class="pl-sc">style</span>.<span class="pl-sc">fontSize</span>,c).b<span class="pl-k">-</span><span class="pl-c1">3</span>},f),<span class="pl-k">!</span><span class="pl-c1">1</span>,<span class="pl-s1"><span class="pl-pds">&quot;</span>spacingBox<span class="pl-pds">&quot;</span></span>),<span class="pl-k">!</span>f.floating<span class="pl-k">&amp;&amp;!</span>f.verticalAlign))b<span class="pl-k">=</span>c.getBBox().<span class="pl-sc">height</span>;d<span class="pl-k">&amp;&amp;</span>(d.css({width<span class="pl-k">:</span>(e.<span class="pl-sc">width</span><span class="pl-k">||</span>h)<span class="pl-k">+</span><span class="pl-s1"><span class="pl-pds">&quot;</span>px<span class="pl-pds">&quot;</span></span>}).<span class="pl-sc">align</span>(r({y<span class="pl-k">:</span>b<span class="pl-k">+</span>(f.margin<span class="pl-k">-</span><span class="pl-c1">13</span>)<span class="pl-k">+</span>g.fontMetrics(f.<span class="pl-sc">style</span>.<span class="pl-sc">fontSize</span>,d).b},e),<span class="pl-k">!</span><span class="pl-c1">1</span>,<span class="pl-s1"><span class="pl-pds">&quot;</span>spacingBox<span class="pl-pds">&quot;</span></span>),<span class="pl-k">!</span>e.floating<span class="pl-k">&amp;&amp;!</span>e.verticalAlign<span class="pl-k">&amp;&amp;</span>(b<span class="pl-k">=</span>La(b<span class="pl-k">+</span>d.getBBox().<span class="pl-sc">height</span>)));c<span class="pl-k">=</span><span class="pl-v">this</span>.titleOffset<span class="pl-k">!==</span>b;<span class="pl-v">this</span>.titleOffset<span class="pl-k">=</span>b;<span class="pl-k">if</span>(<span class="pl-k">!</span><span class="pl-v">this</span>.isDirtyBox<span class="pl-k">&amp;&amp;</span>c)<span class="pl-v">this</span>.isDirtyBox<span class="pl-k">=</span>c,<span class="pl-v">this</span>.hasRendered<span class="pl-k">&amp;&amp;</span></td>
      </tr>
      <tr>
        <td id="L198" class="blob-num js-line-number" data-line-number="198"></td>
        <td id="LC198" class="blob-code js-file-line">p(a,<span class="pl-k">!</span><span class="pl-c1">0</span>)<span class="pl-k">&amp;&amp;</span><span class="pl-v">this</span>.isDirtyBox<span class="pl-k">&amp;&amp;</span><span class="pl-v">this</span>.redraw()},<span class="pl-en">getChartSize</span>:<span class="pl-st">function</span>(){<span class="pl-s">var</span> a<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-sc">options</span>.chart,b<span class="pl-k">=</span>a.<span class="pl-sc">width</span>,a<span class="pl-k">=</span>a.<span class="pl-sc">height</span>,c<span class="pl-k">=</span><span class="pl-v">this</span>.renderToClone<span class="pl-k">||</span><span class="pl-v">this</span>.renderTo;<span class="pl-k">if</span>(<span class="pl-k">!</span>s(b))<span class="pl-v">this</span>.containerWidth<span class="pl-k">=</span>ib(c,<span class="pl-s1"><span class="pl-pds">&quot;</span>width<span class="pl-pds">&quot;</span></span>);<span class="pl-k">if</span>(<span class="pl-k">!</span>s(a))<span class="pl-v">this</span>.containerHeight<span class="pl-k">=</span>ib(c,<span class="pl-s1"><span class="pl-pds">&quot;</span>height<span class="pl-pds">&quot;</span></span>);<span class="pl-v">this</span>.chartWidth<span class="pl-k">=</span>t(<span class="pl-c1">0</span>,b<span class="pl-k">||</span><span class="pl-v">this</span>.containerWidth<span class="pl-k">||</span><span class="pl-c1">600</span>);<span class="pl-v">this</span>.chartHeight<span class="pl-k">=</span>t(<span class="pl-c1">0</span>,p(a,<span class="pl-v">this</span>.containerHeight<span class="pl-k">&gt;</span><span class="pl-c1">19</span><span class="pl-k">?</span><span class="pl-v">this</span>.containerHeight<span class="pl-k">:</span><span class="pl-c1">400</span>))},<span class="pl-en">cloneRenderTo</span>:<span class="pl-st">function</span>(<span class="pl-vpf">a</span>){<span class="pl-s">var</span> b<span class="pl-k">=</span><span class="pl-v">this</span>.renderToClone,c<span class="pl-k">=</span><span class="pl-v">this</span>.container;a<span class="pl-k">?</span>b<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.renderTo.<span class="pl-s3">appendChild</span>(c),Qa(b),<span class="pl-k">delete</span> <span class="pl-v">this</span>.renderToClone)<span class="pl-k">:</span>(c<span class="pl-k">&amp;&amp;</span></td>
      </tr>
      <tr>
        <td id="L199" class="blob-num js-line-number" data-line-number="199"></td>
        <td id="LC199" class="blob-code js-file-line">c.<span class="pl-sc">parentNode</span><span class="pl-k">===</span><span class="pl-v">this</span>.renderTo<span class="pl-k">&amp;&amp;</span><span class="pl-v">this</span>.renderTo.<span class="pl-s3">removeChild</span>(c),<span class="pl-v">this</span>.renderToClone<span class="pl-k">=</span>b<span class="pl-k">=</span><span class="pl-v">this</span>.renderTo.<span class="pl-s3">cloneNode</span>(<span class="pl-c1">0</span>),B(b,{position<span class="pl-k">:</span><span class="pl-s1"><span class="pl-pds">&quot;</span>absolute<span class="pl-pds">&quot;</span></span>,top<span class="pl-k">:</span><span class="pl-s1"><span class="pl-pds">&quot;</span>-9999px<span class="pl-pds">&quot;</span></span>,display<span class="pl-k">:</span><span class="pl-s1"><span class="pl-pds">&quot;</span>block<span class="pl-pds">&quot;</span></span>}),b.<span class="pl-sc">style</span>.setProperty<span class="pl-k">&amp;&amp;</span>b.<span class="pl-sc">style</span>.setProperty(<span class="pl-s1"><span class="pl-pds">&quot;</span>display<span class="pl-pds">&quot;</span></span>,<span class="pl-s1"><span class="pl-pds">&quot;</span>block<span class="pl-pds">&quot;</span></span>,<span class="pl-s1"><span class="pl-pds">&quot;</span>important<span class="pl-pds">&quot;</span></span>),x.<span class="pl-sc">body</span>.<span class="pl-s3">appendChild</span>(b),c<span class="pl-k">&amp;&amp;</span>b.<span class="pl-s3">appendChild</span>(c))},<span class="pl-en">getContainer</span>:<span class="pl-st">function</span>(){<span class="pl-s">var</span> a,b<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-sc">options</span>.chart,c,d,e;<span class="pl-v">this</span>.renderTo<span class="pl-k">=</span>a<span class="pl-k">=</span>b.renderTo;e<span class="pl-k">=</span><span class="pl-s1"><span class="pl-pds">&quot;</span>highcharts-<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>ub<span class="pl-k">++</span>;<span class="pl-k">if</span>(Ga(a))<span class="pl-v">this</span>.renderTo<span class="pl-k">=</span>a<span class="pl-k">=</span>x.<span class="pl-s3">getElementById</span>(a);a<span class="pl-k">||</span>ha(<span class="pl-c1">13</span>,<span class="pl-k">!</span><span class="pl-c1">0</span>);c<span class="pl-k">=</span>y(F(a,<span class="pl-s1"><span class="pl-pds">&quot;</span>data-highcharts-chart<span class="pl-pds">&quot;</span></span>));<span class="pl-k">!</span><span class="pl-s3">isNaN</span>(c)<span class="pl-k">&amp;&amp;</span>W[c]<span class="pl-k">&amp;&amp;</span>W[c].hasRendered<span class="pl-k">&amp;&amp;</span></td>
      </tr>
      <tr>
        <td id="L200" class="blob-num js-line-number" data-line-number="200"></td>
        <td id="LC200" class="blob-code js-file-line">W[c].destroy();F(a,<span class="pl-s1"><span class="pl-pds">&quot;</span>data-highcharts-chart<span class="pl-pds">&quot;</span></span>,<span class="pl-v">this</span>.<span class="pl-sc">index</span>);a.innerHTML<span class="pl-k">=</span><span class="pl-s1"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>;<span class="pl-k">!</span>b.skipClone<span class="pl-k">&amp;&amp;!</span>a.offsetWidth<span class="pl-k">&amp;&amp;</span><span class="pl-v">this</span>.cloneRenderTo();<span class="pl-v">this</span>.getChartSize();c<span class="pl-k">=</span><span class="pl-v">this</span>.chartWidth;d<span class="pl-k">=</span><span class="pl-v">this</span>.chartHeight;<span class="pl-v">this</span>.container<span class="pl-k">=</span>a<span class="pl-k">=</span>$(Ka,{className<span class="pl-k">:</span><span class="pl-s1"><span class="pl-pds">&quot;</span>highcharts-container<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>(b.<span class="pl-sc">className</span><span class="pl-k">?</span><span class="pl-s1"><span class="pl-pds">&quot;</span> <span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>b.<span class="pl-sc">className</span><span class="pl-k">:</span><span class="pl-s1"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>),id<span class="pl-k">:</span>e},r({position<span class="pl-k">:</span><span class="pl-s1"><span class="pl-pds">&quot;</span>relative<span class="pl-pds">&quot;</span></span>,overflow<span class="pl-k">:</span><span class="pl-s1"><span class="pl-pds">&quot;</span>hidden<span class="pl-pds">&quot;</span></span>,width<span class="pl-k">:</span>c<span class="pl-k">+</span><span class="pl-s1"><span class="pl-pds">&quot;</span>px<span class="pl-pds">&quot;</span></span>,height<span class="pl-k">:</span>d<span class="pl-k">+</span><span class="pl-s1"><span class="pl-pds">&quot;</span>px<span class="pl-pds">&quot;</span></span>,textAlign<span class="pl-k">:</span><span class="pl-s1"><span class="pl-pds">&quot;</span>left<span class="pl-pds">&quot;</span></span>,lineHeight<span class="pl-k">:</span><span class="pl-s1"><span class="pl-pds">&quot;</span>normal<span class="pl-pds">&quot;</span></span>,zIndex<span class="pl-k">:</span><span class="pl-c1">0</span>,<span class="pl-s1"><span class="pl-pds">&quot;</span>-webkit-tap-highlight-color<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s1"><span class="pl-pds">&quot;</span>rgba(0,0,0,0)<span class="pl-pds">&quot;</span></span>},b.<span class="pl-sc">style</span>),<span class="pl-v">this</span>.renderToClone<span class="pl-k">||</span>a);<span class="pl-v">this</span>._cursor<span class="pl-k">=</span>a.<span class="pl-sc">style</span>.cursor;<span class="pl-v">this</span>.renderer<span class="pl-k">=</span></td>
      </tr>
      <tr>
        <td id="L201" class="blob-num js-line-number" data-line-number="201"></td>
        <td id="LC201" class="blob-code js-file-line">b.forExport<span class="pl-k">?</span><span class="pl-k">new</span> <span class="pl-en">ta</span>(a,c,d,b.<span class="pl-sc">style</span>,<span class="pl-k">!</span><span class="pl-c1">0</span>)<span class="pl-k">:</span><span class="pl-k">new</span> <span class="pl-en">Za</span>(a,c,d,b.<span class="pl-sc">style</span>);ga<span class="pl-k">&amp;&amp;</span><span class="pl-v">this</span>.renderer.create(<span class="pl-v">this</span>,a,c,d)},<span class="pl-en">getMargins</span>:<span class="pl-st">function</span>(){<span class="pl-s">var</span> a<span class="pl-k">=</span><span class="pl-v">this</span>.spacing,b,c<span class="pl-k">=</span><span class="pl-v">this</span>.legend,d<span class="pl-k">=</span><span class="pl-v">this</span>.margin,e<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-sc">options</span>.legend,f<span class="pl-k">=</span>p(e.margin,<span class="pl-c1">20</span>),g<span class="pl-k">=</span>e.<span class="pl-sc">x</span>,h<span class="pl-k">=</span>e.<span class="pl-sc">y</span>,i<span class="pl-k">=</span>e.<span class="pl-sc">align</span>,j<span class="pl-k">=</span>e.verticalAlign,k<span class="pl-k">=</span><span class="pl-v">this</span>.titleOffset;<span class="pl-v">this</span>.resetMargins();b<span class="pl-k">=</span><span class="pl-v">this</span>.axisOffset;<span class="pl-k">if</span>(k<span class="pl-k">&amp;&amp;!</span>s(d[<span class="pl-c1">0</span>]))<span class="pl-v">this</span>.plotTop<span class="pl-k">=</span>t(<span class="pl-v">this</span>.plotTop,k<span class="pl-k">+</span><span class="pl-v">this</span>.<span class="pl-sc">options</span>.<span class="pl-sc">title</span>.margin<span class="pl-k">+</span>a[<span class="pl-c1">0</span>]);<span class="pl-k">if</span>(c.<span class="pl-sc">display</span><span class="pl-k">&amp;&amp;!</span>e.floating)<span class="pl-k">if</span>(i<span class="pl-k">===</span><span class="pl-s1"><span class="pl-pds">&quot;</span>right<span class="pl-pds">&quot;</span></span>){<span class="pl-k">if</span>(<span class="pl-k">!</span>s(d[<span class="pl-c1">1</span>]))<span class="pl-v">this</span>.<span class="pl-sc">marginRight</span><span class="pl-k">=</span>t(<span class="pl-v">this</span>.<span class="pl-sc">marginRight</span>,c.legendWidth<span class="pl-k">-</span>g<span class="pl-k">+</span>f<span class="pl-k">+</span>a[<span class="pl-c1">1</span>])}<span class="pl-k">else</span> <span class="pl-k">if</span>(i<span class="pl-k">===</span></td>
      </tr>
      <tr>
        <td id="L202" class="blob-num js-line-number" data-line-number="202"></td>
        <td id="LC202" class="blob-code js-file-line"><span class="pl-s1"><span class="pl-pds">&quot;</span>left<span class="pl-pds">&quot;</span></span>){<span class="pl-k">if</span>(<span class="pl-k">!</span>s(d[<span class="pl-c1">3</span>]))<span class="pl-v">this</span>.plotLeft<span class="pl-k">=</span>t(<span class="pl-v">this</span>.plotLeft,c.legendWidth<span class="pl-k">+</span>g<span class="pl-k">+</span>f<span class="pl-k">+</span>a[<span class="pl-c1">3</span>])}<span class="pl-k">else</span> <span class="pl-k">if</span>(j<span class="pl-k">===</span><span class="pl-s1"><span class="pl-pds">&quot;</span>top<span class="pl-pds">&quot;</span></span>){<span class="pl-k">if</span>(<span class="pl-k">!</span>s(d[<span class="pl-c1">0</span>]))<span class="pl-v">this</span>.plotTop<span class="pl-k">=</span>t(<span class="pl-v">this</span>.plotTop,c.legendHeight<span class="pl-k">+</span>h<span class="pl-k">+</span>f<span class="pl-k">+</span>a[<span class="pl-c1">0</span>])}<span class="pl-k">else</span> <span class="pl-k">if</span>(j<span class="pl-k">===</span><span class="pl-s1"><span class="pl-pds">&quot;</span>bottom<span class="pl-pds">&quot;</span></span><span class="pl-k">&amp;&amp;!</span>s(d[<span class="pl-c1">2</span>]))<span class="pl-v">this</span>.<span class="pl-sc">marginBottom</span><span class="pl-k">=</span>t(<span class="pl-v">this</span>.<span class="pl-sc">marginBottom</span>,c.legendHeight<span class="pl-k">-</span>h<span class="pl-k">+</span>f<span class="pl-k">+</span>a[<span class="pl-c1">2</span>]);<span class="pl-v">this</span>.extraBottomMargin<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.<span class="pl-sc">marginBottom</span><span class="pl-k">+=</span><span class="pl-v">this</span>.extraBottomMargin);<span class="pl-v">this</span>.extraTopMargin<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.plotTop<span class="pl-k">+=</span><span class="pl-v">this</span>.extraTopMargin);<span class="pl-v">this</span>.hasCartesianSeries<span class="pl-k">&amp;&amp;</span>q(<span class="pl-v">this</span>.axes,<span class="pl-st">function</span>(<span class="pl-vpf">a</span>){a.getOffset()});s(d[<span class="pl-c1">3</span>])<span class="pl-k">||</span>(<span class="pl-v">this</span>.plotLeft<span class="pl-k">+=</span>b[<span class="pl-c1">3</span>]);s(d[<span class="pl-c1">0</span>])<span class="pl-k">||</span>(<span class="pl-v">this</span>.plotTop<span class="pl-k">+=</span>b[<span class="pl-c1">0</span>]);</td>
      </tr>
      <tr>
        <td id="L203" class="blob-num js-line-number" data-line-number="203"></td>
        <td id="LC203" class="blob-code js-file-line">s(d[<span class="pl-c1">2</span>])<span class="pl-k">||</span>(<span class="pl-v">this</span>.<span class="pl-sc">marginBottom</span><span class="pl-k">+=</span>b[<span class="pl-c1">2</span>]);s(d[<span class="pl-c1">1</span>])<span class="pl-k">||</span>(<span class="pl-v">this</span>.<span class="pl-sc">marginRight</span><span class="pl-k">+=</span>b[<span class="pl-c1">1</span>]);<span class="pl-v">this</span>.setChartSize()},<span class="pl-en">reflow</span>:<span class="pl-st">function</span>(<span class="pl-vpf">a</span>){<span class="pl-s">var</span> b<span class="pl-k">=</span><span class="pl-v">this</span>,c<span class="pl-k">=</span>b.<span class="pl-sc">options</span>.chart,d<span class="pl-k">=</span>b.renderTo,e<span class="pl-k">=</span>c.<span class="pl-sc">width</span><span class="pl-k">||</span>ib(d,<span class="pl-s1"><span class="pl-pds">&quot;</span>width<span class="pl-pds">&quot;</span></span>),f<span class="pl-k">=</span>c.<span class="pl-sc">height</span><span class="pl-k">||</span>ib(d,<span class="pl-s1"><span class="pl-pds">&quot;</span>height<span class="pl-pds">&quot;</span></span>),c<span class="pl-k">=</span>a<span class="pl-k">?</span>a.<span class="pl-sc">target</span><span class="pl-k">:</span>G,<span class="pl-en">d</span><span class="pl-k">=</span><span class="pl-st">function</span>(){<span class="pl-k">if</span>(b.container)b.setSize(e,f,<span class="pl-k">!</span><span class="pl-c1">1</span>),b.hasUserSize<span class="pl-k">=</span><span class="pl-c1">null</span>};<span class="pl-k">if</span>(<span class="pl-k">!</span>b.hasUserSize<span class="pl-k">&amp;&amp;</span>e<span class="pl-k">&amp;&amp;</span>f<span class="pl-k">&amp;&amp;</span>(c<span class="pl-k">===</span>G<span class="pl-k">||</span>c<span class="pl-k">===</span>x)){<span class="pl-k">if</span>(e<span class="pl-k">!==</span>b.containerWidth<span class="pl-k">||</span>f<span class="pl-k">!==</span>b.containerHeight)<span class="pl-s3">clearTimeout</span>(b.reflowTimeout),a<span class="pl-k">?</span>b.reflowTimeout<span class="pl-k">=</span><span class="pl-s3">setTimeout</span>(d,<span class="pl-c1">100</span>)<span class="pl-k">:</span>d();b.containerWidth<span class="pl-k">=</span>e;b.containerHeight<span class="pl-k">=</span>f}},<span class="pl-en">initReflow</span>:<span class="pl-st">function</span>(){<span class="pl-s">var</span> a<span class="pl-k">=</span></td>
      </tr>
      <tr>
        <td id="L204" class="blob-num js-line-number" data-line-number="204"></td>
        <td id="LC204" class="blob-code js-file-line"><span class="pl-v">this</span>,<span class="pl-en">b</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">b</span>){a.reflow(b)};N(G,<span class="pl-s1"><span class="pl-pds">&quot;</span>resize<span class="pl-pds">&quot;</span></span>,b);N(a,<span class="pl-s1"><span class="pl-pds">&quot;</span>destroy<span class="pl-pds">&quot;</span></span>,<span class="pl-st">function</span>(){X(G,<span class="pl-s1"><span class="pl-pds">&quot;</span>resize<span class="pl-pds">&quot;</span></span>,b)})},<span class="pl-en">setSize</span>:<span class="pl-st">function</span>(<span class="pl-vpf">a</span>,<span class="pl-vpf">b</span>,<span class="pl-vpf">c</span>){<span class="pl-s">var</span> d<span class="pl-k">=</span><span class="pl-v">this</span>,e,f,g;d.isResizing<span class="pl-k">+=</span><span class="pl-c1">1</span>;<span class="pl-en">g</span><span class="pl-k">=</span><span class="pl-st">function</span>(){d<span class="pl-k">&amp;&amp;</span>I(d,<span class="pl-s1"><span class="pl-pds">&quot;</span>endResize<span class="pl-pds">&quot;</span></span>,<span class="pl-c1">null</span>,<span class="pl-st">function</span>(){d.isResizing<span class="pl-k">-=</span><span class="pl-c1">1</span>})};Ra(c,d);d.oldChartHeight<span class="pl-k">=</span>d.chartHeight;d.oldChartWidth<span class="pl-k">=</span>d.chartWidth;<span class="pl-k">if</span>(s(a))d.chartWidth<span class="pl-k">=</span>e<span class="pl-k">=</span>t(<span class="pl-c1">0</span>,v(a)),d.hasUserSize<span class="pl-k">=!!</span>e;<span class="pl-k">if</span>(s(b))d.chartHeight<span class="pl-k">=</span>f<span class="pl-k">=</span>t(<span class="pl-c1">0</span>,v(b));(va<span class="pl-k">?</span>jb<span class="pl-k">:</span>B)(d.container,{width<span class="pl-k">:</span>e<span class="pl-k">+</span><span class="pl-s1"><span class="pl-pds">&quot;</span>px<span class="pl-pds">&quot;</span></span>,height<span class="pl-k">:</span>f<span class="pl-k">+</span><span class="pl-s1"><span class="pl-pds">&quot;</span>px<span class="pl-pds">&quot;</span></span>},va);d.setChartSize(<span class="pl-k">!</span><span class="pl-c1">0</span>);d.renderer.setSize(e,f,c);d.maxTicks<span class="pl-k">=</span><span class="pl-c1">null</span>;q(d.axes,<span class="pl-st">function</span>(<span class="pl-vpf">a</span>){a.isDirty<span class="pl-k">=</span></td>
      </tr>
      <tr>
        <td id="L205" class="blob-num js-line-number" data-line-number="205"></td>
        <td id="LC205" class="blob-code js-file-line"><span class="pl-k">!</span><span class="pl-c1">0</span>;a.setScale()});q(d.series,<span class="pl-st">function</span>(<span class="pl-vpf">a</span>){a.isDirty<span class="pl-k">=!</span><span class="pl-c1">0</span>});d.isDirtyLegend<span class="pl-k">=!</span><span class="pl-c1">0</span>;d.isDirtyBox<span class="pl-k">=!</span><span class="pl-c1">0</span>;d.layOutTitles();d.getMargins();d.redraw(c);d.oldChartHeight<span class="pl-k">=</span><span class="pl-c1">null</span>;I(d,<span class="pl-s1"><span class="pl-pds">&quot;</span>resize<span class="pl-pds">&quot;</span></span>);va<span class="pl-k">===!</span><span class="pl-c1">1</span><span class="pl-k">?</span>g()<span class="pl-k">:</span><span class="pl-s3">setTimeout</span>(g,va<span class="pl-k">&amp;&amp;</span>va.duration<span class="pl-k">||</span><span class="pl-c1">500</span>)},<span class="pl-en">setChartSize</span>:<span class="pl-st">function</span>(<span class="pl-vpf">a</span>){<span class="pl-s">var</span> b<span class="pl-k">=</span><span class="pl-v">this</span>.inverted,c<span class="pl-k">=</span><span class="pl-v">this</span>.renderer,d<span class="pl-k">=</span><span class="pl-v">this</span>.chartWidth,e<span class="pl-k">=</span><span class="pl-v">this</span>.chartHeight,f<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-sc">options</span>.chart,g<span class="pl-k">=</span><span class="pl-v">this</span>.spacing,h<span class="pl-k">=</span><span class="pl-v">this</span>.clipOffset,i,j,k,l;<span class="pl-v">this</span>.plotLeft<span class="pl-k">=</span>i<span class="pl-k">=</span>v(<span class="pl-v">this</span>.plotLeft);<span class="pl-v">this</span>.plotTop<span class="pl-k">=</span>j<span class="pl-k">=</span>v(<span class="pl-v">this</span>.plotTop);<span class="pl-v">this</span>.plotWidth<span class="pl-k">=</span>k<span class="pl-k">=</span>t(<span class="pl-c1">0</span>,v(d<span class="pl-k">-</span>i<span class="pl-k">-</span><span class="pl-v">this</span>.<span class="pl-sc">marginRight</span>));<span class="pl-v">this</span>.plotHeight<span class="pl-k">=</span></td>
      </tr>
      <tr>
        <td id="L206" class="blob-num js-line-number" data-line-number="206"></td>
        <td id="LC206" class="blob-code js-file-line">l<span class="pl-k">=</span>t(<span class="pl-c1">0</span>,v(e<span class="pl-k">-</span>j<span class="pl-k">-</span><span class="pl-v">this</span>.<span class="pl-sc">marginBottom</span>));<span class="pl-v">this</span>.plotSizeX<span class="pl-k">=</span>b<span class="pl-k">?</span>l<span class="pl-k">:</span>k;<span class="pl-v">this</span>.plotSizeY<span class="pl-k">=</span>b<span class="pl-k">?</span>k<span class="pl-k">:</span>l;<span class="pl-v">this</span>.plotBorderWidth<span class="pl-k">=</span>f.plotBorderWidth<span class="pl-k">||</span><span class="pl-c1">0</span>;<span class="pl-v">this</span>.spacingBox<span class="pl-k">=</span>c.spacingBox<span class="pl-k">=</span>{x<span class="pl-k">:</span>g[<span class="pl-c1">3</span>],y<span class="pl-k">:</span>g[<span class="pl-c1">0</span>],width<span class="pl-k">:</span>d<span class="pl-k">-</span>g[<span class="pl-c1">3</span>]<span class="pl-k">-</span>g[<span class="pl-c1">1</span>],height<span class="pl-k">:</span>e<span class="pl-k">-</span>g[<span class="pl-c1">0</span>]<span class="pl-k">-</span>g[<span class="pl-c1">2</span>]};<span class="pl-v">this</span>.plotBox<span class="pl-k">=</span>c.plotBox<span class="pl-k">=</span>{x<span class="pl-k">:</span>i,y<span class="pl-k">:</span>j,width<span class="pl-k">:</span>k,height<span class="pl-k">:</span>l};d<span class="pl-k">=</span><span class="pl-c1">2</span><span class="pl-k">*</span>U(<span class="pl-v">this</span>.plotBorderWidth/<span class="pl-c1">2</span>);b<span class="pl-k">=</span>La(t(d,h[<span class="pl-c1">3</span>])/<span class="pl-c1">2</span>);c<span class="pl-k">=</span>La(t(d,h[<span class="pl-c1">0</span>])/<span class="pl-c1">2</span>);<span class="pl-v">this</span>.clipBox<span class="pl-k">=</span>{x<span class="pl-k">:</span>b,y<span class="pl-k">:</span>c,width<span class="pl-k">:</span>U(<span class="pl-v">this</span>.plotSizeX<span class="pl-k">-</span>t(d,h[<span class="pl-c1">1</span>])/<span class="pl-c1">2</span><span class="pl-k">-</span>b),height<span class="pl-k">:</span>t(<span class="pl-c1">0</span>,U(<span class="pl-v">this</span>.plotSizeY<span class="pl-k">-</span>t(d,h[<span class="pl-c1">2</span>])/<span class="pl-c1">2</span><span class="pl-k">-</span>c))};a<span class="pl-k">||</span>q(<span class="pl-v">this</span>.axes,<span class="pl-st">function</span>(<span class="pl-vpf">a</span>){a.setAxisSize();a.setAxisTranslation()})},<span class="pl-en">resetMargins</span>:<span class="pl-st">function</span>(){<span class="pl-s">var</span> a<span class="pl-k">=</span></td>
      </tr>
      <tr>
        <td id="L207" class="blob-num js-line-number" data-line-number="207"></td>
        <td id="LC207" class="blob-code js-file-line"><span class="pl-v">this</span>.spacing,b<span class="pl-k">=</span><span class="pl-v">this</span>.margin;<span class="pl-v">this</span>.plotTop<span class="pl-k">=</span>p(b[<span class="pl-c1">0</span>],a[<span class="pl-c1">0</span>]);<span class="pl-v">this</span>.<span class="pl-sc">marginRight</span><span class="pl-k">=</span>p(b[<span class="pl-c1">1</span>],a[<span class="pl-c1">1</span>]);<span class="pl-v">this</span>.<span class="pl-sc">marginBottom</span><span class="pl-k">=</span>p(b[<span class="pl-c1">2</span>],a[<span class="pl-c1">2</span>]);<span class="pl-v">this</span>.plotLeft<span class="pl-k">=</span>p(b[<span class="pl-c1">3</span>],a[<span class="pl-c1">3</span>]);<span class="pl-v">this</span>.axisOffset<span class="pl-k">=</span>[<span class="pl-c1">0</span>,<span class="pl-c1">0</span>,<span class="pl-c1">0</span>,<span class="pl-c1">0</span>];<span class="pl-v">this</span>.clipOffset<span class="pl-k">=</span>[<span class="pl-c1">0</span>,<span class="pl-c1">0</span>,<span class="pl-c1">0</span>,<span class="pl-c1">0</span>]},<span class="pl-en">drawChartBox</span>:<span class="pl-st">function</span>(){<span class="pl-s">var</span> a<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-sc">options</span>.chart,b<span class="pl-k">=</span><span class="pl-v">this</span>.renderer,c<span class="pl-k">=</span><span class="pl-v">this</span>.chartWidth,d<span class="pl-k">=</span><span class="pl-v">this</span>.chartHeight,e<span class="pl-k">=</span><span class="pl-v">this</span>.chartBackground,f<span class="pl-k">=</span><span class="pl-v">this</span>.plotBackground,g<span class="pl-k">=</span><span class="pl-v">this</span>.plotBorder,h<span class="pl-k">=</span><span class="pl-v">this</span>.plotBGImage,i<span class="pl-k">=</span>a.<span class="pl-sc">borderWidth</span><span class="pl-k">||</span><span class="pl-c1">0</span>,j<span class="pl-k">=</span>a.<span class="pl-sc">backgroundColor</span>,k<span class="pl-k">=</span>a.plotBackgroundColor,l<span class="pl-k">=</span>a.plotBackgroundImage,n<span class="pl-k">=</span>a.plotBorderWidth<span class="pl-k">||</span><span class="pl-c1">0</span>,m,o<span class="pl-k">=</span><span class="pl-v">this</span>.plotLeft,</td>
      </tr>
      <tr>
        <td id="L208" class="blob-num js-line-number" data-line-number="208"></td>
        <td id="LC208" class="blob-code js-file-line">p<span class="pl-k">=</span><span class="pl-v">this</span>.plotTop,q<span class="pl-k">=</span><span class="pl-v">this</span>.plotWidth,r<span class="pl-k">=</span><span class="pl-v">this</span>.plotHeight,t<span class="pl-k">=</span><span class="pl-v">this</span>.plotBox,s<span class="pl-k">=</span><span class="pl-v">this</span>.clipRect,v<span class="pl-k">=</span><span class="pl-v">this</span>.clipBox;m<span class="pl-k">=</span>i<span class="pl-k">+</span>(a.shadow<span class="pl-k">?</span><span class="pl-c1">8</span><span class="pl-k">:</span><span class="pl-c1">0</span>);<span class="pl-k">if</span>(i<span class="pl-k">||</span>j)<span class="pl-k">if</span>(e)e.animate(e.crisp({width<span class="pl-k">:</span>c<span class="pl-k">-</span>m,height<span class="pl-k">:</span>d<span class="pl-k">-</span>m}));<span class="pl-k">else</span>{e<span class="pl-k">=</span>{fill<span class="pl-k">:</span>j<span class="pl-k">||</span>P};<span class="pl-k">if</span>(i)e.stroke<span class="pl-k">=</span>a.<span class="pl-sc">borderColor</span>,e[<span class="pl-s1"><span class="pl-pds">&quot;</span>stroke-width<span class="pl-pds">&quot;</span></span>]<span class="pl-k">=</span>i;<span class="pl-v">this</span>.chartBackground<span class="pl-k">=</span>b.rect(m/<span class="pl-c1">2</span>,m/<span class="pl-c1">2</span>,c<span class="pl-k">-</span>m,d<span class="pl-k">-</span>m,a.borderRadius,i).attr(e).addClass(<span class="pl-s1"><span class="pl-pds">&quot;</span>highcharts-background<span class="pl-pds">&quot;</span></span>).<span class="pl-s3">add</span>().shadow(a.shadow)}<span class="pl-k">if</span>(k)f<span class="pl-k">?</span>f.animate(t)<span class="pl-k">:</span><span class="pl-v">this</span>.plotBackground<span class="pl-k">=</span>b.rect(o,p,q,r,<span class="pl-c1">0</span>).attr({fill<span class="pl-k">:</span>k}).<span class="pl-s3">add</span>().shadow(a.plotShadow);<span class="pl-k">if</span>(l)h<span class="pl-k">?</span>h.animate(t)<span class="pl-k">:</span><span class="pl-v">this</span>.plotBGImage<span class="pl-k">=</span></td>
      </tr>
      <tr>
        <td id="L209" class="blob-num js-line-number" data-line-number="209"></td>
        <td id="LC209" class="blob-code js-file-line">b.image(l,o,p,q,r).<span class="pl-s3">add</span>();s<span class="pl-k">?</span>s.animate({width<span class="pl-k">:</span>v.<span class="pl-sc">width</span>,height<span class="pl-k">:</span>v.<span class="pl-sc">height</span>})<span class="pl-k">:</span><span class="pl-v">this</span>.clipRect<span class="pl-k">=</span>b.clipRect(v);<span class="pl-k">if</span>(n)g<span class="pl-k">?</span>g.animate(g.crisp({x<span class="pl-k">:</span>o,y<span class="pl-k">:</span>p,width<span class="pl-k">:</span>q,height<span class="pl-k">:</span>r,strokeWidth<span class="pl-k">:-</span>n}))<span class="pl-k">:</span><span class="pl-v">this</span>.plotBorder<span class="pl-k">=</span>b.rect(o,p,q,r,<span class="pl-c1">0</span>,<span class="pl-k">-</span>n).attr({stroke<span class="pl-k">:</span>a.plotBorderColor,<span class="pl-s1"><span class="pl-pds">&quot;</span>stroke-width<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span>n,fill<span class="pl-k">:</span>P,zIndex<span class="pl-k">:</span><span class="pl-c1">1</span>}).<span class="pl-s3">add</span>();<span class="pl-v">this</span>.isDirtyBox<span class="pl-k">=!</span><span class="pl-c1">1</span>},<span class="pl-en">propFromSeries</span>:<span class="pl-st">function</span>(){<span class="pl-s">var</span> a<span class="pl-k">=</span><span class="pl-v">this</span>,b<span class="pl-k">=</span>a.<span class="pl-sc">options</span>.chart,c,d<span class="pl-k">=</span>a.<span class="pl-sc">options</span>.series,e,f;q([<span class="pl-s1"><span class="pl-pds">&quot;</span>inverted<span class="pl-pds">&quot;</span></span>,<span class="pl-s1"><span class="pl-pds">&quot;</span>angular<span class="pl-pds">&quot;</span></span>,<span class="pl-s1"><span class="pl-pds">&quot;</span>polar<span class="pl-pds">&quot;</span></span>],<span class="pl-st">function</span>(<span class="pl-vpf">g</span>){c<span class="pl-k">=</span>H[b.<span class="pl-sc">type</span><span class="pl-k">||</span>b.defaultSeriesType];f<span class="pl-k">=</span>a[g]<span class="pl-k">||</span>b[g]<span class="pl-k">||</span>c<span class="pl-k">&amp;&amp;</span>c.<span class="pl-sc">prototype</span>[g];<span class="pl-k">for</span>(e<span class="pl-k">=</span>d<span class="pl-k">&amp;&amp;</span>d.<span class="pl-sc">length</span>;<span class="pl-k">!</span>f<span class="pl-k">&amp;&amp;</span></td>
      </tr>
      <tr>
        <td id="L210" class="blob-num js-line-number" data-line-number="210"></td>
        <td id="LC210" class="blob-code js-file-line">e<span class="pl-k">--</span>;)(c<span class="pl-k">=</span>H[d[e].<span class="pl-sc">type</span>])<span class="pl-k">&amp;&amp;</span>c.<span class="pl-sc">prototype</span>[g]<span class="pl-k">&amp;&amp;</span>(f<span class="pl-k">=!</span><span class="pl-c1">0</span>);a[g]<span class="pl-k">=</span>f})},<span class="pl-en">linkSeries</span>:<span class="pl-st">function</span>(){<span class="pl-s">var</span> a<span class="pl-k">=</span><span class="pl-v">this</span>,b<span class="pl-k">=</span>a.series;q(b,<span class="pl-st">function</span>(<span class="pl-vpf">a</span>){a.linkedSeries.<span class="pl-sc">length</span><span class="pl-k">=</span><span class="pl-c1">0</span>});q(b,<span class="pl-st">function</span>(<span class="pl-vpf">b</span>){<span class="pl-s">var</span> d<span class="pl-k">=</span>b.<span class="pl-sc">options</span>.linkedTo;<span class="pl-k">if</span>(Ga(d)<span class="pl-k">&amp;&amp;</span>(d<span class="pl-k">=</span>d<span class="pl-k">===</span><span class="pl-s1"><span class="pl-pds">&quot;</span>:previous<span class="pl-pds">&quot;</span></span><span class="pl-k">?</span>a.series[b.<span class="pl-sc">index</span><span class="pl-k">-</span><span class="pl-c1">1</span>]<span class="pl-k">:</span>a.get(d)))d.linkedSeries.<span class="pl-s3">push</span>(b),b.linkedParent<span class="pl-k">=</span>d})},<span class="pl-en">renderSeries</span>:<span class="pl-st">function</span>(){q(<span class="pl-v">this</span>.series,<span class="pl-st">function</span>(<span class="pl-vpf">a</span>){a.translate();a.setTooltipPoints<span class="pl-k">&amp;&amp;</span>a.setTooltipPoints();a.render()})},<span class="pl-en">renderLabels</span>:<span class="pl-st">function</span>(){<span class="pl-s">var</span> a<span class="pl-k">=</span><span class="pl-v">this</span>,b<span class="pl-k">=</span>a.<span class="pl-sc">options</span>.labels;b.items<span class="pl-k">&amp;&amp;</span>q(b.items,<span class="pl-st">function</span>(<span class="pl-vpf">c</span>){<span class="pl-s">var</span> d<span class="pl-k">=</span>r(b.<span class="pl-sc">style</span>,</td>
      </tr>
      <tr>
        <td id="L211" class="blob-num js-line-number" data-line-number="211"></td>
        <td id="LC211" class="blob-code js-file-line">c.<span class="pl-sc">style</span>),e<span class="pl-k">=</span>y(d.<span class="pl-sc">left</span>)<span class="pl-k">+</span>a.plotLeft,f<span class="pl-k">=</span>y(d.<span class="pl-sc">top</span>)<span class="pl-k">+</span>a.plotTop<span class="pl-k">+</span><span class="pl-c1">12</span>;<span class="pl-k">delete</span> d.<span class="pl-sc">left</span>;<span class="pl-k">delete</span> d.<span class="pl-sc">top</span>;a.renderer.<span class="pl-sc">text</span>(c.html,e,f).attr({zIndex<span class="pl-k">:</span><span class="pl-c1">2</span>}).css(d).<span class="pl-s3">add</span>()})},<span class="pl-en">render</span>:<span class="pl-st">function</span>(){<span class="pl-s">var</span> a<span class="pl-k">=</span><span class="pl-v">this</span>.axes,b<span class="pl-k">=</span><span class="pl-v">this</span>.renderer,c<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-sc">options</span>;<span class="pl-v">this</span>.setTitle();<span class="pl-v">this</span>.legend<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">lb</span>(<span class="pl-v">this</span>,c.legend);<span class="pl-v">this</span>.getStacks();q(a,<span class="pl-st">function</span>(<span class="pl-vpf">a</span>){a.setScale()});<span class="pl-v">this</span>.getMargins();<span class="pl-v">this</span>.maxTicks<span class="pl-k">=</span><span class="pl-c1">null</span>;q(a,<span class="pl-st">function</span>(<span class="pl-vpf">a</span>){a.setTickPositions(<span class="pl-k">!</span><span class="pl-c1">0</span>);a.setMaxTicks()});<span class="pl-v">this</span>.adjustTickAmounts();<span class="pl-v">this</span>.getMargins();<span class="pl-v">this</span>.drawChartBox();<span class="pl-v">this</span>.hasCartesianSeries<span class="pl-k">&amp;&amp;</span>q(a,<span class="pl-st">function</span>(<span class="pl-vpf">a</span>){a.render()});</td>
      </tr>
      <tr>
        <td id="L212" class="blob-num js-line-number" data-line-number="212"></td>
        <td id="LC212" class="blob-code js-file-line"><span class="pl-k">if</span>(<span class="pl-k">!</span><span class="pl-v">this</span>.seriesGroup)<span class="pl-v">this</span>.seriesGroup<span class="pl-k">=</span>b.g(<span class="pl-s1"><span class="pl-pds">&quot;</span>series-group<span class="pl-pds">&quot;</span></span>).attr({zIndex<span class="pl-k">:</span><span class="pl-c1">3</span>}).<span class="pl-s3">add</span>();<span class="pl-v">this</span>.renderSeries();<span class="pl-v">this</span>.renderLabels();<span class="pl-v">this</span>.showCredits(c.credits);<span class="pl-v">this</span>.hasRendered<span class="pl-k">=!</span><span class="pl-c1">0</span>},<span class="pl-en">showCredits</span>:<span class="pl-st">function</span>(<span class="pl-vpf">a</span>){<span class="pl-k">if</span>(a.enabled<span class="pl-k">&amp;&amp;!</span><span class="pl-v">this</span>.credits)<span class="pl-v">this</span>.credits<span class="pl-k">=</span><span class="pl-v">this</span>.renderer.<span class="pl-sc">text</span>(a.<span class="pl-sc">text</span>,<span class="pl-c1">0</span>,<span class="pl-c1">0</span>).on(<span class="pl-s1"><span class="pl-pds">&quot;</span>click<span class="pl-pds">&quot;</span></span>,<span class="pl-st">function</span>(){<span class="pl-k">if</span>(a.<span class="pl-sc">href</span>)location.<span class="pl-sc">href</span><span class="pl-k">=</span>a.<span class="pl-sc">href</span>}).attr({align<span class="pl-k">:</span>a.position.<span class="pl-sc">align</span>,zIndex<span class="pl-k">:</span><span class="pl-c1">8</span>}).css(a.<span class="pl-sc">style</span>).<span class="pl-s3">add</span>().<span class="pl-sc">align</span>(a.position)},<span class="pl-en">destroy</span>:<span class="pl-st">function</span>(){<span class="pl-s">var</span> a<span class="pl-k">=</span><span class="pl-v">this</span>,b<span class="pl-k">=</span>a.axes,c<span class="pl-k">=</span>a.series,d<span class="pl-k">=</span>a.container,e,f<span class="pl-k">=</span>d<span class="pl-k">&amp;&amp;</span>d.<span class="pl-sc">parentNode</span>;I(a,<span class="pl-s1"><span class="pl-pds">&quot;</span>destroy<span class="pl-pds">&quot;</span></span>);W[a.<span class="pl-sc">index</span>]<span class="pl-k">=</span></td>
      </tr>
      <tr>
        <td id="L213" class="blob-num js-line-number" data-line-number="213"></td>
        <td id="LC213" class="blob-code js-file-line">u;ab<span class="pl-k">--</span>;a.renderTo.<span class="pl-s3">removeAttribute</span>(<span class="pl-s1"><span class="pl-pds">&quot;</span>data-highcharts-chart<span class="pl-pds">&quot;</span></span>);X(a);<span class="pl-k">for</span>(e<span class="pl-k">=</span>b.<span class="pl-sc">length</span>;e<span class="pl-k">--</span>;)b[e]<span class="pl-k">=</span>b[e].destroy();<span class="pl-k">for</span>(e<span class="pl-k">=</span>c.<span class="pl-sc">length</span>;e<span class="pl-k">--</span>;)c[e]<span class="pl-k">=</span>c[e].destroy();q(<span class="pl-s1"><span class="pl-pds">&quot;</span>title,subtitle,chartBackground,plotBackground,plotBGImage,plotBorder,seriesGroup,clipRect,credits,pointer,scroller,rangeSelector,legend,resetZoomButton,tooltip,renderer<span class="pl-pds">&quot;</span></span>.<span class="pl-s3">split</span>(<span class="pl-s1"><span class="pl-pds">&quot;</span>,<span class="pl-pds">&quot;</span></span>),<span class="pl-st">function</span>(<span class="pl-vpf">b</span>){<span class="pl-s">var</span> c<span class="pl-k">=</span>a[b];c<span class="pl-k">&amp;&amp;</span>c.destroy<span class="pl-k">&amp;&amp;</span>(a[b]<span class="pl-k">=</span>c.destroy())});<span class="pl-k">if</span>(d)d.innerHTML<span class="pl-k">=</span><span class="pl-s1"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>,X(d),f<span class="pl-k">&amp;&amp;</span>Qa(d);<span class="pl-k">for</span>(e <span class="pl-k">in</span> a)<span class="pl-k">delete</span> a[e]},<span class="pl-en">isReadyToRender</span>:<span class="pl-st">function</span>(){<span class="pl-s">var</span> a<span class="pl-k">=</span><span class="pl-v">this</span>;<span class="pl-k">return</span><span class="pl-k">!</span>ba<span class="pl-k">&amp;&amp;</span>G<span class="pl-k">==</span>G.<span class="pl-sc">top</span><span class="pl-k">&amp;&amp;</span></td>
      </tr>
      <tr>
        <td id="L214" class="blob-num js-line-number" data-line-number="214"></td>
        <td id="LC214" class="blob-code js-file-line">x.<span class="pl-sc">readyState</span><span class="pl-k">!==</span><span class="pl-s1"><span class="pl-pds">&quot;</span>complete<span class="pl-pds">&quot;</span></span><span class="pl-k">||</span>ga<span class="pl-k">&amp;&amp;!</span>G.canvg<span class="pl-k">?</span>(ga<span class="pl-k">?</span>Mb.<span class="pl-s3">push</span>(<span class="pl-st">function</span>(){a.firstRender()},a.<span class="pl-sc">options</span>.<span class="pl-sc">global</span>.canvasToolsURL)<span class="pl-k">:</span>x.<span class="pl-s3">attachEvent</span>(<span class="pl-s1"><span class="pl-pds">&quot;</span>onreadystatechange<span class="pl-pds">&quot;</span></span>,<span class="pl-st">function</span>(){x.<span class="pl-s3">detachEvent</span>(<span class="pl-s1"><span class="pl-pds">&quot;</span>onreadystatechange<span class="pl-pds">&quot;</span></span>,a.firstRender);x.<span class="pl-sc">readyState</span><span class="pl-k">===</span><span class="pl-s1"><span class="pl-pds">&quot;</span>complete<span class="pl-pds">&quot;</span></span><span class="pl-k">&amp;&amp;</span>a.firstRender()}),<span class="pl-k">!</span><span class="pl-c1">1</span>)<span class="pl-k">:!</span><span class="pl-c1">0</span>},<span class="pl-en">firstRender</span>:<span class="pl-st">function</span>(){<span class="pl-s">var</span> a<span class="pl-k">=</span><span class="pl-v">this</span>,b<span class="pl-k">=</span>a.<span class="pl-sc">options</span>,c<span class="pl-k">=</span>a.callback;<span class="pl-k">if</span>(a.isReadyToRender()){a.getContainer();I(a,<span class="pl-s1"><span class="pl-pds">&quot;</span>init<span class="pl-pds">&quot;</span></span>);a.resetMargins();a.setChartSize();a.propFromSeries();a.getAxes();q(b.series<span class="pl-k">||</span>[],<span class="pl-st">function</span>(<span class="pl-vpf">b</span>){a.initSeries(b)});a.linkSeries();I(a,</td>
      </tr>
      <tr>
        <td id="L215" class="blob-num js-line-number" data-line-number="215"></td>
        <td id="LC215" class="blob-code js-file-line"><span class="pl-s1"><span class="pl-pds">&quot;</span>beforeRender<span class="pl-pds">&quot;</span></span>);<span class="pl-k">if</span>(K.Pointer)a.pointer<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">Wa</span>(a,b);a.render();a.renderer.draw();c<span class="pl-k">&amp;&amp;</span>c.<span class="pl-s3">apply</span>(a,[a]);q(a.callbacks,<span class="pl-st">function</span>(<span class="pl-vpf">b</span>){b.<span class="pl-s3">apply</span>(a,[a])});a.cloneRenderTo(<span class="pl-k">!</span><span class="pl-c1">0</span>);I(a,<span class="pl-s1"><span class="pl-pds">&quot;</span>load<span class="pl-pds">&quot;</span></span>)}},<span class="pl-en">splashArray</span>:<span class="pl-st">function</span>(<span class="pl-vpf">a</span>,<span class="pl-vpf">b</span>){<span class="pl-s">var</span> c<span class="pl-k">=</span>b[a],c<span class="pl-k">=</span>da(c)<span class="pl-k">?</span>c<span class="pl-k">:</span>[c,c,c,c];<span class="pl-k">return</span>[p(b[a<span class="pl-k">+</span><span class="pl-s1"><span class="pl-pds">&quot;</span>Top<span class="pl-pds">&quot;</span></span>],c[<span class="pl-c1">0</span>]),p(b[a<span class="pl-k">+</span><span class="pl-s1"><span class="pl-pds">&quot;</span>Right<span class="pl-pds">&quot;</span></span>],c[<span class="pl-c1">1</span>]),p(b[a<span class="pl-k">+</span><span class="pl-s1"><span class="pl-pds">&quot;</span>Bottom<span class="pl-pds">&quot;</span></span>],c[<span class="pl-c1">2</span>]),p(b[a<span class="pl-k">+</span><span class="pl-s1"><span class="pl-pds">&quot;</span>Left<span class="pl-pds">&quot;</span></span>],c[<span class="pl-c1">3</span>])]}};<span class="pl-s3">Ya</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">callbacks</span><span class="pl-k">=</span>[];Z<span class="pl-k">=</span>K.CenteredSeriesMixin<span class="pl-k">=</span>{<span class="pl-en">getCenter</span>:<span class="pl-st">function</span>(){<span class="pl-s">var</span> a<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-sc">options</span>,b<span class="pl-k">=</span><span class="pl-v">this</span>.chart,c<span class="pl-k">=</span><span class="pl-c1">2</span><span class="pl-k">*</span>(a.slicedOffset<span class="pl-k">||</span><span class="pl-c1">0</span>),d,e<span class="pl-k">=</span>b.plotWidth<span class="pl-k">-</span><span class="pl-c1">2</span><span class="pl-k">*</span>c,f<span class="pl-k">=</span>b.plotHeight<span class="pl-k">-</span><span class="pl-c1">2</span><span class="pl-k">*</span>c,b<span class="pl-k">=</span>a.center,</td>
      </tr>
      <tr>
        <td id="L216" class="blob-num js-line-number" data-line-number="216"></td>
        <td id="LC216" class="blob-code js-file-line">a<span class="pl-k">=</span>[p(b[<span class="pl-c1">0</span>],<span class="pl-s1"><span class="pl-pds">&quot;</span>50%<span class="pl-pds">&quot;</span></span>),p(b[<span class="pl-c1">1</span>],<span class="pl-s1"><span class="pl-pds">&quot;</span>50%<span class="pl-pds">&quot;</span></span>),a.<span class="pl-sc">size</span><span class="pl-k">||</span><span class="pl-s1"><span class="pl-pds">&quot;</span>100%<span class="pl-pds">&quot;</span></span>,a.innerSize<span class="pl-k">||</span><span class="pl-c1">0</span>],g<span class="pl-k">=</span>L(e,f),h;<span class="pl-k">return</span> Va(a,<span class="pl-st">function</span>(<span class="pl-vpf">a</span>,<span class="pl-vpf">b</span>){h<span class="pl-k">=</span><span class="pl-sr"><span class="pl-pds">/</span>%<span class="pl-k">$</span><span class="pl-pds">/</span></span>.<span class="pl-s3">test</span>(a);d<span class="pl-k">=</span>b<span class="pl-k">&lt;</span><span class="pl-c1">2</span><span class="pl-k">||</span>b<span class="pl-k">===</span><span class="pl-c1">2</span><span class="pl-k">&amp;&amp;</span>h;<span class="pl-k">return</span>(h<span class="pl-k">?</span>[e,f,g,g][b]<span class="pl-k">*</span>y(a)/<span class="pl-c1">100</span><span class="pl-k">:</span>a)<span class="pl-k">+</span>(d<span class="pl-k">?</span>c<span class="pl-k">:</span><span class="pl-c1">0</span>)})}};<span class="pl-s">var</span> <span class="pl-en">Fa</span><span class="pl-k">=</span><span class="pl-st">function</span>(){};<span class="pl-s3">Fa</span>.<span class="pl-sc">prototype</span><span class="pl-k">=</span>{<span class="pl-en">init</span>:<span class="pl-st">function</span>(<span class="pl-vpf">a</span>,<span class="pl-vpf">b</span>,<span class="pl-vpf">c</span>){<span class="pl-v">this</span>.series<span class="pl-k">=</span>a;<span class="pl-v">this</span>.applyOptions(b,c);<span class="pl-v">this</span>.pointAttr<span class="pl-k">=</span>{};<span class="pl-k">if</span>(a.<span class="pl-sc">options</span>.colorByPoint<span class="pl-k">&amp;&amp;</span>(b<span class="pl-k">=</span>a.<span class="pl-sc">options</span>.colors<span class="pl-k">||</span>a.chart.<span class="pl-sc">options</span>.colors,<span class="pl-v">this</span>.<span class="pl-sc">color</span><span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-sc">color</span><span class="pl-k">||</span>b[a.colorCounter<span class="pl-k">++</span>],a.colorCounter<span class="pl-k">===</span>b.<span class="pl-sc">length</span>))a.colorCounter<span class="pl-k">=</span><span class="pl-c1">0</span>;a.chart.pointCount<span class="pl-k">++</span>;<span class="pl-k">return</span> <span class="pl-v">this</span>},<span class="pl-en">applyOptions</span>:<span class="pl-st">function</span>(<span class="pl-vpf">a</span>,</td>
      </tr>
      <tr>
        <td id="L217" class="blob-num js-line-number" data-line-number="217"></td>
        <td id="LC217" class="blob-code js-file-line"><span class="pl-vpf">b</span>){<span class="pl-s">var</span> c<span class="pl-k">=</span><span class="pl-v">this</span>.series,d<span class="pl-k">=</span>c.<span class="pl-sc">options</span>.pointValKey<span class="pl-k">||</span>c.pointValKey,a<span class="pl-k">=</span>Fa.<span class="pl-sc">prototype</span>.optionsToObject.<span class="pl-s3">call</span>(<span class="pl-v">this</span>,a);r(<span class="pl-v">this</span>,a);<span class="pl-v">this</span>.<span class="pl-sc">options</span><span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-sc">options</span><span class="pl-k">?</span>r(<span class="pl-v">this</span>.<span class="pl-sc">options</span>,a)<span class="pl-k">:</span>a;<span class="pl-k">if</span>(d)<span class="pl-v">this</span>.<span class="pl-sc">y</span><span class="pl-k">=</span><span class="pl-v">this</span>[d];<span class="pl-k">if</span>(<span class="pl-v">this</span>.<span class="pl-sc">x</span><span class="pl-k">===</span>u<span class="pl-k">&amp;&amp;</span>c)<span class="pl-v">this</span>.<span class="pl-sc">x</span><span class="pl-k">=</span>b<span class="pl-k">===</span>u<span class="pl-k">?</span>c.autoIncrement()<span class="pl-k">:</span>b;<span class="pl-k">return</span> <span class="pl-v">this</span>},<span class="pl-en">optionsToObject</span>:<span class="pl-st">function</span>(<span class="pl-vpf">a</span>){<span class="pl-s">var</span> b<span class="pl-k">=</span>{},c<span class="pl-k">=</span><span class="pl-v">this</span>.series,d<span class="pl-k">=</span>c.pointArrayMap<span class="pl-k">||</span>[<span class="pl-s1"><span class="pl-pds">&quot;</span>y<span class="pl-pds">&quot;</span></span>],e<span class="pl-k">=</span>d.<span class="pl-sc">length</span>,f<span class="pl-k">=</span><span class="pl-c1">0</span>,g<span class="pl-k">=</span><span class="pl-c1">0</span>;<span class="pl-k">if</span>(<span class="pl-k">typeof</span> a<span class="pl-k">===</span><span class="pl-s1"><span class="pl-pds">&quot;</span>number<span class="pl-pds">&quot;</span></span><span class="pl-k">||</span>a<span class="pl-k">===</span><span class="pl-c1">null</span>)b[d[<span class="pl-c1">0</span>]]<span class="pl-k">=</span>a;<span class="pl-k">else</span> <span class="pl-k">if</span>(Ha(a)){<span class="pl-k">if</span>(a.<span class="pl-sc">length</span><span class="pl-k">&gt;</span>e){c<span class="pl-k">=typeof</span> a[<span class="pl-c1">0</span>];<span class="pl-k">if</span>(c<span class="pl-k">===</span><span class="pl-s1"><span class="pl-pds">&quot;</span>string<span class="pl-pds">&quot;</span></span>)b.<span class="pl-sc">name</span><span class="pl-k">=</span>a[<span class="pl-c1">0</span>];<span class="pl-k">else</span> <span class="pl-k">if</span>(c<span class="pl-k">===</span><span class="pl-s1"><span class="pl-pds">&quot;</span>number<span class="pl-pds">&quot;</span></span>)b.<span class="pl-sc">x</span><span class="pl-k">=</span>a[<span class="pl-c1">0</span>];f<span class="pl-k">++</span>}<span class="pl-k">for</span>(;g<span class="pl-k">&lt;</span>e;)b[d[g<span class="pl-k">++</span>]]<span class="pl-k">=</span></td>
      </tr>
      <tr>
        <td id="L218" class="blob-num js-line-number" data-line-number="218"></td>
        <td id="LC218" class="blob-code js-file-line">a[f<span class="pl-k">++</span>]}<span class="pl-k">else</span> <span class="pl-k">if</span>(<span class="pl-k">typeof</span> a<span class="pl-k">===</span><span class="pl-s1"><span class="pl-pds">&quot;</span>object<span class="pl-pds">&quot;</span></span>){b<span class="pl-k">=</span>a;<span class="pl-k">if</span>(a.dataLabels)c._hasPointLabels<span class="pl-k">=!</span><span class="pl-c1">0</span>;<span class="pl-k">if</span>(a.marker)c._hasPointMarkers<span class="pl-k">=!</span><span class="pl-c1">0</span>}<span class="pl-k">return</span> b},<span class="pl-en">destroy</span>:<span class="pl-st">function</span>(){<span class="pl-s">var</span> a<span class="pl-k">=</span><span class="pl-v">this</span>.series.chart,b<span class="pl-k">=</span>a.hoverPoints,c;a.pointCount<span class="pl-k">--</span>;<span class="pl-k">if</span>(b<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.setState(),la(b,<span class="pl-v">this</span>),<span class="pl-k">!</span>b.<span class="pl-sc">length</span>))a.hoverPoints<span class="pl-k">=</span><span class="pl-c1">null</span>;<span class="pl-k">if</span>(<span class="pl-v">this</span><span class="pl-k">===</span>a.hoverPoint)<span class="pl-v">this</span>.onMouseOut();<span class="pl-k">if</span>(<span class="pl-v">this</span>.graphic<span class="pl-k">||</span><span class="pl-v">this</span>.dataLabel)X(<span class="pl-v">this</span>),<span class="pl-v">this</span>.destroyElements();<span class="pl-v">this</span>.legendItem<span class="pl-k">&amp;&amp;</span>a.legend.destroyItem(<span class="pl-v">this</span>);<span class="pl-k">for</span>(c <span class="pl-k">in</span> <span class="pl-v">this</span>)<span class="pl-v">this</span>[c]<span class="pl-k">=</span><span class="pl-c1">null</span>},<span class="pl-en">destroyElements</span>:<span class="pl-st">function</span>(){<span class="pl-k">for</span>(<span class="pl-s">var</span> a<span class="pl-k">=</span><span class="pl-s1"><span class="pl-pds">&quot;</span>graphic,dataLabel,dataLabelUpper,group,connector,shadowGroup<span class="pl-pds">&quot;</span></span>.<span class="pl-s3">split</span>(<span class="pl-s1"><span class="pl-pds">&quot;</span>,<span class="pl-pds">&quot;</span></span>),</td>
      </tr>
      <tr>
        <td id="L219" class="blob-num js-line-number" data-line-number="219"></td>
        <td id="LC219" class="blob-code js-file-line">b,c<span class="pl-k">=</span><span class="pl-c1">6</span>;c<span class="pl-k">--</span>;)b<span class="pl-k">=</span>a[c],<span class="pl-v">this</span>[b]<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>[b]<span class="pl-k">=</span><span class="pl-v">this</span>[b].destroy())},<span class="pl-en">getLabelConfig</span>:<span class="pl-st">function</span>(){<span class="pl-k">return</span>{x<span class="pl-k">:</span><span class="pl-v">this</span>.category,y<span class="pl-k">:</span><span class="pl-v">this</span>.<span class="pl-sc">y</span>,key<span class="pl-k">:</span><span class="pl-v">this</span>.<span class="pl-sc">name</span><span class="pl-k">||</span><span class="pl-v">this</span>.category,series<span class="pl-k">:</span><span class="pl-v">this</span>.series,point<span class="pl-k">:</span><span class="pl-v">this</span>,percentage<span class="pl-k">:</span><span class="pl-v">this</span>.percentage,total<span class="pl-k">:</span><span class="pl-v">this</span>.total<span class="pl-k">||</span><span class="pl-v">this</span>.stackTotal}},<span class="pl-en">tooltipFormatter</span>:<span class="pl-st">function</span>(<span class="pl-vpf">a</span>){<span class="pl-s">var</span> b<span class="pl-k">=</span><span class="pl-v">this</span>.series,c<span class="pl-k">=</span>b.tooltipOptions,d<span class="pl-k">=</span>p(c.valueDecimals,<span class="pl-s1"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>),e<span class="pl-k">=</span>c.valuePrefix<span class="pl-k">||</span><span class="pl-s1"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>,f<span class="pl-k">=</span>c.valueSuffix<span class="pl-k">||</span><span class="pl-s1"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>;q(b.pointArrayMap<span class="pl-k">||</span>[<span class="pl-s1"><span class="pl-pds">&quot;</span>y<span class="pl-pds">&quot;</span></span>],<span class="pl-st">function</span>(<span class="pl-vpf">b</span>){b<span class="pl-k">=</span><span class="pl-s1"><span class="pl-pds">&quot;</span>{point.<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>b;<span class="pl-k">if</span>(e<span class="pl-k">||</span>f)a<span class="pl-k">=</span>a.<span class="pl-s3">replace</span>(b<span class="pl-k">+</span><span class="pl-s1"><span class="pl-pds">&quot;</span>}<span class="pl-pds">&quot;</span></span>,e<span class="pl-k">+</span>b<span class="pl-k">+</span><span class="pl-s1"><span class="pl-pds">&quot;</span>}<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>f);a<span class="pl-k">=</span>a.<span class="pl-s3">replace</span>(b<span class="pl-k">+</span><span class="pl-s1"><span class="pl-pds">&quot;</span>}<span class="pl-pds">&quot;</span></span>,b<span class="pl-k">+</span><span class="pl-s1"><span class="pl-pds">&quot;</span>:,.<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>d<span class="pl-k">+</span><span class="pl-s1"><span class="pl-pds">&quot;</span>f}<span class="pl-pds">&quot;</span></span>)});<span class="pl-k">return</span> Ja(a,</td>
      </tr>
      <tr>
        <td id="L220" class="blob-num js-line-number" data-line-number="220"></td>
        <td id="LC220" class="blob-code js-file-line">{point<span class="pl-k">:</span><span class="pl-v">this</span>,series<span class="pl-k">:</span><span class="pl-v">this</span>.series})},<span class="pl-en">firePointEvent</span>:<span class="pl-st">function</span>(<span class="pl-vpf">a</span>,<span class="pl-vpf">b</span>,<span class="pl-vpf">c</span>){<span class="pl-s">var</span> d<span class="pl-k">=</span><span class="pl-v">this</span>,e<span class="pl-k">=</span><span class="pl-v">this</span>.series.<span class="pl-sc">options</span>;(e.point.events[a]<span class="pl-k">||</span>d.<span class="pl-sc">options</span><span class="pl-k">&amp;&amp;</span>d.<span class="pl-sc">options</span>.events<span class="pl-k">&amp;&amp;</span>d.<span class="pl-sc">options</span>.events[a])<span class="pl-k">&amp;&amp;</span><span class="pl-v">this</span>.importEvents();a<span class="pl-k">===</span><span class="pl-s1"><span class="pl-pds">&quot;</span>click<span class="pl-pds">&quot;</span></span><span class="pl-k">&amp;&amp;</span>e.allowPointSelect<span class="pl-k">&amp;&amp;</span>(<span class="pl-en">c</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){d.<span class="pl-s3">select</span>(<span class="pl-c1">null</span>,a.ctrlKey<span class="pl-k">||</span>a.metaKey<span class="pl-k">||</span>a.shiftKey)});I(<span class="pl-v">this</span>,a,b,c)}};<span class="pl-s">var</span> <span class="pl-en">O</span><span class="pl-k">=</span><span class="pl-st">function</span>(){};<span class="pl-s3">O</span>.<span class="pl-sc">prototype</span><span class="pl-k">=</span>{isCartesian<span class="pl-k">:!</span><span class="pl-c1">0</span>,type<span class="pl-k">:</span><span class="pl-s1"><span class="pl-pds">&quot;</span>line<span class="pl-pds">&quot;</span></span>,pointClass<span class="pl-k">:</span>Fa,sorted<span class="pl-k">:!</span><span class="pl-c1">0</span>,requireSorting<span class="pl-k">:!</span><span class="pl-c1">0</span>,pointAttrToOptions<span class="pl-k">:</span>{stroke<span class="pl-k">:</span><span class="pl-s1"><span class="pl-pds">&quot;</span>lineColor<span class="pl-pds">&quot;</span></span>,<span class="pl-s1"><span class="pl-pds">&quot;</span>stroke-width<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s1"><span class="pl-pds">&quot;</span>lineWidth<span class="pl-pds">&quot;</span></span>,fill<span class="pl-k">:</span><span class="pl-s1"><span class="pl-pds">&quot;</span>fillColor<span class="pl-pds">&quot;</span></span>,r<span class="pl-k">:</span><span class="pl-s1"><span class="pl-pds">&quot;</span>radius<span class="pl-pds">&quot;</span></span>},axisTypes<span class="pl-k">:</span>[<span class="pl-s1"><span class="pl-pds">&quot;</span>xAxis<span class="pl-pds">&quot;</span></span>,</td>
      </tr>
      <tr>
        <td id="L221" class="blob-num js-line-number" data-line-number="221"></td>
        <td id="LC221" class="blob-code js-file-line"><span class="pl-s1"><span class="pl-pds">&quot;</span>yAxis<span class="pl-pds">&quot;</span></span>],colorCounter<span class="pl-k">:</span><span class="pl-c1">0</span>,parallelArrays<span class="pl-k">:</span>[<span class="pl-s1"><span class="pl-pds">&quot;</span>x<span class="pl-pds">&quot;</span></span>,<span class="pl-s1"><span class="pl-pds">&quot;</span>y<span class="pl-pds">&quot;</span></span>],<span class="pl-en">init</span>:<span class="pl-st">function</span>(<span class="pl-vpf">a</span>,<span class="pl-vpf">b</span>){<span class="pl-s">var</span> c<span class="pl-k">=</span><span class="pl-v">this</span>,d,e,f<span class="pl-k">=</span>a.series,<span class="pl-en">g</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>,<span class="pl-vpf">b</span>){<span class="pl-k">return</span> p(a.<span class="pl-sc">options</span>.<span class="pl-sc">index</span>,a._i)<span class="pl-k">-</span>p(b.<span class="pl-sc">options</span>.<span class="pl-sc">index</span>,b._i)};c.chart<span class="pl-k">=</span>a;c.<span class="pl-sc">options</span><span class="pl-k">=</span>b<span class="pl-k">=</span>c.setOptions(b);c.linkedSeries<span class="pl-k">=</span>[];c.bindAxes();r(c,{name<span class="pl-k">:</span>b.<span class="pl-sc">name</span>,state<span class="pl-k">:</span><span class="pl-s1"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>,pointAttr<span class="pl-k">:</span>{},visible<span class="pl-k">:</span>b.visible<span class="pl-k">!==!</span><span class="pl-c1">1</span>,selected<span class="pl-k">:</span>b.<span class="pl-sc">selected</span><span class="pl-k">===!</span><span class="pl-c1">0</span>});<span class="pl-k">if</span>(ga)b.animation<span class="pl-k">=!</span><span class="pl-c1">1</span>;e<span class="pl-k">=</span>b.events;<span class="pl-k">for</span>(d <span class="pl-k">in</span> e)N(c,d,e[d]);<span class="pl-k">if</span>(e<span class="pl-k">&amp;&amp;</span>e.click<span class="pl-k">||</span>b.point<span class="pl-k">&amp;&amp;</span>b.point.events<span class="pl-k">&amp;&amp;</span>b.point.events.click<span class="pl-k">||</span>b.allowPointSelect)a.runTrackerClick<span class="pl-k">=!</span><span class="pl-c1">0</span>;c.getColor();c.getSymbol();</td>
      </tr>
      <tr>
        <td id="L222" class="blob-num js-line-number" data-line-number="222"></td>
        <td id="LC222" class="blob-code js-file-line">q(c.parallelArrays,<span class="pl-st">function</span>(<span class="pl-vpf">a</span>){c[a<span class="pl-k">+</span><span class="pl-s1"><span class="pl-pds">&quot;</span>Data<span class="pl-pds">&quot;</span></span>]<span class="pl-k">=</span>[]});c.setData(b.<span class="pl-sc">data</span>,<span class="pl-k">!</span><span class="pl-c1">1</span>);<span class="pl-k">if</span>(c.isCartesian)a.hasCartesianSeries<span class="pl-k">=!</span><span class="pl-c1">0</span>;f.<span class="pl-s3">push</span>(c);c._i<span class="pl-k">=</span>f.<span class="pl-sc">length</span><span class="pl-k">-</span><span class="pl-c1">1</span>;ob(f,g);<span class="pl-v">this</span>.yAxis<span class="pl-k">&amp;&amp;</span>ob(<span class="pl-v">this</span>.yAxis.series,g);q(f,<span class="pl-st">function</span>(<span class="pl-vpf">a</span>,<span class="pl-vpf">b</span>){a.<span class="pl-sc">index</span><span class="pl-k">=</span>b;a.<span class="pl-sc">name</span><span class="pl-k">=</span>a.<span class="pl-sc">name</span><span class="pl-k">||</span><span class="pl-s1"><span class="pl-pds">&quot;</span>Series <span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>(b<span class="pl-k">+</span><span class="pl-c1">1</span>)})},<span class="pl-en">bindAxes</span>:<span class="pl-st">function</span>(){<span class="pl-s">var</span> a<span class="pl-k">=</span><span class="pl-v">this</span>,b<span class="pl-k">=</span>a.<span class="pl-sc">options</span>,c<span class="pl-k">=</span>a.chart,d;q(a.axisTypes<span class="pl-k">||</span>[],<span class="pl-st">function</span>(<span class="pl-vpf">e</span>){q(c[e],<span class="pl-st">function</span>(<span class="pl-vpf">c</span>){d<span class="pl-k">=</span>c.<span class="pl-sc">options</span>;<span class="pl-k">if</span>(b[e]<span class="pl-k">===</span>d.<span class="pl-sc">index</span><span class="pl-k">||</span>b[e]<span class="pl-k">!==</span>u<span class="pl-k">&amp;&amp;</span>b[e]<span class="pl-k">===</span>d.<span class="pl-sc">id</span><span class="pl-k">||</span>b[e]<span class="pl-k">===</span>u<span class="pl-k">&amp;&amp;</span>d.<span class="pl-sc">index</span><span class="pl-k">===</span><span class="pl-c1">0</span>)c.series.<span class="pl-s3">push</span>(a),a[e]<span class="pl-k">=</span>c,c.isDirty<span class="pl-k">=!</span><span class="pl-c1">0</span>});<span class="pl-k">!</span>a[e]<span class="pl-k">&amp;&amp;</span>a.optionalAxis<span class="pl-k">!==</span>e<span class="pl-k">&amp;&amp;</span>ha(<span class="pl-c1">18</span>,<span class="pl-k">!</span><span class="pl-c1">0</span>)})},</td>
      </tr>
      <tr>
        <td id="L223" class="blob-num js-line-number" data-line-number="223"></td>
        <td id="LC223" class="blob-code js-file-line"><span class="pl-en">updateParallelArrays</span>:<span class="pl-st">function</span>(<span class="pl-vpf">a</span>,<span class="pl-vpf">b</span>){<span class="pl-s">var</span> c<span class="pl-k">=</span>a.series,d<span class="pl-k">=</span>arguments;q(c.parallelArrays,<span class="pl-k">typeof</span> b<span class="pl-k">===</span><span class="pl-s1"><span class="pl-pds">&quot;</span>number<span class="pl-pds">&quot;</span></span><span class="pl-k">?</span><span class="pl-st">function</span>(<span class="pl-vpf">d</span>){<span class="pl-s">var</span> f<span class="pl-k">=</span>d<span class="pl-k">===</span><span class="pl-s1"><span class="pl-pds">&quot;</span>y<span class="pl-pds">&quot;</span></span><span class="pl-k">&amp;&amp;</span>c.toYData<span class="pl-k">?</span>c.toYData(a)<span class="pl-k">:</span>a[d];c[d<span class="pl-k">+</span><span class="pl-s1"><span class="pl-pds">&quot;</span>Data<span class="pl-pds">&quot;</span></span>][b]<span class="pl-k">=</span>f}<span class="pl-k">:</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){<span class="pl-s3">Array</span>.<span class="pl-sc">prototype</span>[b].<span class="pl-s3">apply</span>(c[a<span class="pl-k">+</span><span class="pl-s1"><span class="pl-pds">&quot;</span>Data<span class="pl-pds">&quot;</span></span>],<span class="pl-s3">Array</span>.<span class="pl-sc">prototype</span>.slice.<span class="pl-s3">call</span>(d,<span class="pl-c1">2</span>))})},<span class="pl-en">autoIncrement</span>:<span class="pl-st">function</span>(){<span class="pl-s">var</span> a<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-sc">options</span>,b<span class="pl-k">=</span><span class="pl-v">this</span>.xIncrement,b<span class="pl-k">=</span>p(b,a.pointStart,<span class="pl-c1">0</span>);<span class="pl-v">this</span>.pointInterval<span class="pl-k">=</span>p(<span class="pl-v">this</span>.pointInterval,a.pointInterval,<span class="pl-c1">1</span>);<span class="pl-v">this</span>.xIncrement<span class="pl-k">=</span>b<span class="pl-k">+</span><span class="pl-v">this</span>.pointInterval;<span class="pl-k">return</span> b},<span class="pl-en">getSegments</span>:<span class="pl-st">function</span>(){<span class="pl-s">var</span> a<span class="pl-k">=-</span><span class="pl-c1">1</span>,b<span class="pl-k">=</span>[],c,d<span class="pl-k">=</span><span class="pl-v">this</span>.points,</td>
      </tr>
      <tr>
        <td id="L224" class="blob-num js-line-number" data-line-number="224"></td>
        <td id="LC224" class="blob-code js-file-line">e<span class="pl-k">=</span>d.<span class="pl-sc">length</span>;<span class="pl-k">if</span>(e)<span class="pl-k">if</span>(<span class="pl-v">this</span>.<span class="pl-sc">options</span>.connectNulls){<span class="pl-k">for</span>(c<span class="pl-k">=</span>e;c<span class="pl-k">--</span>;)d[c].<span class="pl-sc">y</span><span class="pl-k">===</span><span class="pl-c1">null</span><span class="pl-k">&amp;&amp;</span>d.<span class="pl-s3">splice</span>(c,<span class="pl-c1">1</span>);d.<span class="pl-sc">length</span><span class="pl-k">&amp;&amp;</span>(b<span class="pl-k">=</span>[d])}<span class="pl-k">else</span> q(d,<span class="pl-st">function</span>(<span class="pl-vpf">c</span>,<span class="pl-vpf">g</span>){c.<span class="pl-sc">y</span><span class="pl-k">===</span><span class="pl-c1">null</span><span class="pl-k">?</span>(g<span class="pl-k">&gt;</span>a<span class="pl-k">+</span><span class="pl-c1">1</span><span class="pl-k">&amp;&amp;</span>b.<span class="pl-s3">push</span>(d.<span class="pl-s3">slice</span>(a<span class="pl-k">+</span><span class="pl-c1">1</span>,g)),a<span class="pl-k">=</span>g)<span class="pl-k">:</span>g<span class="pl-k">===</span>e<span class="pl-k">-</span><span class="pl-c1">1</span><span class="pl-k">&amp;&amp;</span>b.<span class="pl-s3">push</span>(d.<span class="pl-s3">slice</span>(a<span class="pl-k">+</span><span class="pl-c1">1</span>,g<span class="pl-k">+</span><span class="pl-c1">1</span>))});<span class="pl-v">this</span>.segments<span class="pl-k">=</span>b},<span class="pl-en">setOptions</span>:<span class="pl-st">function</span>(<span class="pl-vpf">a</span>){<span class="pl-s">var</span> b<span class="pl-k">=</span><span class="pl-v">this</span>.chart,c<span class="pl-k">=</span>b.<span class="pl-sc">options</span>.plotOptions,b<span class="pl-k">=</span>b.userOptions<span class="pl-k">||</span>{},d<span class="pl-k">=</span>b.plotOptions<span class="pl-k">||</span>{},e<span class="pl-k">=</span>c[<span class="pl-v">this</span>.<span class="pl-sc">type</span>];<span class="pl-v">this</span>.userOptions<span class="pl-k">=</span>a;c<span class="pl-k">=</span>w(e,c.series,a);<span class="pl-v">this</span>.tooltipOptions<span class="pl-k">=</span>w(E.tooltip,E.plotOptions[<span class="pl-v">this</span>.<span class="pl-sc">type</span>].tooltip,b.tooltip,d.series<span class="pl-k">&amp;&amp;</span>d.series.tooltip,d[<span class="pl-v">this</span>.<span class="pl-sc">type</span>]<span class="pl-k">&amp;&amp;</span></td>
      </tr>
      <tr>
        <td id="L225" class="blob-num js-line-number" data-line-number="225"></td>
        <td id="LC225" class="blob-code js-file-line">d[<span class="pl-v">this</span>.<span class="pl-sc">type</span>].tooltip,a.tooltip);e.marker<span class="pl-k">===</span><span class="pl-c1">null</span><span class="pl-k">&amp;&amp;delete</span> c.marker;<span class="pl-k">return</span> c},<span class="pl-en">getCyclic</span>:<span class="pl-st">function</span>(<span class="pl-vpf">a</span>,<span class="pl-vpf">b</span>,<span class="pl-vpf">c</span>){<span class="pl-s">var</span> d<span class="pl-k">=</span><span class="pl-v">this</span>.userOptions,e<span class="pl-k">=</span><span class="pl-s1"><span class="pl-pds">&quot;</span>_<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>a<span class="pl-k">+</span><span class="pl-s1"><span class="pl-pds">&quot;</span>Index<span class="pl-pds">&quot;</span></span>,f<span class="pl-k">=</span>a<span class="pl-k">+</span><span class="pl-s1"><span class="pl-pds">&quot;</span>Counter<span class="pl-pds">&quot;</span></span>;b<span class="pl-k">||</span>(s(d[e])<span class="pl-k">?</span>b<span class="pl-k">=</span>d[e]<span class="pl-k">:</span>(d[e]<span class="pl-k">=</span>b<span class="pl-k">=</span><span class="pl-v">this</span>.chart[f]<span class="pl-k">%</span>c.<span class="pl-sc">length</span>,<span class="pl-v">this</span>.chart[f]<span class="pl-k">+=</span><span class="pl-c1">1</span>),b<span class="pl-k">=</span>c[b]);<span class="pl-v">this</span>[a]<span class="pl-k">=</span>b},<span class="pl-en">getColor</span>:<span class="pl-st">function</span>(){<span class="pl-v">this</span>.<span class="pl-sc">options</span>.colorByPoint<span class="pl-k">||</span><span class="pl-v">this</span>.getCyclic(<span class="pl-s1"><span class="pl-pds">&quot;</span>color<span class="pl-pds">&quot;</span></span>,<span class="pl-v">this</span>.<span class="pl-sc">options</span>.<span class="pl-sc">color</span><span class="pl-k">||</span>ca[<span class="pl-v">this</span>.<span class="pl-sc">type</span>].<span class="pl-sc">color</span>,<span class="pl-v">this</span>.chart.<span class="pl-sc">options</span>.colors)},<span class="pl-en">getSymbol</span>:<span class="pl-st">function</span>(){<span class="pl-s">var</span> a<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-sc">options</span>.marker;<span class="pl-v">this</span>.getCyclic(<span class="pl-s1"><span class="pl-pds">&quot;</span>symbol<span class="pl-pds">&quot;</span></span>,a.symbol,<span class="pl-v">this</span>.chart.<span class="pl-sc">options</span>.symbols);<span class="pl-k">if</span>(<span class="pl-sr"><span class="pl-pds">/</span><span class="pl-k">^</span>url<span class="pl-pds">/</span></span>.<span class="pl-s3">test</span>(<span class="pl-v">this</span>.symbol))a.radius<span class="pl-k">=</span></td>
      </tr>
      <tr>
        <td id="L226" class="blob-num js-line-number" data-line-number="226"></td>
        <td id="LC226" class="blob-code js-file-line"><span class="pl-c1">0</span>},drawLegendSymbol<span class="pl-k">:</span>M.drawLineMarker,<span class="pl-en">setData</span>:<span class="pl-st">function</span>(<span class="pl-vpf">a</span>,<span class="pl-vpf">b</span>,<span class="pl-vpf">c</span>,<span class="pl-vpf">d</span>){<span class="pl-s">var</span> e<span class="pl-k">=</span><span class="pl-v">this</span>,f<span class="pl-k">=</span>e.points,g<span class="pl-k">=</span>f<span class="pl-k">&amp;&amp;</span>f.<span class="pl-sc">length</span><span class="pl-k">||</span><span class="pl-c1">0</span>,h,i<span class="pl-k">=</span>e.<span class="pl-sc">options</span>,j<span class="pl-k">=</span>e.chart,k<span class="pl-k">=</span><span class="pl-c1">null</span>,l<span class="pl-k">=</span>e.xAxis,n<span class="pl-k">=</span>l<span class="pl-k">&amp;&amp;!!</span>l.categories,m<span class="pl-k">=</span>e.tooltipPoints,o<span class="pl-k">=</span>i.turboThreshold,r<span class="pl-k">=</span><span class="pl-v">this</span>.xData,t<span class="pl-k">=</span><span class="pl-v">this</span>.yData,s<span class="pl-k">=</span>(h<span class="pl-k">=</span>e.pointArrayMap)<span class="pl-k">&amp;&amp;</span>h.<span class="pl-sc">length</span>,a<span class="pl-k">=</span>a<span class="pl-k">||</span>[];h<span class="pl-k">=</span>a.<span class="pl-sc">length</span>;b<span class="pl-k">=</span>p(b,<span class="pl-k">!</span><span class="pl-c1">0</span>);<span class="pl-k">if</span>(d<span class="pl-k">!==!</span><span class="pl-c1">1</span><span class="pl-k">&amp;&amp;</span>h<span class="pl-k">&amp;&amp;</span>g<span class="pl-k">===</span>h<span class="pl-k">&amp;&amp;!</span>e.cropped<span class="pl-k">&amp;&amp;!</span>e.hasGroupedData)q(a,<span class="pl-st">function</span>(<span class="pl-vpf">a</span>,<span class="pl-vpf">b</span>){f[b].update(a,<span class="pl-k">!</span><span class="pl-c1">1</span>,<span class="pl-c1">null</span>,<span class="pl-k">!</span><span class="pl-c1">1</span>)});<span class="pl-k">else</span>{e.xIncrement<span class="pl-k">=</span><span class="pl-c1">null</span>;e.pointRange<span class="pl-k">=</span>n<span class="pl-k">?</span><span class="pl-c1">1</span><span class="pl-k">:</span>i.pointRange;e.colorCounter<span class="pl-k">=</span><span class="pl-c1">0</span>;q(<span class="pl-v">this</span>.parallelArrays,<span class="pl-st">function</span>(<span class="pl-vpf">a</span>){e[a<span class="pl-k">+</span><span class="pl-s1"><span class="pl-pds">&quot;</span>Data<span class="pl-pds">&quot;</span></span>].<span class="pl-sc">length</span><span class="pl-k">=</span></td>
      </tr>
      <tr>
        <td id="L227" class="blob-num js-line-number" data-line-number="227"></td>
        <td id="LC227" class="blob-code js-file-line"><span class="pl-c1">0</span>});<span class="pl-k">if</span>(o<span class="pl-k">&amp;&amp;</span>h<span class="pl-k">&gt;</span>o){<span class="pl-k">for</span>(c<span class="pl-k">=</span><span class="pl-c1">0</span>;k<span class="pl-k">===</span><span class="pl-c1">null</span><span class="pl-k">&amp;&amp;</span>c<span class="pl-k">&lt;</span>h;)k<span class="pl-k">=</span>a[c],c<span class="pl-k">++</span>;<span class="pl-k">if</span>(ja(k)){n<span class="pl-k">=</span>p(i.pointStart,<span class="pl-c1">0</span>);i<span class="pl-k">=</span>p(i.pointInterval,<span class="pl-c1">1</span>);<span class="pl-k">for</span>(c<span class="pl-k">=</span><span class="pl-c1">0</span>;c<span class="pl-k">&lt;</span>h;c<span class="pl-k">++</span>)r[c]<span class="pl-k">=</span>n,t[c]<span class="pl-k">=</span>a[c],n<span class="pl-k">+=</span>i;e.xIncrement<span class="pl-k">=</span>n}<span class="pl-k">else</span> <span class="pl-k">if</span>(Ha(k))<span class="pl-k">if</span>(s)<span class="pl-k">for</span>(c<span class="pl-k">=</span><span class="pl-c1">0</span>;c<span class="pl-k">&lt;</span>h;c<span class="pl-k">++</span>)i<span class="pl-k">=</span>a[c],r[c]<span class="pl-k">=</span>i[<span class="pl-c1">0</span>],t[c]<span class="pl-k">=</span>i.<span class="pl-s3">slice</span>(<span class="pl-c1">1</span>,s<span class="pl-k">+</span><span class="pl-c1">1</span>);<span class="pl-k">else</span> <span class="pl-k">for</span>(c<span class="pl-k">=</span><span class="pl-c1">0</span>;c<span class="pl-k">&lt;</span>h;c<span class="pl-k">++</span>)i<span class="pl-k">=</span>a[c],r[c]<span class="pl-k">=</span>i[<span class="pl-c1">0</span>],t[c]<span class="pl-k">=</span>i[<span class="pl-c1">1</span>];<span class="pl-k">else</span> ha(<span class="pl-c1">12</span>)}<span class="pl-k">else</span> <span class="pl-k">for</span>(c<span class="pl-k">=</span><span class="pl-c1">0</span>;c<span class="pl-k">&lt;</span>h;c<span class="pl-k">++</span>)<span class="pl-k">if</span>(a[c]<span class="pl-k">!==</span>u<span class="pl-k">&amp;&amp;</span>(i<span class="pl-k">=</span>{series<span class="pl-k">:</span>e},e.pointClass.<span class="pl-sc">prototype</span>.applyOptions.<span class="pl-s3">apply</span>(i,[a[c]]),e.updateParallelArrays(i,c),n<span class="pl-k">&amp;&amp;</span>i.<span class="pl-sc">name</span>))l.names[i.<span class="pl-sc">x</span>]<span class="pl-k">=</span>i.<span class="pl-sc">name</span>;Ga(t[<span class="pl-c1">0</span>])<span class="pl-k">&amp;&amp;</span>ha(<span class="pl-c1">14</span>,<span class="pl-k">!</span><span class="pl-c1">0</span>);e.<span class="pl-sc">data</span><span class="pl-k">=</span>[];e.<span class="pl-sc">options</span>.<span class="pl-sc">data</span><span class="pl-k">=</span>a;<span class="pl-k">for</span>(c<span class="pl-k">=</span>g;c<span class="pl-k">--</span>;)f[c]<span class="pl-k">&amp;&amp;</span></td>
      </tr>
      <tr>
        <td id="L228" class="blob-num js-line-number" data-line-number="228"></td>
        <td id="LC228" class="blob-code js-file-line">f[c].destroy<span class="pl-k">&amp;&amp;</span>f[c].destroy();<span class="pl-k">if</span>(m)m.<span class="pl-sc">length</span><span class="pl-k">=</span><span class="pl-c1">0</span>;<span class="pl-k">if</span>(l)l.minRange<span class="pl-k">=</span>l.userMinRange;e.isDirty<span class="pl-k">=</span>e.isDirtyData<span class="pl-k">=</span>j.isDirtyBox<span class="pl-k">=!</span><span class="pl-c1">0</span>;c<span class="pl-k">=!</span><span class="pl-c1">1</span>}b<span class="pl-k">&amp;&amp;</span>j.redraw(c)},<span class="pl-en">processData</span>:<span class="pl-st">function</span>(<span class="pl-vpf">a</span>){<span class="pl-s">var</span> b<span class="pl-k">=</span><span class="pl-v">this</span>.xData,c<span class="pl-k">=</span><span class="pl-v">this</span>.yData,d<span class="pl-k">=</span>b.<span class="pl-sc">length</span>,e;e<span class="pl-k">=</span><span class="pl-c1">0</span>;<span class="pl-s">var</span> f,g,h<span class="pl-k">=</span><span class="pl-v">this</span>.xAxis,i,j<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-sc">options</span>;i<span class="pl-k">=</span>j.cropThreshold;<span class="pl-s">var</span> k<span class="pl-k">=</span><span class="pl-c1">0</span>,l<span class="pl-k">=</span><span class="pl-v">this</span>.isCartesian,n,m;<span class="pl-k">if</span>(l<span class="pl-k">&amp;&amp;!</span><span class="pl-v">this</span>.isDirty<span class="pl-k">&amp;&amp;!</span>h.isDirty<span class="pl-k">&amp;&amp;!</span><span class="pl-v">this</span>.yAxis.isDirty<span class="pl-k">&amp;&amp;!</span>a)<span class="pl-k">return</span><span class="pl-k">!</span><span class="pl-c1">1</span>;<span class="pl-k">if</span>(h)n<span class="pl-k">=</span>h.getExtremes(),m<span class="pl-k">=</span>n.min,n<span class="pl-k">=</span>n.max;<span class="pl-k">if</span>(l<span class="pl-k">&amp;&amp;</span><span class="pl-v">this</span>.sorted<span class="pl-k">&amp;&amp;</span>(<span class="pl-k">!</span>i<span class="pl-k">||</span>d<span class="pl-k">&gt;</span>i<span class="pl-k">||</span><span class="pl-v">this</span>.forceCrop))<span class="pl-k">if</span>(b[d<span class="pl-k">-</span><span class="pl-c1">1</span>]<span class="pl-k">&lt;</span>m<span class="pl-k">||</span>b[<span class="pl-c1">0</span>]<span class="pl-k">&gt;</span>n)b<span class="pl-k">=</span>[],c<span class="pl-k">=</span>[];<span class="pl-k">else</span> <span class="pl-k">if</span>(b[<span class="pl-c1">0</span>]<span class="pl-k">&lt;</span>m<span class="pl-k">||</span>b[d<span class="pl-k">-</span><span class="pl-c1">1</span>]<span class="pl-k">&gt;</span>n)e<span class="pl-k">=</span></td>
      </tr>
      <tr>
        <td id="L229" class="blob-num js-line-number" data-line-number="229"></td>
        <td id="LC229" class="blob-code js-file-line"><span class="pl-v">this</span>.cropData(<span class="pl-v">this</span>.xData,<span class="pl-v">this</span>.yData,m,n),b<span class="pl-k">=</span>e.xData,c<span class="pl-k">=</span>e.yData,e<span class="pl-k">=</span>e.<span class="pl-sc">start</span>,f<span class="pl-k">=!</span><span class="pl-c1">0</span>,k<span class="pl-k">=</span>b.<span class="pl-sc">length</span>;<span class="pl-k">for</span>(i<span class="pl-k">=</span>b.<span class="pl-sc">length</span><span class="pl-k">-</span><span class="pl-c1">1</span>;i<span class="pl-k">&gt;=</span><span class="pl-c1">0</span>;i<span class="pl-k">--</span>)d<span class="pl-k">=</span>b[i]<span class="pl-k">-</span>b[i<span class="pl-k">-</span><span class="pl-c1">1</span>],<span class="pl-k">!</span>f<span class="pl-k">&amp;&amp;</span>b[i]<span class="pl-k">&gt;</span>m<span class="pl-k">&amp;&amp;</span>b[i]<span class="pl-k">&lt;</span>n<span class="pl-k">&amp;&amp;</span>k<span class="pl-k">++</span>,d<span class="pl-k">&gt;</span><span class="pl-c1">0</span><span class="pl-k">&amp;&amp;</span>(g<span class="pl-k">===</span>u<span class="pl-k">||</span>d<span class="pl-k">&lt;</span>g)<span class="pl-k">?</span>g<span class="pl-k">=</span>d<span class="pl-k">:</span>d<span class="pl-k">&lt;</span><span class="pl-c1">0</span><span class="pl-k">&amp;&amp;</span><span class="pl-v">this</span>.requireSorting<span class="pl-k">&amp;&amp;</span>ha(<span class="pl-c1">15</span>);<span class="pl-v">this</span>.cropped<span class="pl-k">=</span>f;<span class="pl-v">this</span>.cropStart<span class="pl-k">=</span>e;<span class="pl-v">this</span>.processedXData<span class="pl-k">=</span>b;<span class="pl-v">this</span>.processedYData<span class="pl-k">=</span>c;<span class="pl-v">this</span>.activePointCount<span class="pl-k">=</span>k;<span class="pl-k">if</span>(j.pointRange<span class="pl-k">===</span><span class="pl-c1">null</span>)<span class="pl-v">this</span>.pointRange<span class="pl-k">=</span>g<span class="pl-k">||</span><span class="pl-c1">1</span>;<span class="pl-v">this</span>.closestPointRange<span class="pl-k">=</span>g},<span class="pl-en">cropData</span>:<span class="pl-st">function</span>(<span class="pl-vpf">a</span>,<span class="pl-vpf">b</span>,<span class="pl-vpf">c</span>,<span class="pl-vpf">d</span>){<span class="pl-s">var</span> e<span class="pl-k">=</span>a.<span class="pl-sc">length</span>,f<span class="pl-k">=</span><span class="pl-c1">0</span>,g<span class="pl-k">=</span>e,h<span class="pl-k">=</span>p(<span class="pl-v">this</span>.cropShoulder,<span class="pl-c1">1</span>),i;<span class="pl-k">for</span>(i<span class="pl-k">=</span><span class="pl-c1">0</span>;i<span class="pl-k">&lt;</span>e;i<span class="pl-k">++</span>)<span class="pl-k">if</span>(a[i]<span class="pl-k">&gt;=</span>c){f<span class="pl-k">=</span>t(<span class="pl-c1">0</span>,i<span class="pl-k">-</span>h);<span class="pl-k">break</span>}<span class="pl-k">for</span>(;i<span class="pl-k">&lt;</span></td>
      </tr>
      <tr>
        <td id="L230" class="blob-num js-line-number" data-line-number="230"></td>
        <td id="LC230" class="blob-code js-file-line">e;i<span class="pl-k">++</span>)<span class="pl-k">if</span>(a[i]<span class="pl-k">&gt;</span>d){g<span class="pl-k">=</span>i<span class="pl-k">+</span>h;<span class="pl-k">break</span>}<span class="pl-k">return</span>{xData<span class="pl-k">:</span>a.<span class="pl-s3">slice</span>(f,g),yData<span class="pl-k">:</span>b.<span class="pl-s3">slice</span>(f,g),start<span class="pl-k">:</span>f,end<span class="pl-k">:</span>g}},<span class="pl-en">generatePoints</span>:<span class="pl-st">function</span>(){<span class="pl-s">var</span> a<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-sc">options</span>.<span class="pl-sc">data</span>,b<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-sc">data</span>,c,d<span class="pl-k">=</span><span class="pl-v">this</span>.processedXData,e<span class="pl-k">=</span><span class="pl-v">this</span>.processedYData,f<span class="pl-k">=</span><span class="pl-v">this</span>.pointClass,g<span class="pl-k">=</span>d.<span class="pl-sc">length</span>,h<span class="pl-k">=</span><span class="pl-v">this</span>.cropStart<span class="pl-k">||</span><span class="pl-c1">0</span>,i,j<span class="pl-k">=</span><span class="pl-v">this</span>.hasGroupedData,k,l<span class="pl-k">=</span>[],n;<span class="pl-k">if</span>(<span class="pl-k">!</span>b<span class="pl-k">&amp;&amp;!</span>j)b<span class="pl-k">=</span>[],b.<span class="pl-sc">length</span><span class="pl-k">=</span>a.<span class="pl-sc">length</span>,b<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-sc">data</span><span class="pl-k">=</span>b;<span class="pl-k">for</span>(n<span class="pl-k">=</span><span class="pl-c1">0</span>;n<span class="pl-k">&lt;</span>g;n<span class="pl-k">++</span>)i<span class="pl-k">=</span>h<span class="pl-k">+</span>n,j<span class="pl-k">?</span>l[n]<span class="pl-k">=</span>(<span class="pl-k">new</span> <span class="pl-en">f</span>).init(<span class="pl-v">this</span>,[d[n]].<span class="pl-s3">concat</span>(ra(e[n])))<span class="pl-k">:</span>(b[i]<span class="pl-k">?</span>k<span class="pl-k">=</span>b[i]<span class="pl-k">:</span>a[i]<span class="pl-k">!==</span>u<span class="pl-k">&amp;&amp;</span>(b[i]<span class="pl-k">=</span>k<span class="pl-k">=</span>(<span class="pl-k">new</span> <span class="pl-en">f</span>).init(<span class="pl-v">this</span>,a[i],d[n])),l[n]<span class="pl-k">=</span>k),l[n].<span class="pl-sc">index</span><span class="pl-k">=</span>i;<span class="pl-k">if</span>(b<span class="pl-k">&amp;&amp;</span>(g<span class="pl-k">!==</span>(c<span class="pl-k">=</span>b.<span class="pl-sc">length</span>)<span class="pl-k">||</span></td>
      </tr>
      <tr>
        <td id="L231" class="blob-num js-line-number" data-line-number="231"></td>
        <td id="LC231" class="blob-code js-file-line">j))<span class="pl-k">for</span>(n<span class="pl-k">=</span><span class="pl-c1">0</span>;n<span class="pl-k">&lt;</span>c;n<span class="pl-k">++</span>)<span class="pl-k">if</span>(n<span class="pl-k">===</span>h<span class="pl-k">&amp;&amp;!</span>j<span class="pl-k">&amp;&amp;</span>(n<span class="pl-k">+=</span>g),b[n])b[n].destroyElements(),b[n].plotX<span class="pl-k">=</span>u;<span class="pl-v">this</span>.<span class="pl-sc">data</span><span class="pl-k">=</span>b;<span class="pl-v">this</span>.points<span class="pl-k">=</span>l},<span class="pl-en">getExtremes</span>:<span class="pl-st">function</span>(<span class="pl-vpf">a</span>){<span class="pl-s">var</span> b<span class="pl-k">=</span><span class="pl-v">this</span>.yAxis,c<span class="pl-k">=</span><span class="pl-v">this</span>.processedXData,d,e<span class="pl-k">=</span>[],f<span class="pl-k">=</span><span class="pl-c1">0</span>;d<span class="pl-k">=</span><span class="pl-v">this</span>.xAxis.getExtremes();<span class="pl-s">var</span> g<span class="pl-k">=</span>d.min,h<span class="pl-k">=</span>d.max,i,j,k,l,a<span class="pl-k">=</span>a<span class="pl-k">||</span><span class="pl-v">this</span>.stackedYData<span class="pl-k">||</span><span class="pl-v">this</span>.processedYData;d<span class="pl-k">=</span>a.<span class="pl-sc">length</span>;<span class="pl-k">for</span>(l<span class="pl-k">=</span><span class="pl-c1">0</span>;l<span class="pl-k">&lt;</span>d;l<span class="pl-k">++</span>)<span class="pl-k">if</span>(j<span class="pl-k">=</span>c[l],k<span class="pl-k">=</span>a[l],i<span class="pl-k">=</span>k<span class="pl-k">!==</span><span class="pl-c1">null</span><span class="pl-k">&amp;&amp;</span>k<span class="pl-k">!==</span>u<span class="pl-k">&amp;&amp;</span>(<span class="pl-k">!</span>b.isLog<span class="pl-k">||</span>k.<span class="pl-sc">length</span><span class="pl-k">||</span>k<span class="pl-k">&gt;</span><span class="pl-c1">0</span>),j<span class="pl-k">=</span><span class="pl-v">this</span>.getExtremesFromAll<span class="pl-k">||</span><span class="pl-v">this</span>.cropped<span class="pl-k">||</span>(c[l<span class="pl-k">+</span><span class="pl-c1">1</span>]<span class="pl-k">||</span>j)<span class="pl-k">&gt;=</span>g<span class="pl-k">&amp;&amp;</span>(c[l<span class="pl-k">-</span><span class="pl-c1">1</span>]<span class="pl-k">||</span>j)<span class="pl-k">&lt;=</span>h,i<span class="pl-k">&amp;&amp;</span>j)<span class="pl-k">if</span>(i<span class="pl-k">=</span>k.<span class="pl-sc">length</span>)<span class="pl-k">for</span>(;i<span class="pl-k">--</span>;)k[i]<span class="pl-k">!==</span><span class="pl-c1">null</span><span class="pl-k">&amp;&amp;</span>(e[f<span class="pl-k">++</span>]<span class="pl-k">=</span>k[i]);<span class="pl-k">else</span> e[f<span class="pl-k">++</span>]<span class="pl-k">=</span></td>
      </tr>
      <tr>
        <td id="L232" class="blob-num js-line-number" data-line-number="232"></td>
        <td id="LC232" class="blob-code js-file-line">k;<span class="pl-v">this</span>.dataMin<span class="pl-k">=</span>p(<span class="pl-k">void</span> <span class="pl-c1">0</span>,Oa(e));<span class="pl-v">this</span>.dataMax<span class="pl-k">=</span>p(<span class="pl-k">void</span> <span class="pl-c1">0</span>,Ca(e))},<span class="pl-en">translate</span>:<span class="pl-st">function</span>(){<span class="pl-v">this</span>.processedXData<span class="pl-k">||</span><span class="pl-v">this</span>.processData();<span class="pl-v">this</span>.generatePoints();<span class="pl-k">for</span>(<span class="pl-s">var</span> a<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-sc">options</span>,b<span class="pl-k">=</span>a.stacking,c<span class="pl-k">=</span><span class="pl-v">this</span>.xAxis,d<span class="pl-k">=</span>c.categories,e<span class="pl-k">=</span><span class="pl-v">this</span>.yAxis,f<span class="pl-k">=</span><span class="pl-v">this</span>.points,g<span class="pl-k">=</span>f.<span class="pl-sc">length</span>,h<span class="pl-k">=!!</span><span class="pl-v">this</span>.modifyValue,i<span class="pl-k">=</span>a.pointPlacement,j<span class="pl-k">=</span>i<span class="pl-k">===</span><span class="pl-s1"><span class="pl-pds">&quot;</span>between<span class="pl-pds">&quot;</span></span><span class="pl-k">||</span>ja(i),k<span class="pl-k">=</span>a.threshold,a<span class="pl-k">=</span><span class="pl-c1">0</span>;a<span class="pl-k">&lt;</span>g;a<span class="pl-k">++</span>){<span class="pl-s">var</span> l<span class="pl-k">=</span>f[a],n<span class="pl-k">=</span>l.<span class="pl-sc">x</span>,m<span class="pl-k">=</span>l.<span class="pl-sc">y</span>,o<span class="pl-k">=</span>l.low,q<span class="pl-k">=</span>b<span class="pl-k">&amp;&amp;</span>e.stacks[(<span class="pl-v">this</span>.negStacks<span class="pl-k">&amp;&amp;</span>m<span class="pl-k">&lt;</span>k<span class="pl-k">?</span><span class="pl-s1"><span class="pl-pds">&quot;</span>-<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s1"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>)<span class="pl-k">+</span><span class="pl-v">this</span>.stackKey];<span class="pl-k">if</span>(e.isLog<span class="pl-k">&amp;&amp;</span>m<span class="pl-k">&lt;=</span><span class="pl-c1">0</span>)l.<span class="pl-sc">y</span><span class="pl-k">=</span>m<span class="pl-k">=</span><span class="pl-c1">null</span>,ha(<span class="pl-c1">10</span>);l.plotX<span class="pl-k">=</span>c.translate(n,<span class="pl-c1">0</span>,<span class="pl-c1">0</span>,<span class="pl-c1">0</span>,<span class="pl-c1">1</span>,i,<span class="pl-v">this</span>.<span class="pl-sc">type</span><span class="pl-k">===</span></td>
      </tr>
      <tr>
        <td id="L233" class="blob-num js-line-number" data-line-number="233"></td>
        <td id="LC233" class="blob-code js-file-line"><span class="pl-s1"><span class="pl-pds">&quot;</span>flags<span class="pl-pds">&quot;</span></span>);<span class="pl-k">if</span>(b<span class="pl-k">&amp;&amp;</span><span class="pl-v">this</span>.visible<span class="pl-k">&amp;&amp;</span>q<span class="pl-k">&amp;&amp;</span>q[n])q<span class="pl-k">=</span>q[n],m<span class="pl-k">=</span>q.points[<span class="pl-v">this</span>.<span class="pl-sc">index</span><span class="pl-k">+</span><span class="pl-s1"><span class="pl-pds">&quot;</span>,<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>a],o<span class="pl-k">=</span>m[<span class="pl-c1">0</span>],m<span class="pl-k">=</span>m[<span class="pl-c1">1</span>],o<span class="pl-k">===</span><span class="pl-c1">0</span><span class="pl-k">&amp;&amp;</span>(o<span class="pl-k">=</span>p(k,e.min)),e.isLog<span class="pl-k">&amp;&amp;</span>o<span class="pl-k">&lt;=</span><span class="pl-c1">0</span><span class="pl-k">&amp;&amp;</span>(o<span class="pl-k">=</span><span class="pl-c1">null</span>),l.total<span class="pl-k">=</span>l.stackTotal<span class="pl-k">=</span>q.total,l.percentage<span class="pl-k">=</span>q.total<span class="pl-k">&amp;&amp;</span>l.<span class="pl-sc">y</span>/q.total<span class="pl-k">*</span><span class="pl-c1">100</span>,l.stackY<span class="pl-k">=</span>m,q.setOffset(<span class="pl-v">this</span>.pointXOffset<span class="pl-k">||</span><span class="pl-c1">0</span>,<span class="pl-v">this</span>.barW<span class="pl-k">||</span><span class="pl-c1">0</span>);l.yBottom<span class="pl-k">=</span>s(o)<span class="pl-k">?</span>e.translate(o,<span class="pl-c1">0</span>,<span class="pl-c1">1</span>,<span class="pl-c1">0</span>,<span class="pl-c1">1</span>)<span class="pl-k">:</span><span class="pl-c1">null</span>;h<span class="pl-k">&amp;&amp;</span>(m<span class="pl-k">=</span><span class="pl-v">this</span>.modifyValue(m,l));l.plotY<span class="pl-k">=typeof</span> m<span class="pl-k">===</span><span class="pl-s1"><span class="pl-pds">&quot;</span>number<span class="pl-pds">&quot;</span></span><span class="pl-k">&amp;&amp;</span>m<span class="pl-k">!==</span><span class="pl-c1">Infinity</span><span class="pl-k">?</span>e.translate(m,<span class="pl-c1">0</span>,<span class="pl-c1">1</span>,<span class="pl-c1">0</span>,<span class="pl-c1">1</span>)<span class="pl-k">:</span>u;l.clientX<span class="pl-k">=</span>j<span class="pl-k">?</span>c.translate(n,<span class="pl-c1">0</span>,<span class="pl-c1">0</span>,<span class="pl-c1">0</span>,<span class="pl-c1">1</span>)<span class="pl-k">:</span>l.plotX;l.negative<span class="pl-k">=</span>l.<span class="pl-sc">y</span><span class="pl-k">&lt;</span>(k<span class="pl-k">||</span><span class="pl-c1">0</span>);l.category<span class="pl-k">=</span>d<span class="pl-k">&amp;&amp;</span>d[l.<span class="pl-sc">x</span>]<span class="pl-k">!==</span>u<span class="pl-k">?</span>d[l.<span class="pl-sc">x</span>]<span class="pl-k">:</span>l.<span class="pl-sc">x</span>}<span class="pl-v">this</span>.getSegments()},</td>
      </tr>
      <tr>
        <td id="L234" class="blob-num js-line-number" data-line-number="234"></td>
        <td id="LC234" class="blob-code js-file-line"><span class="pl-en">animate</span>:<span class="pl-st">function</span>(<span class="pl-vpf">a</span>){<span class="pl-s">var</span> b<span class="pl-k">=</span><span class="pl-v">this</span>.chart,c<span class="pl-k">=</span>b.renderer,d;d<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-sc">options</span>.animation;<span class="pl-s">var</span> e<span class="pl-k">=</span><span class="pl-v">this</span>.clipBox<span class="pl-k">||</span>b.clipBox,f<span class="pl-k">=</span>b.inverted,g;<span class="pl-k">if</span>(d<span class="pl-k">&amp;&amp;!</span>da(d))d<span class="pl-k">=</span>ca[<span class="pl-v">this</span>.<span class="pl-sc">type</span>].animation;g<span class="pl-k">=</span>[<span class="pl-s1"><span class="pl-pds">&quot;</span>_sharedClip<span class="pl-pds">&quot;</span></span>,d.duration,d.easing,e.<span class="pl-sc">height</span>].<span class="pl-s3">join</span>(<span class="pl-s1"><span class="pl-pds">&quot;</span>,<span class="pl-pds">&quot;</span></span>);a<span class="pl-k">?</span>(a<span class="pl-k">=</span>b[g],d<span class="pl-k">=</span>b[g<span class="pl-k">+</span><span class="pl-s1"><span class="pl-pds">&quot;</span>m<span class="pl-pds">&quot;</span></span>],a<span class="pl-k">||</span>(b[g]<span class="pl-k">=</span>a<span class="pl-k">=</span>c.clipRect(r(e,{width<span class="pl-k">:</span><span class="pl-c1">0</span>})),b[g<span class="pl-k">+</span><span class="pl-s1"><span class="pl-pds">&quot;</span>m<span class="pl-pds">&quot;</span></span>]<span class="pl-k">=</span>d<span class="pl-k">=</span>c.clipRect(<span class="pl-k">-</span><span class="pl-c1">99</span>,f<span class="pl-k">?-</span>b.plotLeft<span class="pl-k">:-</span>b.plotTop,<span class="pl-c1">99</span>,f<span class="pl-k">?</span>b.chartWidth<span class="pl-k">:</span>b.chartHeight)),<span class="pl-v">this</span>.group.<span class="pl-sc">clip</span>(a),<span class="pl-v">this</span>.markerGroup.<span class="pl-sc">clip</span>(d),<span class="pl-v">this</span>.sharedClipKey<span class="pl-k">=</span>g)<span class="pl-k">:</span>((a<span class="pl-k">=</span>b[g])<span class="pl-k">&amp;&amp;</span>a.animate({width<span class="pl-k">:</span>b.plotSizeX},d),b[g<span class="pl-k">+</span><span class="pl-s1"><span class="pl-pds">&quot;</span>m<span class="pl-pds">&quot;</span></span>]<span class="pl-k">&amp;&amp;</span>b[g<span class="pl-k">+</span><span class="pl-s1"><span class="pl-pds">&quot;</span>m<span class="pl-pds">&quot;</span></span>].animate({width<span class="pl-k">:</span>b.plotSizeX<span class="pl-k">+</span></td>
      </tr>
      <tr>
        <td id="L235" class="blob-num js-line-number" data-line-number="235"></td>
        <td id="LC235" class="blob-code js-file-line"><span class="pl-c1">99</span>},d),<span class="pl-v">this</span>.animate<span class="pl-k">=</span><span class="pl-c1">null</span>)},<span class="pl-en">afterAnimate</span>:<span class="pl-st">function</span>(){<span class="pl-s">var</span> a<span class="pl-k">=</span><span class="pl-v">this</span>.chart,b<span class="pl-k">=</span><span class="pl-v">this</span>.sharedClipKey,c<span class="pl-k">=</span><span class="pl-v">this</span>.group,d<span class="pl-k">=</span><span class="pl-v">this</span>.clipBox;<span class="pl-k">if</span>(c<span class="pl-k">&amp;&amp;</span><span class="pl-v">this</span>.<span class="pl-sc">options</span>.<span class="pl-sc">clip</span><span class="pl-k">!==!</span><span class="pl-c1">1</span>){<span class="pl-k">if</span>(<span class="pl-k">!</span>b<span class="pl-k">||!</span>d)c.<span class="pl-sc">clip</span>(d<span class="pl-k">?</span>a.renderer.clipRect(d)<span class="pl-k">:</span>a.clipRect);<span class="pl-v">this</span>.markerGroup.<span class="pl-sc">clip</span>()}I(<span class="pl-v">this</span>,<span class="pl-s1"><span class="pl-pds">&quot;</span>afterAnimate<span class="pl-pds">&quot;</span></span>);<span class="pl-s3">setTimeout</span>(<span class="pl-st">function</span>(){b<span class="pl-k">&amp;&amp;</span>a[b]<span class="pl-k">&amp;&amp;</span>(d<span class="pl-k">||</span>(a[b]<span class="pl-k">=</span>a[b].destroy()),a[b<span class="pl-k">+</span><span class="pl-s1"><span class="pl-pds">&quot;</span>m<span class="pl-pds">&quot;</span></span>]<span class="pl-k">&amp;&amp;</span>(a[b<span class="pl-k">+</span><span class="pl-s1"><span class="pl-pds">&quot;</span>m<span class="pl-pds">&quot;</span></span>]<span class="pl-k">=</span>a[b<span class="pl-k">+</span><span class="pl-s1"><span class="pl-pds">&quot;</span>m<span class="pl-pds">&quot;</span></span>].destroy()))},<span class="pl-c1">100</span>)},<span class="pl-en">drawPoints</span>:<span class="pl-st">function</span>(){<span class="pl-s">var</span> a,b<span class="pl-k">=</span><span class="pl-v">this</span>.points,c<span class="pl-k">=</span><span class="pl-v">this</span>.chart,d,e,f,g,h,i,j,k,l<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-sc">options</span>.marker,n<span class="pl-k">=</span><span class="pl-v">this</span>.pointAttr[<span class="pl-s1"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>],m,o,q,t<span class="pl-k">=</span><span class="pl-v">this</span>.markerGroup,s<span class="pl-k">=</span>p(l.enabled,</td>
      </tr>
      <tr>
        <td id="L236" class="blob-num js-line-number" data-line-number="236"></td>
        <td id="LC236" class="blob-code js-file-line"><span class="pl-k">!</span><span class="pl-v">this</span>.requireSorting<span class="pl-k">||</span><span class="pl-v">this</span>.activePointCount<span class="pl-k">&lt;</span><span class="pl-c1">0.5</span><span class="pl-k">*</span><span class="pl-v">this</span>.xAxis.len/l.radius);<span class="pl-k">if</span>(l.enabled<span class="pl-k">!==!</span><span class="pl-c1">1</span><span class="pl-k">||</span><span class="pl-v">this</span>._hasPointMarkers)<span class="pl-k">for</span>(f<span class="pl-k">=</span>b.<span class="pl-sc">length</span>;f<span class="pl-k">--</span>;)<span class="pl-k">if</span>(g<span class="pl-k">=</span>b[f],d<span class="pl-k">=</span>U(g.plotX),e<span class="pl-k">=</span>g.plotY,k<span class="pl-k">=</span>g.graphic,m<span class="pl-k">=</span>g.marker<span class="pl-k">||</span>{},o<span class="pl-k">=!!</span>g.marker,a<span class="pl-k">=</span>s<span class="pl-k">&amp;&amp;</span>m.enabled<span class="pl-k">===</span>u<span class="pl-k">||</span>m.enabled,q<span class="pl-k">=</span>c.isInsidePlot(v(d),e,c.inverted),a<span class="pl-k">&amp;&amp;</span>e<span class="pl-k">!==</span>u<span class="pl-k">&amp;&amp;!</span><span class="pl-s3">isNaN</span>(e)<span class="pl-k">&amp;&amp;</span>g.<span class="pl-sc">y</span><span class="pl-k">!==</span><span class="pl-c1">null</span>)<span class="pl-k">if</span>(a<span class="pl-k">=</span>g.pointAttr[g.<span class="pl-sc">selected</span><span class="pl-k">?</span><span class="pl-s1"><span class="pl-pds">&quot;</span>select<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s1"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>]<span class="pl-k">||</span>n,h<span class="pl-k">=</span>a.r,i<span class="pl-k">=</span>p(m.symbol,<span class="pl-v">this</span>.symbol),j<span class="pl-k">=</span>i.<span class="pl-s3">indexOf</span>(<span class="pl-s1"><span class="pl-pds">&quot;</span>url<span class="pl-pds">&quot;</span></span>)<span class="pl-k">===</span><span class="pl-c1">0</span>,k)k[q<span class="pl-k">?</span><span class="pl-s1"><span class="pl-pds">&quot;</span>show<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s1"><span class="pl-pds">&quot;</span>hide<span class="pl-pds">&quot;</span></span>](<span class="pl-k">!</span><span class="pl-c1">0</span>).animate(r({x<span class="pl-k">:</span>d<span class="pl-k">-</span>h,y<span class="pl-k">:</span>e<span class="pl-k">-</span>h},k.symbolName<span class="pl-k">?</span>{width<span class="pl-k">:</span><span class="pl-c1">2</span><span class="pl-k">*</span>h,height<span class="pl-k">:</span><span class="pl-c1">2</span><span class="pl-k">*</span>h}<span class="pl-k">:</span>{}));<span class="pl-k">else</span>{<span class="pl-k">if</span>(q<span class="pl-k">&amp;&amp;</span></td>
      </tr>
      <tr>
        <td id="L237" class="blob-num js-line-number" data-line-number="237"></td>
        <td id="LC237" class="blob-code js-file-line">(h<span class="pl-k">&gt;</span><span class="pl-c1">0</span><span class="pl-k">||</span>j))g.graphic<span class="pl-k">=</span>c.renderer.symbol(i,d<span class="pl-k">-</span>h,e<span class="pl-k">-</span>h,<span class="pl-c1">2</span><span class="pl-k">*</span>h,<span class="pl-c1">2</span><span class="pl-k">*</span>h,o<span class="pl-k">?</span>m<span class="pl-k">:</span>l).attr(a).<span class="pl-s3">add</span>(t)}<span class="pl-k">else</span> <span class="pl-k">if</span>(k)g.graphic<span class="pl-k">=</span>k.destroy()},<span class="pl-en">convertAttribs</span>:<span class="pl-st">function</span>(<span class="pl-vpf">a</span>,<span class="pl-vpf">b</span>,<span class="pl-vpf">c</span>,<span class="pl-vpf">d</span>){<span class="pl-s">var</span> e<span class="pl-k">=</span><span class="pl-v">this</span>.pointAttrToOptions,f,g,h<span class="pl-k">=</span>{},a<span class="pl-k">=</span>a<span class="pl-k">||</span>{},b<span class="pl-k">=</span>b<span class="pl-k">||</span>{},c<span class="pl-k">=</span>c<span class="pl-k">||</span>{},d<span class="pl-k">=</span>d<span class="pl-k">||</span>{};<span class="pl-k">for</span>(f <span class="pl-k">in</span> e)g<span class="pl-k">=</span>e[f],h[f]<span class="pl-k">=</span>p(a[g],b[f],c[f],d[f]);<span class="pl-k">return</span> h},<span class="pl-en">getAttribs</span>:<span class="pl-st">function</span>(){<span class="pl-s">var</span> a<span class="pl-k">=</span><span class="pl-v">this</span>,b<span class="pl-k">=</span>a.<span class="pl-sc">options</span>,c<span class="pl-k">=</span>ca[a.<span class="pl-sc">type</span>].marker<span class="pl-k">?</span>b.marker<span class="pl-k">:</span>b,d<span class="pl-k">=</span>c.states,e<span class="pl-k">=</span>d.hover,f,g<span class="pl-k">=</span>a.<span class="pl-sc">color</span>;f<span class="pl-k">=</span>{stroke<span class="pl-k">:</span>g,fill<span class="pl-k">:</span>g};<span class="pl-s">var</span> h<span class="pl-k">=</span>a.points<span class="pl-k">||</span>[],i,j<span class="pl-k">=</span>[],k,l<span class="pl-k">=</span>a.pointAttrToOptions;k<span class="pl-k">=</span>a.hasPointSpecificOptions;<span class="pl-s">var</span> n<span class="pl-k">=</span>b.negativeColor,m<span class="pl-k">=</span></td>
      </tr>
      <tr>
        <td id="L238" class="blob-num js-line-number" data-line-number="238"></td>
        <td id="LC238" class="blob-code js-file-line">c.lineColor,o<span class="pl-k">=</span>c.fillColor;i<span class="pl-k">=</span>b.turboThreshold;<span class="pl-s">var</span> p;b.marker<span class="pl-k">?</span>(e.radius<span class="pl-k">=</span>e.radius<span class="pl-k">||</span>c.radius<span class="pl-k">+</span>e.radiusPlus,e.lineWidth<span class="pl-k">=</span>e.lineWidth<span class="pl-k">||</span>c.lineWidth<span class="pl-k">+</span>e.lineWidthPlus)<span class="pl-k">:</span>e.<span class="pl-sc">color</span><span class="pl-k">=</span>e.<span class="pl-sc">color</span><span class="pl-k">||</span>ya(e.<span class="pl-sc">color</span><span class="pl-k">||</span>g).brighten(e.brightness).get();j[<span class="pl-s1"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>]<span class="pl-k">=</span>a.convertAttribs(c,f);q([<span class="pl-s1"><span class="pl-pds">&quot;</span>hover<span class="pl-pds">&quot;</span></span>,<span class="pl-s1"><span class="pl-pds">&quot;</span>select<span class="pl-pds">&quot;</span></span>],<span class="pl-st">function</span>(<span class="pl-vpf">b</span>){j[b]<span class="pl-k">=</span>a.convertAttribs(d[b],j[<span class="pl-s1"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>])});a.pointAttr<span class="pl-k">=</span>j;g<span class="pl-k">=</span>h.<span class="pl-sc">length</span>;<span class="pl-k">if</span>(<span class="pl-k">!</span>i<span class="pl-k">||</span>g<span class="pl-k">&lt;</span>i<span class="pl-k">||</span>k)<span class="pl-k">for</span>(;g<span class="pl-k">--</span>;){i<span class="pl-k">=</span>h[g];<span class="pl-k">if</span>((c<span class="pl-k">=</span>i.<span class="pl-sc">options</span><span class="pl-k">&amp;&amp;</span>i.<span class="pl-sc">options</span>.marker<span class="pl-k">||</span>i.<span class="pl-sc">options</span>)<span class="pl-k">&amp;&amp;</span>c.enabled<span class="pl-k">===!</span><span class="pl-c1">1</span>)c.radius<span class="pl-k">=</span><span class="pl-c1">0</span>;<span class="pl-k">if</span>(i.negative<span class="pl-k">&amp;&amp;</span>n)i.<span class="pl-sc">color</span><span class="pl-k">=</span>i.fillColor<span class="pl-k">=</span>n;k<span class="pl-k">=</span>b.colorByPoint<span class="pl-k">||</span></td>
      </tr>
      <tr>
        <td id="L239" class="blob-num js-line-number" data-line-number="239"></td>
        <td id="LC239" class="blob-code js-file-line">i.<span class="pl-sc">color</span>;<span class="pl-k">if</span>(i.<span class="pl-sc">options</span>)<span class="pl-k">for</span>(p <span class="pl-k">in</span> l)s(c[l[p]])<span class="pl-k">&amp;&amp;</span>(k<span class="pl-k">=!</span><span class="pl-c1">0</span>);<span class="pl-k">if</span>(k){c<span class="pl-k">=</span>c<span class="pl-k">||</span>{};k<span class="pl-k">=</span>[];d<span class="pl-k">=</span>c.states<span class="pl-k">||</span>{};f<span class="pl-k">=</span>d.hover<span class="pl-k">=</span>d.hover<span class="pl-k">||</span>{};<span class="pl-k">if</span>(<span class="pl-k">!</span>b.marker)f.<span class="pl-sc">color</span><span class="pl-k">=</span>f.<span class="pl-sc">color</span><span class="pl-k">||!</span>i.<span class="pl-sc">options</span>.<span class="pl-sc">color</span><span class="pl-k">&amp;&amp;</span>e.<span class="pl-sc">color</span><span class="pl-k">||</span>ya(i.<span class="pl-sc">color</span>).brighten(f.brightness<span class="pl-k">||</span>e.brightness).get();f<span class="pl-k">=</span>{color<span class="pl-k">:</span>i.<span class="pl-sc">color</span>};<span class="pl-k">if</span>(<span class="pl-k">!</span>o)f.fillColor<span class="pl-k">=</span>i.<span class="pl-sc">color</span>;<span class="pl-k">if</span>(<span class="pl-k">!</span>m)f.lineColor<span class="pl-k">=</span>i.<span class="pl-sc">color</span>;k[<span class="pl-s1"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>]<span class="pl-k">=</span>a.convertAttribs(r(f,c),j[<span class="pl-s1"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>]);k.hover<span class="pl-k">=</span>a.convertAttribs(d.hover,j.hover,k[<span class="pl-s1"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>]);k.select<span class="pl-k">=</span>a.convertAttribs(d.select,j.select,k[<span class="pl-s1"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>])}<span class="pl-k">else</span> k<span class="pl-k">=</span>j;i.pointAttr<span class="pl-k">=</span>k}},<span class="pl-en">destroy</span>:<span class="pl-st">function</span>(){<span class="pl-s">var</span> a<span class="pl-k">=</span><span class="pl-v">this</span>,b<span class="pl-k">=</span>a.chart,c<span class="pl-k">=</span><span class="pl-sr"><span class="pl-pds">/</span>AppleWebKit<span class="pl-cce">\/</span>533<span class="pl-pds">/</span></span>.<span class="pl-s3">test</span>(wa),</td>
      </tr>
      <tr>
        <td id="L240" class="blob-num js-line-number" data-line-number="240"></td>
        <td id="LC240" class="blob-code js-file-line">d,e,f<span class="pl-k">=</span>a.<span class="pl-sc">data</span><span class="pl-k">||</span>[],g,h,i;I(a,<span class="pl-s1"><span class="pl-pds">&quot;</span>destroy<span class="pl-pds">&quot;</span></span>);X(a);q(a.axisTypes<span class="pl-k">||</span>[],<span class="pl-st">function</span>(<span class="pl-vpf">b</span>){<span class="pl-k">if</span>(i<span class="pl-k">=</span>a[b])la(i.series,a),i.isDirty<span class="pl-k">=</span>i.forceRedraw<span class="pl-k">=!</span><span class="pl-c1">0</span>});a.legendItem<span class="pl-k">&amp;&amp;</span>a.chart.legend.destroyItem(a);<span class="pl-k">for</span>(e<span class="pl-k">=</span>f.<span class="pl-sc">length</span>;e<span class="pl-k">--</span>;)(g<span class="pl-k">=</span>f[e])<span class="pl-k">&amp;&amp;</span>g.destroy<span class="pl-k">&amp;&amp;</span>g.destroy();a.points<span class="pl-k">=</span><span class="pl-c1">null</span>;<span class="pl-s3">clearTimeout</span>(a.animationTimeout);q(<span class="pl-s1"><span class="pl-pds">&quot;</span>area,graph,dataLabelsGroup,group,markerGroup,tracker,graphNeg,areaNeg,posClip,negClip<span class="pl-pds">&quot;</span></span>.<span class="pl-s3">split</span>(<span class="pl-s1"><span class="pl-pds">&quot;</span>,<span class="pl-pds">&quot;</span></span>),<span class="pl-st">function</span>(<span class="pl-vpf">b</span>){a[b]<span class="pl-k">&amp;&amp;</span>(d<span class="pl-k">=</span>c<span class="pl-k">&amp;&amp;</span>b<span class="pl-k">===</span><span class="pl-s1"><span class="pl-pds">&quot;</span>group<span class="pl-pds">&quot;</span></span><span class="pl-k">?</span><span class="pl-s1"><span class="pl-pds">&quot;</span>hide<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s1"><span class="pl-pds">&quot;</span>destroy<span class="pl-pds">&quot;</span></span>,a[b][d]())});<span class="pl-k">if</span>(b.hoverSeries<span class="pl-k">===</span>a)b.hoverSeries<span class="pl-k">=</span><span class="pl-c1">null</span>;la(b.series,a);<span class="pl-k">for</span>(h <span class="pl-k">in</span> a)<span class="pl-k">delete</span> a[h]},</td>
      </tr>
      <tr>
        <td id="L241" class="blob-num js-line-number" data-line-number="241"></td>
        <td id="LC241" class="blob-code js-file-line"><span class="pl-en">getSegmentPath</span>:<span class="pl-st">function</span>(<span class="pl-vpf">a</span>){<span class="pl-s">var</span> b<span class="pl-k">=</span><span class="pl-v">this</span>,c<span class="pl-k">=</span>[],d<span class="pl-k">=</span>b.<span class="pl-sc">options</span>.step;q(a,<span class="pl-st">function</span>(<span class="pl-vpf">e</span>,<span class="pl-vpf">f</span>){<span class="pl-s">var</span> g<span class="pl-k">=</span>e.plotX,h<span class="pl-k">=</span>e.plotY,i;b.getPointSpline<span class="pl-k">?</span>c.push.<span class="pl-s3">apply</span>(c,b.getPointSpline(a,e,f))<span class="pl-k">:</span>(c.<span class="pl-s3">push</span>(f<span class="pl-k">?</span><span class="pl-s1"><span class="pl-pds">&quot;</span>L<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s1"><span class="pl-pds">&quot;</span>M<span class="pl-pds">&quot;</span></span>),d<span class="pl-k">&amp;&amp;</span>f<span class="pl-k">&amp;&amp;</span>(i<span class="pl-k">=</span>a[f<span class="pl-k">-</span><span class="pl-c1">1</span>],d<span class="pl-k">===</span><span class="pl-s1"><span class="pl-pds">&quot;</span>right<span class="pl-pds">&quot;</span></span><span class="pl-k">?</span>c.<span class="pl-s3">push</span>(i.plotX,h)<span class="pl-k">:</span>d<span class="pl-k">===</span><span class="pl-s1"><span class="pl-pds">&quot;</span>center<span class="pl-pds">&quot;</span></span><span class="pl-k">?</span>c.<span class="pl-s3">push</span>((i.plotX<span class="pl-k">+</span>g)/<span class="pl-c1">2</span>,i.plotY,(i.plotX<span class="pl-k">+</span>g)/<span class="pl-c1">2</span>,h)<span class="pl-k">:</span>c.<span class="pl-s3">push</span>(g,i.plotY)),c.<span class="pl-s3">push</span>(e.plotX,e.plotY))});<span class="pl-k">return</span> c},<span class="pl-en">getGraphPath</span>:<span class="pl-st">function</span>(){<span class="pl-s">var</span> a<span class="pl-k">=</span><span class="pl-v">this</span>,b<span class="pl-k">=</span>[],c,d<span class="pl-k">=</span>[];q(a.segments,<span class="pl-st">function</span>(<span class="pl-vpf">e</span>){c<span class="pl-k">=</span>a.getSegmentPath(e);e.<span class="pl-sc">length</span><span class="pl-k">&gt;</span><span class="pl-c1">1</span><span class="pl-k">?</span>b<span class="pl-k">=</span>b.<span class="pl-s3">concat</span>(c)<span class="pl-k">:</span>d.<span class="pl-s3">push</span>(e[<span class="pl-c1">0</span>])});a.singlePoints<span class="pl-k">=</span>d;<span class="pl-k">return</span> a.graphPath<span class="pl-k">=</span></td>
      </tr>
      <tr>
        <td id="L242" class="blob-num js-line-number" data-line-number="242"></td>
        <td id="LC242" class="blob-code js-file-line">b},<span class="pl-en">drawGraph</span>:<span class="pl-st">function</span>(){<span class="pl-s">var</span> a<span class="pl-k">=</span><span class="pl-v">this</span>,b<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-sc">options</span>,c<span class="pl-k">=</span>[[<span class="pl-s1"><span class="pl-pds">&quot;</span>graph<span class="pl-pds">&quot;</span></span>,b.lineColor<span class="pl-k">||</span><span class="pl-v">this</span>.<span class="pl-sc">color</span>]],d<span class="pl-k">=</span>b.lineWidth,e<span class="pl-k">=</span>b.dashStyle,f<span class="pl-k">=</span>b.linecap<span class="pl-k">!==</span><span class="pl-s1"><span class="pl-pds">&quot;</span>square<span class="pl-pds">&quot;</span></span>,g<span class="pl-k">=</span><span class="pl-v">this</span>.getGraphPath(),h<span class="pl-k">=</span>b.negativeColor;h<span class="pl-k">&amp;&amp;</span>c.<span class="pl-s3">push</span>([<span class="pl-s1"><span class="pl-pds">&quot;</span>graphNeg<span class="pl-pds">&quot;</span></span>,h]);q(c,<span class="pl-st">function</span>(<span class="pl-vpf">c</span>,<span class="pl-vpf">h</span>){<span class="pl-s">var</span> k<span class="pl-k">=</span>c[<span class="pl-c1">0</span>],l<span class="pl-k">=</span>a[k];<span class="pl-k">if</span>(l)bb(l),l.animate({d<span class="pl-k">:</span>g});<span class="pl-k">else</span> <span class="pl-k">if</span>(d<span class="pl-k">&amp;&amp;</span>g.<span class="pl-sc">length</span>)l<span class="pl-k">=</span>{stroke<span class="pl-k">:</span>c[<span class="pl-c1">1</span>],<span class="pl-s1"><span class="pl-pds">&quot;</span>stroke-width<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span>d,fill<span class="pl-k">:</span>P,zIndex<span class="pl-k">:</span><span class="pl-c1">1</span>},e<span class="pl-k">?</span>l.dashstyle<span class="pl-k">=</span>e<span class="pl-k">:</span>f<span class="pl-k">&amp;&amp;</span>(l[<span class="pl-s1"><span class="pl-pds">&quot;</span>stroke-linecap<span class="pl-pds">&quot;</span></span>]<span class="pl-k">=</span>l[<span class="pl-s1"><span class="pl-pds">&quot;</span>stroke-linejoin<span class="pl-pds">&quot;</span></span>]<span class="pl-k">=</span><span class="pl-s1"><span class="pl-pds">&quot;</span>round<span class="pl-pds">&quot;</span></span>),a[k]<span class="pl-k">=</span>a.chart.renderer.path(g).attr(l).<span class="pl-s3">add</span>(a.group).shadow(<span class="pl-k">!</span>h<span class="pl-k">&amp;&amp;</span>b.shadow)})},<span class="pl-en">clipNeg</span>:<span class="pl-st">function</span>(){<span class="pl-s">var</span> a<span class="pl-k">=</span></td>
      </tr>
      <tr>
        <td id="L243" class="blob-num js-line-number" data-line-number="243"></td>
        <td id="LC243" class="blob-code js-file-line"><span class="pl-v">this</span>.<span class="pl-sc">options</span>,b<span class="pl-k">=</span><span class="pl-v">this</span>.chart,c<span class="pl-k">=</span>b.renderer,d<span class="pl-k">=</span>a.negativeColor<span class="pl-k">||</span>a.negativeFillColor,e,f<span class="pl-k">=</span><span class="pl-v">this</span>.graph,g<span class="pl-k">=</span><span class="pl-v">this</span>.area,h<span class="pl-k">=</span><span class="pl-v">this</span>.posClip,i<span class="pl-k">=</span><span class="pl-v">this</span>.negClip;e<span class="pl-k">=</span>b.chartWidth;<span class="pl-s">var</span> j<span class="pl-k">=</span>b.chartHeight,k<span class="pl-k">=</span>t(e,j),l<span class="pl-k">=</span><span class="pl-v">this</span>.yAxis;<span class="pl-k">if</span>(d<span class="pl-k">&amp;&amp;</span>(f<span class="pl-k">||</span>g)){d<span class="pl-k">=</span>v(l.toPixels(a.threshold<span class="pl-k">||</span><span class="pl-c1">0</span>,<span class="pl-k">!</span><span class="pl-c1">0</span>));d<span class="pl-k">&lt;</span><span class="pl-c1">0</span><span class="pl-k">&amp;&amp;</span>(k<span class="pl-k">-=</span>d);a<span class="pl-k">=</span>{x<span class="pl-k">:</span><span class="pl-c1">0</span>,y<span class="pl-k">:</span><span class="pl-c1">0</span>,width<span class="pl-k">:</span>k,height<span class="pl-k">:</span>d};k<span class="pl-k">=</span>{x<span class="pl-k">:</span><span class="pl-c1">0</span>,y<span class="pl-k">:</span>d,width<span class="pl-k">:</span>k,height<span class="pl-k">:</span>k};<span class="pl-k">if</span>(b.inverted)a.<span class="pl-sc">height</span><span class="pl-k">=</span>k.<span class="pl-sc">y</span><span class="pl-k">=</span>b.plotWidth<span class="pl-k">-</span>d,c.isVML<span class="pl-k">&amp;&amp;</span>(a<span class="pl-k">=</span>{x<span class="pl-k">:</span>b.plotWidth<span class="pl-k">-</span>d<span class="pl-k">-</span>b.plotLeft,y<span class="pl-k">:</span><span class="pl-c1">0</span>,width<span class="pl-k">:</span>e,height<span class="pl-k">:</span>j},k<span class="pl-k">=</span>{x<span class="pl-k">:</span>d<span class="pl-k">+</span>b.plotLeft<span class="pl-k">-</span>e,y<span class="pl-k">:</span><span class="pl-c1">0</span>,width<span class="pl-k">:</span>b.plotLeft<span class="pl-k">+</span>d,height<span class="pl-k">:</span>e});l.reversed<span class="pl-k">?</span>(b<span class="pl-k">=</span>k,e<span class="pl-k">=</span>a)<span class="pl-k">:</span>(b<span class="pl-k">=</span>a,e<span class="pl-k">=</span>k);h<span class="pl-k">?</span></td>
      </tr>
      <tr>
        <td id="L244" class="blob-num js-line-number" data-line-number="244"></td>
        <td id="LC244" class="blob-code js-file-line">(h.animate(b),i.animate(e))<span class="pl-k">:</span>(<span class="pl-v">this</span>.posClip<span class="pl-k">=</span>h<span class="pl-k">=</span>c.clipRect(b),<span class="pl-v">this</span>.negClip<span class="pl-k">=</span>i<span class="pl-k">=</span>c.clipRect(e),f<span class="pl-k">&amp;&amp;</span><span class="pl-v">this</span>.graphNeg<span class="pl-k">&amp;&amp;</span>(f.<span class="pl-sc">clip</span>(h),<span class="pl-v">this</span>.graphNeg.<span class="pl-sc">clip</span>(i)),g<span class="pl-k">&amp;&amp;</span>(g.<span class="pl-sc">clip</span>(h),<span class="pl-v">this</span>.areaNeg.<span class="pl-sc">clip</span>(i)))}},<span class="pl-en">invertGroups</span>:<span class="pl-st">function</span>(){<span class="pl-st">function</span> <span class="pl-en">a</span>(){<span class="pl-s">var</span> a<span class="pl-k">=</span>{width<span class="pl-k">:</span>b.yAxis.len,height<span class="pl-k">:</span>b.xAxis.len};q([<span class="pl-s1"><span class="pl-pds">&quot;</span>group<span class="pl-pds">&quot;</span></span>,<span class="pl-s1"><span class="pl-pds">&quot;</span>markerGroup<span class="pl-pds">&quot;</span></span>],<span class="pl-st">function</span>(<span class="pl-vpf">c</span>){b[c]<span class="pl-k">&amp;&amp;</span>b[c].attr(a).invert()})}<span class="pl-s">var</span> b<span class="pl-k">=</span><span class="pl-v">this</span>,c<span class="pl-k">=</span>b.chart;<span class="pl-k">if</span>(b.xAxis)N(c,<span class="pl-s1"><span class="pl-pds">&quot;</span>resize<span class="pl-pds">&quot;</span></span>,a),N(b,<span class="pl-s1"><span class="pl-pds">&quot;</span>destroy<span class="pl-pds">&quot;</span></span>,<span class="pl-st">function</span>(){X(c,<span class="pl-s1"><span class="pl-pds">&quot;</span>resize<span class="pl-pds">&quot;</span></span>,a)}),a(),b.invertGroups<span class="pl-k">=</span>a},<span class="pl-en">plotGroup</span>:<span class="pl-st">function</span>(<span class="pl-vpf">a</span>,<span class="pl-vpf">b</span>,<span class="pl-vpf">c</span>,<span class="pl-vpf">d</span>,<span class="pl-vpf">e</span>){<span class="pl-s">var</span> f<span class="pl-k">=</span><span class="pl-v">this</span>[a],g<span class="pl-k">=!</span>f;g<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>[a]<span class="pl-k">=</span></td>
      </tr>
      <tr>
        <td id="L245" class="blob-num js-line-number" data-line-number="245"></td>
        <td id="LC245" class="blob-code js-file-line">f<span class="pl-k">=</span><span class="pl-v">this</span>.chart.renderer.g(b).attr({visibility<span class="pl-k">:</span>c,zIndex<span class="pl-k">:</span>d<span class="pl-k">||</span><span class="pl-c1">0.1</span>}).<span class="pl-s3">add</span>(e));f[g<span class="pl-k">?</span><span class="pl-s1"><span class="pl-pds">&quot;</span>attr<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s1"><span class="pl-pds">&quot;</span>animate<span class="pl-pds">&quot;</span></span>](<span class="pl-v">this</span>.getPlotBox());<span class="pl-k">return</span> f},<span class="pl-en">getPlotBox</span>:<span class="pl-st">function</span>(){<span class="pl-s">var</span> a<span class="pl-k">=</span><span class="pl-v">this</span>.chart,b<span class="pl-k">=</span><span class="pl-v">this</span>.xAxis,c<span class="pl-k">=</span><span class="pl-v">this</span>.yAxis;<span class="pl-k">if</span>(a.inverted)b<span class="pl-k">=</span>c,c<span class="pl-k">=</span><span class="pl-v">this</span>.xAxis;<span class="pl-k">return</span>{translateX<span class="pl-k">:</span>b<span class="pl-k">?</span>b.<span class="pl-sc">left</span><span class="pl-k">:</span>a.plotLeft,translateY<span class="pl-k">:</span>c<span class="pl-k">?</span>c.<span class="pl-sc">top</span><span class="pl-k">:</span>a.plotTop,scaleX<span class="pl-k">:</span><span class="pl-c1">1</span>,scaleY<span class="pl-k">:</span><span class="pl-c1">1</span>}},<span class="pl-en">render</span>:<span class="pl-st">function</span>(){<span class="pl-s">var</span> a<span class="pl-k">=</span><span class="pl-v">this</span>,b<span class="pl-k">=</span>a.chart,c,d<span class="pl-k">=</span>a.<span class="pl-sc">options</span>,e<span class="pl-k">=</span>(c<span class="pl-k">=</span>d.animation)<span class="pl-k">&amp;&amp;!!</span>a.animate<span class="pl-k">&amp;&amp;</span>b.renderer.isSVG<span class="pl-k">&amp;&amp;</span>p(c.duration,<span class="pl-c1">500</span>)<span class="pl-k">||</span><span class="pl-c1">0</span>,f<span class="pl-k">=</span>a.visible<span class="pl-k">?</span><span class="pl-s1"><span class="pl-pds">&quot;</span>visible<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s1"><span class="pl-pds">&quot;</span>hidden<span class="pl-pds">&quot;</span></span>,g<span class="pl-k">=</span>d.<span class="pl-sc">zIndex</span>,h<span class="pl-k">=</span>a.hasRendered,i<span class="pl-k">=</span>b.seriesGroup;</td>
      </tr>
      <tr>
        <td id="L246" class="blob-num js-line-number" data-line-number="246"></td>
        <td id="LC246" class="blob-code js-file-line">c<span class="pl-k">=</span>a.plotGroup(<span class="pl-s1"><span class="pl-pds">&quot;</span>group<span class="pl-pds">&quot;</span></span>,<span class="pl-s1"><span class="pl-pds">&quot;</span>series<span class="pl-pds">&quot;</span></span>,f,g,i);a.markerGroup<span class="pl-k">=</span>a.plotGroup(<span class="pl-s1"><span class="pl-pds">&quot;</span>markerGroup<span class="pl-pds">&quot;</span></span>,<span class="pl-s1"><span class="pl-pds">&quot;</span>markers<span class="pl-pds">&quot;</span></span>,f,g,i);e<span class="pl-k">&amp;&amp;</span>a.animate(<span class="pl-k">!</span><span class="pl-c1">0</span>);a.getAttribs();c.inverted<span class="pl-k">=</span>a.isCartesian<span class="pl-k">?</span>b.inverted<span class="pl-k">:!</span><span class="pl-c1">1</span>;a.drawGraph<span class="pl-k">&amp;&amp;</span>(a.drawGraph(),a.clipNeg());q(a.points,<span class="pl-st">function</span>(<span class="pl-vpf">a</span>){a.redraw<span class="pl-k">&amp;&amp;</span>a.redraw()});a.drawDataLabels<span class="pl-k">&amp;&amp;</span>a.drawDataLabels();a.visible<span class="pl-k">&amp;&amp;</span>a.drawPoints();a.drawTracker<span class="pl-k">&amp;&amp;</span>a.<span class="pl-sc">options</span>.enableMouseTracking<span class="pl-k">!==!</span><span class="pl-c1">1</span><span class="pl-k">&amp;&amp;</span>a.drawTracker();b.inverted<span class="pl-k">&amp;&amp;</span>a.invertGroups();d.<span class="pl-sc">clip</span><span class="pl-k">!==!</span><span class="pl-c1">1</span><span class="pl-k">&amp;&amp;!</span>a.sharedClipKey<span class="pl-k">&amp;&amp;!</span>h<span class="pl-k">&amp;&amp;</span>c.<span class="pl-sc">clip</span>(b.clipRect);e<span class="pl-k">&amp;&amp;</span>a.animate();<span class="pl-k">if</span>(<span class="pl-k">!</span>h)e<span class="pl-k">?</span>a.animationTimeout<span class="pl-k">=</span></td>
      </tr>
      <tr>
        <td id="L247" class="blob-num js-line-number" data-line-number="247"></td>
        <td id="LC247" class="blob-code js-file-line"><span class="pl-s3">setTimeout</span>(<span class="pl-st">function</span>(){a.afterAnimate()},e)<span class="pl-k">:</span>a.afterAnimate();a.isDirty<span class="pl-k">=</span>a.isDirtyData<span class="pl-k">=!</span><span class="pl-c1">1</span>;a.hasRendered<span class="pl-k">=!</span><span class="pl-c1">0</span>},<span class="pl-en">redraw</span>:<span class="pl-st">function</span>(){<span class="pl-s">var</span> a<span class="pl-k">=</span><span class="pl-v">this</span>.chart,b<span class="pl-k">=</span><span class="pl-v">this</span>.isDirtyData,c<span class="pl-k">=</span><span class="pl-v">this</span>.group,d<span class="pl-k">=</span><span class="pl-v">this</span>.xAxis,e<span class="pl-k">=</span><span class="pl-v">this</span>.yAxis;c<span class="pl-k">&amp;&amp;</span>(a.inverted<span class="pl-k">&amp;&amp;</span>c.attr({width<span class="pl-k">:</span>a.plotWidth,height<span class="pl-k">:</span>a.plotHeight}),c.animate({translateX<span class="pl-k">:</span>p(d<span class="pl-k">&amp;&amp;</span>d.<span class="pl-sc">left</span>,a.plotLeft),translateY<span class="pl-k">:</span>p(e<span class="pl-k">&amp;&amp;</span>e.<span class="pl-sc">top</span>,a.plotTop)}));<span class="pl-v">this</span>.translate();<span class="pl-v">this</span>.setTooltipPoints<span class="pl-k">&amp;&amp;</span><span class="pl-v">this</span>.setTooltipPoints(<span class="pl-k">!</span><span class="pl-c1">0</span>);<span class="pl-v">this</span>.render();b<span class="pl-k">&amp;&amp;</span>I(<span class="pl-v">this</span>,<span class="pl-s1"><span class="pl-pds">&quot;</span>updatedData<span class="pl-pds">&quot;</span></span>)}};<span class="pl-s3">Gb</span>.<span class="pl-sc">prototype</span><span class="pl-k">=</span>{<span class="pl-en">destroy</span>:<span class="pl-st">function</span>(){Pa(<span class="pl-v">this</span>,<span class="pl-v">this</span>.<span class="pl-sc">axis</span>)},</td>
      </tr>
      <tr>
        <td id="L248" class="blob-num js-line-number" data-line-number="248"></td>
        <td id="LC248" class="blob-code js-file-line"><span class="pl-en">render</span>:<span class="pl-st">function</span>(<span class="pl-vpf">a</span>){<span class="pl-s">var</span> b<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-sc">options</span>,c<span class="pl-k">=</span>b.format,c<span class="pl-k">=</span>c<span class="pl-k">?</span>Ja(c,<span class="pl-v">this</span>)<span class="pl-k">:</span>b.formatter.<span class="pl-s3">call</span>(<span class="pl-v">this</span>);<span class="pl-v">this</span>.<span class="pl-sc">label</span><span class="pl-k">?</span><span class="pl-v">this</span>.<span class="pl-sc">label</span>.attr({text<span class="pl-k">:</span>c,visibility<span class="pl-k">:</span><span class="pl-s1"><span class="pl-pds">&quot;</span>hidden<span class="pl-pds">&quot;</span></span>})<span class="pl-k">:</span><span class="pl-v">this</span>.<span class="pl-sc">label</span><span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-sc">axis</span>.chart.renderer.<span class="pl-sc">text</span>(c,<span class="pl-c1">null</span>,<span class="pl-c1">null</span>,b.useHTML).css(b.<span class="pl-sc">style</span>).attr({align<span class="pl-k">:</span><span class="pl-v">this</span>.<span class="pl-sc">textAlign</span>,rotation<span class="pl-k">:</span>b.rotation,visibility<span class="pl-k">:</span><span class="pl-s1"><span class="pl-pds">&quot;</span>hidden<span class="pl-pds">&quot;</span></span>}).<span class="pl-s3">add</span>(a)},<span class="pl-en">setOffset</span>:<span class="pl-st">function</span>(<span class="pl-vpf">a</span>,<span class="pl-vpf">b</span>){<span class="pl-s">var</span> c<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-sc">axis</span>,d<span class="pl-k">=</span>c.chart,e<span class="pl-k">=</span>d.inverted,f<span class="pl-k">=</span><span class="pl-v">this</span>.isNegative,g<span class="pl-k">=</span>c.translate(c.usePercentage<span class="pl-k">?</span><span class="pl-c1">100</span><span class="pl-k">:</span><span class="pl-v">this</span>.total,<span class="pl-c1">0</span>,<span class="pl-c1">0</span>,<span class="pl-c1">0</span>,<span class="pl-c1">1</span>),c<span class="pl-k">=</span>c.translate(<span class="pl-c1">0</span>),c<span class="pl-k">=</span>Q(g<span class="pl-k">-</span>c),h<span class="pl-k">=</span>d.xAxis[<span class="pl-c1">0</span>].translate(<span class="pl-v">this</span>.<span class="pl-sc">x</span>)<span class="pl-k">+</span>a,i<span class="pl-k">=</span>d.plotHeight,</td>
      </tr>
      <tr>
        <td id="L249" class="blob-num js-line-number" data-line-number="249"></td>
        <td id="LC249" class="blob-code js-file-line">f<span class="pl-k">=</span>{x<span class="pl-k">:</span>e<span class="pl-k">?</span>f<span class="pl-k">?</span>g<span class="pl-k">:</span>g<span class="pl-k">-</span>c<span class="pl-k">:</span>h,y<span class="pl-k">:</span>e<span class="pl-k">?</span>i<span class="pl-k">-</span>h<span class="pl-k">-</span>b<span class="pl-k">:</span>f<span class="pl-k">?</span>i<span class="pl-k">-</span>g<span class="pl-k">-</span>c<span class="pl-k">:</span>i<span class="pl-k">-</span>g,width<span class="pl-k">:</span>e<span class="pl-k">?</span>c<span class="pl-k">:</span>b,height<span class="pl-k">:</span>e<span class="pl-k">?</span>b<span class="pl-k">:</span>c};<span class="pl-k">if</span>(e<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-sc">label</span>)e.<span class="pl-sc">align</span>(<span class="pl-v">this</span>.alignOptions,<span class="pl-c1">null</span>,f),f<span class="pl-k">=</span>e.alignAttr,e[<span class="pl-v">this</span>.<span class="pl-sc">options</span>.crop<span class="pl-k">===!</span><span class="pl-c1">1</span><span class="pl-k">||</span>d.isInsidePlot(f.<span class="pl-sc">x</span>,f.<span class="pl-sc">y</span>)<span class="pl-k">?</span><span class="pl-s1"><span class="pl-pds">&quot;</span>show<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s1"><span class="pl-pds">&quot;</span>hide<span class="pl-pds">&quot;</span></span>](<span class="pl-k">!</span><span class="pl-c1">0</span>)}};<span class="pl-s3">na</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">buildStacks</span><span class="pl-k">=</span><span class="pl-st">function</span>(){<span class="pl-s">var</span> a<span class="pl-k">=</span><span class="pl-v">this</span>.series,b<span class="pl-k">=</span>p(<span class="pl-v">this</span>.<span class="pl-sc">options</span>.reversedStacks,<span class="pl-k">!</span><span class="pl-c1">0</span>),c<span class="pl-k">=</span>a.<span class="pl-sc">length</span>;<span class="pl-k">if</span>(<span class="pl-k">!</span><span class="pl-v">this</span>.isXAxis){<span class="pl-k">for</span>(<span class="pl-v">this</span>.usePercentage<span class="pl-k">=!</span><span class="pl-c1">1</span>;c<span class="pl-k">--</span>;)a[b<span class="pl-k">?</span>c<span class="pl-k">:</span>a.<span class="pl-sc">length</span><span class="pl-k">-</span>c<span class="pl-k">-</span><span class="pl-c1">1</span>].setStackedPoints();<span class="pl-k">if</span>(<span class="pl-v">this</span>.usePercentage)<span class="pl-k">for</span>(c<span class="pl-k">=</span><span class="pl-c1">0</span>;c<span class="pl-k">&lt;</span>a.<span class="pl-sc">length</span>;c<span class="pl-k">++</span>)a[c].setPercentStacks()}};<span class="pl-s3">na</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">renderStackTotals</span><span class="pl-k">=</span><span class="pl-st">function</span>(){<span class="pl-s">var</span> a<span class="pl-k">=</span></td>
      </tr>
      <tr>
        <td id="L250" class="blob-num js-line-number" data-line-number="250"></td>
        <td id="LC250" class="blob-code js-file-line"><span class="pl-v">this</span>.chart,b<span class="pl-k">=</span>a.renderer,c<span class="pl-k">=</span><span class="pl-v">this</span>.stacks,d,e,f<span class="pl-k">=</span><span class="pl-v">this</span>.stackTotalGroup;<span class="pl-k">if</span>(<span class="pl-k">!</span>f)<span class="pl-v">this</span>.stackTotalGroup<span class="pl-k">=</span>f<span class="pl-k">=</span>b.g(<span class="pl-s1"><span class="pl-pds">&quot;</span>stack-labels<span class="pl-pds">&quot;</span></span>).attr({visibility<span class="pl-k">:</span><span class="pl-s1"><span class="pl-pds">&quot;</span>visible<span class="pl-pds">&quot;</span></span>,zIndex<span class="pl-k">:</span><span class="pl-c1">6</span>}).<span class="pl-s3">add</span>();f.translate(a.plotLeft,a.plotTop);<span class="pl-k">for</span>(d <span class="pl-k">in</span> c)<span class="pl-k">for</span>(e <span class="pl-k">in</span> a<span class="pl-k">=</span>c[d],a)a[e].render(f)};<span class="pl-s3">O</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">setStackedPoints</span><span class="pl-k">=</span><span class="pl-st">function</span>(){<span class="pl-k">if</span>(<span class="pl-v">this</span>.<span class="pl-sc">options</span>.stacking<span class="pl-k">&amp;&amp;!</span>(<span class="pl-v">this</span>.visible<span class="pl-k">!==!</span><span class="pl-c1">0</span><span class="pl-k">&amp;&amp;</span><span class="pl-v">this</span>.chart.<span class="pl-sc">options</span>.chart.ignoreHiddenSeries<span class="pl-k">!==!</span><span class="pl-c1">1</span>)){<span class="pl-s">var</span> a<span class="pl-k">=</span><span class="pl-v">this</span>.processedXData,b<span class="pl-k">=</span><span class="pl-v">this</span>.processedYData,c<span class="pl-k">=</span>[],d<span class="pl-k">=</span>b.<span class="pl-sc">length</span>,e<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-sc">options</span>,f<span class="pl-k">=</span>e.threshold,g<span class="pl-k">=</span>e.stack,e<span class="pl-k">=</span>e.stacking,h<span class="pl-k">=</span><span class="pl-v">this</span>.stackKey,</td>
      </tr>
      <tr>
        <td id="L251" class="blob-num js-line-number" data-line-number="251"></td>
        <td id="LC251" class="blob-code js-file-line">i<span class="pl-k">=</span><span class="pl-s1"><span class="pl-pds">&quot;</span>-<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>h,j<span class="pl-k">=</span><span class="pl-v">this</span>.negStacks,k<span class="pl-k">=</span><span class="pl-v">this</span>.yAxis,l<span class="pl-k">=</span>k.stacks,n<span class="pl-k">=</span>k.oldStacks,m,o,p,q,r,s;<span class="pl-k">for</span>(q<span class="pl-k">=</span><span class="pl-c1">0</span>;q<span class="pl-k">&lt;</span>d;q<span class="pl-k">++</span>){r<span class="pl-k">=</span>a[q];s<span class="pl-k">=</span>b[q];p<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-sc">index</span><span class="pl-k">+</span><span class="pl-s1"><span class="pl-pds">&quot;</span>,<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>q;o<span class="pl-k">=</span>(m<span class="pl-k">=</span>j<span class="pl-k">&amp;&amp;</span>s<span class="pl-k">&lt;</span>f)<span class="pl-k">?</span>i<span class="pl-k">:</span>h;l[o]<span class="pl-k">||</span>(l[o]<span class="pl-k">=</span>{});<span class="pl-k">if</span>(<span class="pl-k">!</span>l[o][r])n[o]<span class="pl-k">&amp;&amp;</span>n[o][r]<span class="pl-k">?</span>(l[o][r]<span class="pl-k">=</span>n[o][r],l[o][r].total<span class="pl-k">=</span><span class="pl-c1">null</span>)<span class="pl-k">:</span>l[o][r]<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">Gb</span>(k,k.<span class="pl-sc">options</span>.stackLabels,m,r,g);o<span class="pl-k">=</span>l[o][r];o.points[p]<span class="pl-k">=</span>[o.cum<span class="pl-k">||</span><span class="pl-c1">0</span>];e<span class="pl-k">===</span><span class="pl-s1"><span class="pl-pds">&quot;</span>percent<span class="pl-pds">&quot;</span></span><span class="pl-k">?</span>(m<span class="pl-k">=</span>m<span class="pl-k">?</span>h<span class="pl-k">:</span>i,j<span class="pl-k">&amp;&amp;</span>l[m]<span class="pl-k">&amp;&amp;</span>l[m][r]<span class="pl-k">?</span>(m<span class="pl-k">=</span>l[m][r],o.total<span class="pl-k">=</span>m.total<span class="pl-k">=</span>t(m.total,o.total)<span class="pl-k">+</span>Q(s)<span class="pl-k">||</span><span class="pl-c1">0</span>)<span class="pl-k">:</span>o.total<span class="pl-k">=</span>ea(o.total<span class="pl-k">+</span>(Q(s)<span class="pl-k">||</span><span class="pl-c1">0</span>)))<span class="pl-k">:</span>o.total<span class="pl-k">=</span>ea(o.total<span class="pl-k">+</span>(s<span class="pl-k">||</span><span class="pl-c1">0</span>));o.cum<span class="pl-k">=</span>(o.cum<span class="pl-k">||</span><span class="pl-c1">0</span>)<span class="pl-k">+</span>(s<span class="pl-k">||</span><span class="pl-c1">0</span>);o.points[p].<span class="pl-s3">push</span>(o.cum);</td>
      </tr>
      <tr>
        <td id="L252" class="blob-num js-line-number" data-line-number="252"></td>
        <td id="LC252" class="blob-code js-file-line">c[q]<span class="pl-k">=</span>o.cum}<span class="pl-k">if</span>(e<span class="pl-k">===</span><span class="pl-s1"><span class="pl-pds">&quot;</span>percent<span class="pl-pds">&quot;</span></span>)k.usePercentage<span class="pl-k">=!</span><span class="pl-c1">0</span>;<span class="pl-v">this</span>.stackedYData<span class="pl-k">=</span>c;k.oldStacks<span class="pl-k">=</span>{}}};<span class="pl-s3">O</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">setPercentStacks</span><span class="pl-k">=</span><span class="pl-st">function</span>(){<span class="pl-s">var</span> a<span class="pl-k">=</span><span class="pl-v">this</span>,b<span class="pl-k">=</span>a.stackKey,c<span class="pl-k">=</span>a.yAxis.stacks,d<span class="pl-k">=</span>a.processedXData;q([b,<span class="pl-s1"><span class="pl-pds">&quot;</span>-<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>b],<span class="pl-st">function</span>(<span class="pl-vpf">b</span>){<span class="pl-s">var</span> e;<span class="pl-k">for</span>(<span class="pl-s">var</span> f<span class="pl-k">=</span>d.<span class="pl-sc">length</span>,g,h;f<span class="pl-k">--</span>;)<span class="pl-k">if</span>(g<span class="pl-k">=</span>d[f],e<span class="pl-k">=</span>(h<span class="pl-k">=</span>c[b]<span class="pl-k">&amp;&amp;</span>c[b][g])<span class="pl-k">&amp;&amp;</span>h.points[a.<span class="pl-sc">index</span><span class="pl-k">+</span><span class="pl-s1"><span class="pl-pds">&quot;</span>,<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>f],g<span class="pl-k">=</span>e)h<span class="pl-k">=</span>h.total<span class="pl-k">?</span><span class="pl-c1">100</span>/h.total<span class="pl-k">:</span><span class="pl-c1">0</span>,g[<span class="pl-c1">0</span>]<span class="pl-k">=</span>ea(g[<span class="pl-c1">0</span>]<span class="pl-k">*</span>h),g[<span class="pl-c1">1</span>]<span class="pl-k">=</span>ea(g[<span class="pl-c1">1</span>]<span class="pl-k">*</span>h),a.stackedYData[f]<span class="pl-k">=</span>g[<span class="pl-c1">1</span>]})};r(Ya.<span class="pl-sc">prototype</span>,{<span class="pl-en">addSeries</span>:<span class="pl-st">function</span>(<span class="pl-vpf">a</span>,<span class="pl-vpf">b</span>,<span class="pl-vpf">c</span>){<span class="pl-s">var</span> d,e<span class="pl-k">=</span><span class="pl-v">this</span>;a<span class="pl-k">&amp;&amp;</span>(b<span class="pl-k">=</span>p(b,<span class="pl-k">!</span><span class="pl-c1">0</span>),I(e,<span class="pl-s1"><span class="pl-pds">&quot;</span>addSeries<span class="pl-pds">&quot;</span></span>,{options<span class="pl-k">:</span>a},<span class="pl-st">function</span>(){d<span class="pl-k">=</span>e.initSeries(a);</td>
      </tr>
      <tr>
        <td id="L253" class="blob-num js-line-number" data-line-number="253"></td>
        <td id="LC253" class="blob-code js-file-line">e.isDirtyLegend<span class="pl-k">=!</span><span class="pl-c1">0</span>;e.linkSeries();b<span class="pl-k">&amp;&amp;</span>e.redraw(c)}));<span class="pl-k">return</span> d},<span class="pl-en">addAxis</span>:<span class="pl-st">function</span>(<span class="pl-vpf">a</span>,<span class="pl-vpf">b</span>,<span class="pl-vpf">c</span>,<span class="pl-vpf">d</span>){<span class="pl-s">var</span> e<span class="pl-k">=</span>b<span class="pl-k">?</span><span class="pl-s1"><span class="pl-pds">&quot;</span>xAxis<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s1"><span class="pl-pds">&quot;</span>yAxis<span class="pl-pds">&quot;</span></span>,f<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-sc">options</span>;<span class="pl-k">new</span> <span class="pl-en">na</span>(<span class="pl-v">this</span>,w(a,{index<span class="pl-k">:</span><span class="pl-v">this</span>[e].<span class="pl-sc">length</span>,isX<span class="pl-k">:</span>b}));f[e]<span class="pl-k">=</span>ra(f[e]<span class="pl-k">||</span>{});f[e].<span class="pl-s3">push</span>(a);p(c,<span class="pl-k">!</span><span class="pl-c1">0</span>)<span class="pl-k">&amp;&amp;</span><span class="pl-v">this</span>.redraw(d)},<span class="pl-en">showLoading</span>:<span class="pl-st">function</span>(<span class="pl-vpf">a</span>){<span class="pl-s">var</span> b<span class="pl-k">=</span><span class="pl-v">this</span>,c<span class="pl-k">=</span>b.<span class="pl-sc">options</span>,d<span class="pl-k">=</span>b.loadingDiv,e<span class="pl-k">=</span>c.loading,<span class="pl-en">f</span><span class="pl-k">=</span><span class="pl-st">function</span>(){d<span class="pl-k">&amp;&amp;</span>B(d,{left<span class="pl-k">:</span>b.plotLeft<span class="pl-k">+</span><span class="pl-s1"><span class="pl-pds">&quot;</span>px<span class="pl-pds">&quot;</span></span>,top<span class="pl-k">:</span>b.plotTop<span class="pl-k">+</span><span class="pl-s1"><span class="pl-pds">&quot;</span>px<span class="pl-pds">&quot;</span></span>,width<span class="pl-k">:</span>b.plotWidth<span class="pl-k">+</span><span class="pl-s1"><span class="pl-pds">&quot;</span>px<span class="pl-pds">&quot;</span></span>,height<span class="pl-k">:</span>b.plotHeight<span class="pl-k">+</span><span class="pl-s1"><span class="pl-pds">&quot;</span>px<span class="pl-pds">&quot;</span></span>})};<span class="pl-k">if</span>(<span class="pl-k">!</span>d)b.loadingDiv<span class="pl-k">=</span>d<span class="pl-k">=</span>$(Ka,{className<span class="pl-k">:</span><span class="pl-s1"><span class="pl-pds">&quot;</span>highcharts-loading<span class="pl-pds">&quot;</span></span>},r(e.<span class="pl-sc">style</span>,{zIndex<span class="pl-k">:</span><span class="pl-c1">10</span>,display<span class="pl-k">:</span>P}),</td>
      </tr>
      <tr>
        <td id="L254" class="blob-num js-line-number" data-line-number="254"></td>
        <td id="LC254" class="blob-code js-file-line">b.container),b.loadingSpan<span class="pl-k">=</span>$(<span class="pl-s1"><span class="pl-pds">&quot;</span>span<span class="pl-pds">&quot;</span></span>,<span class="pl-c1">null</span>,e.labelStyle,d),N(b,<span class="pl-s1"><span class="pl-pds">&quot;</span>redraw<span class="pl-pds">&quot;</span></span>,f);b.loadingSpan.innerHTML<span class="pl-k">=</span>a<span class="pl-k">||</span>c.<span class="pl-sc">lang</span>.loading;<span class="pl-k">if</span>(<span class="pl-k">!</span>b.loadingShown)B(d,{opacity<span class="pl-k">:</span><span class="pl-c1">0</span>,display<span class="pl-k">:</span><span class="pl-s1"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>}),jb(d,{opacity<span class="pl-k">:</span>e.<span class="pl-sc">style</span>.opacity},{duration<span class="pl-k">:</span>e.showDuration<span class="pl-k">||</span><span class="pl-c1">0</span>}),b.loadingShown<span class="pl-k">=!</span><span class="pl-c1">0</span>;f()},<span class="pl-en">hideLoading</span>:<span class="pl-st">function</span>(){<span class="pl-s">var</span> a<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-sc">options</span>,b<span class="pl-k">=</span><span class="pl-v">this</span>.loadingDiv;b<span class="pl-k">&amp;&amp;</span>jb(b,{opacity<span class="pl-k">:</span><span class="pl-c1">0</span>},{duration<span class="pl-k">:</span>a.loading.hideDuration<span class="pl-k">||</span><span class="pl-c1">100</span>,<span class="pl-en">complete</span>:<span class="pl-st">function</span>(){B(b,{display<span class="pl-k">:</span>P})}});<span class="pl-v">this</span>.loadingShown<span class="pl-k">=!</span><span class="pl-c1">1</span>}});r(Fa.<span class="pl-sc">prototype</span>,{<span class="pl-en">update</span>:<span class="pl-st">function</span>(<span class="pl-vpf">a</span>,<span class="pl-vpf">b</span>,<span class="pl-vpf">c</span>,<span class="pl-vpf">d</span>){<span class="pl-st">function</span> <span class="pl-en">e</span>(){f.applyOptions(a);<span class="pl-k">if</span>(da(a)<span class="pl-k">&amp;&amp;</span></td>
      </tr>
      <tr>
        <td id="L255" class="blob-num js-line-number" data-line-number="255"></td>
        <td id="LC255" class="blob-code js-file-line"><span class="pl-k">!</span>Ha(a))<span class="pl-s3">f</span>.<span class="pl-en">redraw</span><span class="pl-k">=</span><span class="pl-st">function</span>(){<span class="pl-k">if</span>(h)a<span class="pl-k">&amp;&amp;</span>a.marker<span class="pl-k">&amp;&amp;</span>a.marker.symbol<span class="pl-k">?</span>f.graphic<span class="pl-k">=</span>h.destroy()<span class="pl-k">:</span>h.attr(f.pointAttr[f.state<span class="pl-k">||</span><span class="pl-s1"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>]);<span class="pl-k">if</span>(a<span class="pl-k">&amp;&amp;</span>a.dataLabels<span class="pl-k">&amp;&amp;</span>f.dataLabel)f.dataLabel<span class="pl-k">=</span>f.dataLabel.destroy();f.redraw<span class="pl-k">=</span><span class="pl-c1">null</span>};i<span class="pl-k">=</span>f.<span class="pl-sc">index</span>;g.updateParallelArrays(f,i);k.<span class="pl-sc">data</span>[i]<span class="pl-k">=</span>f.<span class="pl-sc">options</span>;g.isDirty<span class="pl-k">=</span>g.isDirtyData<span class="pl-k">=!</span><span class="pl-c1">0</span>;<span class="pl-k">if</span>(<span class="pl-k">!</span>g.fixedBox<span class="pl-k">&amp;&amp;</span>g.hasCartesianSeries)j.isDirtyBox<span class="pl-k">=!</span><span class="pl-c1">0</span>;k.legendType<span class="pl-k">===</span><span class="pl-s1"><span class="pl-pds">&quot;</span>point<span class="pl-pds">&quot;</span></span><span class="pl-k">&amp;&amp;</span>j.legend.destroyItem(f);b<span class="pl-k">&amp;&amp;</span>j.redraw(c)}<span class="pl-s">var</span> f<span class="pl-k">=</span><span class="pl-v">this</span>,g<span class="pl-k">=</span>f.series,h<span class="pl-k">=</span>f.graphic,i,j<span class="pl-k">=</span>g.chart,k<span class="pl-k">=</span>g.<span class="pl-sc">options</span>,b<span class="pl-k">=</span>p(b,<span class="pl-k">!</span><span class="pl-c1">0</span>);d<span class="pl-k">===!</span><span class="pl-c1">1</span><span class="pl-k">?</span>e()<span class="pl-k">:</span>f.firePointEvent(<span class="pl-s1"><span class="pl-pds">&quot;</span>update<span class="pl-pds">&quot;</span></span>,</td>
      </tr>
      <tr>
        <td id="L256" class="blob-num js-line-number" data-line-number="256"></td>
        <td id="LC256" class="blob-code js-file-line">{options<span class="pl-k">:</span>a},e)},<span class="pl-en">remove</span>:<span class="pl-st">function</span>(<span class="pl-vpf">a</span>,<span class="pl-vpf">b</span>){<span class="pl-s">var</span> c<span class="pl-k">=</span><span class="pl-v">this</span>,d<span class="pl-k">=</span>c.series,e<span class="pl-k">=</span>d.points,f<span class="pl-k">=</span>d.chart,g,h<span class="pl-k">=</span>d.<span class="pl-sc">data</span>;Ra(b,f);a<span class="pl-k">=</span>p(a,<span class="pl-k">!</span><span class="pl-c1">0</span>);c.firePointEvent(<span class="pl-s1"><span class="pl-pds">&quot;</span>remove<span class="pl-pds">&quot;</span></span>,<span class="pl-c1">null</span>,<span class="pl-st">function</span>(){g<span class="pl-k">=</span>Ma(c,h);h.<span class="pl-sc">length</span><span class="pl-k">===</span>e.<span class="pl-sc">length</span><span class="pl-k">&amp;&amp;</span>e.<span class="pl-s3">splice</span>(g,<span class="pl-c1">1</span>);h.<span class="pl-s3">splice</span>(g,<span class="pl-c1">1</span>);d.<span class="pl-sc">options</span>.<span class="pl-sc">data</span>.<span class="pl-s3">splice</span>(g,<span class="pl-c1">1</span>);d.updateParallelArrays(c,<span class="pl-s1"><span class="pl-pds">&quot;</span>splice<span class="pl-pds">&quot;</span></span>,g,<span class="pl-c1">1</span>);c.destroy();d.isDirty<span class="pl-k">=!</span><span class="pl-c1">0</span>;d.isDirtyData<span class="pl-k">=!</span><span class="pl-c1">0</span>;a<span class="pl-k">&amp;&amp;</span>f.redraw()})}});r(O.<span class="pl-sc">prototype</span>,{<span class="pl-en">addPoint</span>:<span class="pl-st">function</span>(<span class="pl-vpf">a</span>,<span class="pl-vpf">b</span>,<span class="pl-vpf">c</span>,<span class="pl-vpf">d</span>){<span class="pl-s">var</span> e<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-sc">options</span>,f<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-sc">data</span>,g<span class="pl-k">=</span><span class="pl-v">this</span>.graph,h<span class="pl-k">=</span><span class="pl-v">this</span>.area,i<span class="pl-k">=</span><span class="pl-v">this</span>.chart,j<span class="pl-k">=</span><span class="pl-v">this</span>.xAxis<span class="pl-k">&amp;&amp;</span><span class="pl-v">this</span>.xAxis.names,k<span class="pl-k">=</span>g<span class="pl-k">&amp;&amp;</span>g.shift<span class="pl-k">||</span><span class="pl-c1">0</span>,l<span class="pl-k">=</span>e.<span class="pl-sc">data</span>,</td>
      </tr>
      <tr>
        <td id="L257" class="blob-num js-line-number" data-line-number="257"></td>
        <td id="LC257" class="blob-code js-file-line">n,m<span class="pl-k">=</span><span class="pl-v">this</span>.xData;Ra(d,i);c<span class="pl-k">&amp;&amp;</span>q([g,h,<span class="pl-v">this</span>.graphNeg,<span class="pl-v">this</span>.areaNeg],<span class="pl-st">function</span>(<span class="pl-vpf">a</span>){<span class="pl-k">if</span>(a)a.shift<span class="pl-k">=</span>k<span class="pl-k">+</span><span class="pl-c1">1</span>});<span class="pl-k">if</span>(h)h.isArea<span class="pl-k">=!</span><span class="pl-c1">0</span>;b<span class="pl-k">=</span>p(b,<span class="pl-k">!</span><span class="pl-c1">0</span>);d<span class="pl-k">=</span>{series<span class="pl-k">:</span><span class="pl-v">this</span>};<span class="pl-v">this</span>.pointClass.<span class="pl-sc">prototype</span>.applyOptions.<span class="pl-s3">apply</span>(d,[a]);g<span class="pl-k">=</span>d.<span class="pl-sc">x</span>;h<span class="pl-k">=</span>m.<span class="pl-sc">length</span>;<span class="pl-k">if</span>(<span class="pl-v">this</span>.requireSorting<span class="pl-k">&amp;&amp;</span>g<span class="pl-k">&lt;</span>m[h<span class="pl-k">-</span><span class="pl-c1">1</span>])<span class="pl-k">for</span>(n<span class="pl-k">=!</span><span class="pl-c1">0</span>;h<span class="pl-k">&amp;&amp;</span>m[h<span class="pl-k">-</span><span class="pl-c1">1</span>]<span class="pl-k">&gt;</span>g;)h<span class="pl-k">--</span>;<span class="pl-v">this</span>.updateParallelArrays(d,<span class="pl-s1"><span class="pl-pds">&quot;</span>splice<span class="pl-pds">&quot;</span></span>,h,<span class="pl-c1">0</span>,<span class="pl-c1">0</span>);<span class="pl-v">this</span>.updateParallelArrays(d,h);<span class="pl-k">if</span>(j<span class="pl-k">&amp;&amp;</span>d.<span class="pl-sc">name</span>)j[g]<span class="pl-k">=</span>d.<span class="pl-sc">name</span>;l.<span class="pl-s3">splice</span>(h,<span class="pl-c1">0</span>,a);n<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.<span class="pl-sc">data</span>.<span class="pl-s3">splice</span>(h,<span class="pl-c1">0</span>,<span class="pl-c1">null</span>),<span class="pl-v">this</span>.processData());e.legendType<span class="pl-k">===</span><span class="pl-s1"><span class="pl-pds">&quot;</span>point<span class="pl-pds">&quot;</span></span><span class="pl-k">&amp;&amp;</span><span class="pl-v">this</span>.generatePoints();c<span class="pl-k">&amp;&amp;</span>(f[<span class="pl-c1">0</span>]<span class="pl-k">&amp;&amp;</span>f[<span class="pl-c1">0</span>].remove<span class="pl-k">?</span>f[<span class="pl-c1">0</span>].<span class="pl-s3">remove</span>(<span class="pl-k">!</span><span class="pl-c1">1</span>)<span class="pl-k">:</span></td>
      </tr>
      <tr>
        <td id="L258" class="blob-num js-line-number" data-line-number="258"></td>
        <td id="LC258" class="blob-code js-file-line">(f.<span class="pl-s3">shift</span>(),<span class="pl-v">this</span>.updateParallelArrays(d,<span class="pl-s1"><span class="pl-pds">&quot;</span>shift<span class="pl-pds">&quot;</span></span>),l.<span class="pl-s3">shift</span>()));<span class="pl-v">this</span>.isDirtyData<span class="pl-k">=</span><span class="pl-v">this</span>.isDirty<span class="pl-k">=!</span><span class="pl-c1">0</span>;b<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.getAttribs(),i.redraw())},<span class="pl-en">remove</span>:<span class="pl-st">function</span>(<span class="pl-vpf">a</span>,<span class="pl-vpf">b</span>){<span class="pl-s">var</span> c<span class="pl-k">=</span><span class="pl-v">this</span>,d<span class="pl-k">=</span>c.chart,a<span class="pl-k">=</span>p(a,<span class="pl-k">!</span><span class="pl-c1">0</span>);<span class="pl-k">if</span>(<span class="pl-k">!</span>c.isRemoving)c.isRemoving<span class="pl-k">=!</span><span class="pl-c1">0</span>,I(c,<span class="pl-s1"><span class="pl-pds">&quot;</span>remove<span class="pl-pds">&quot;</span></span>,<span class="pl-c1">null</span>,<span class="pl-st">function</span>(){c.destroy();d.isDirtyLegend<span class="pl-k">=</span>d.isDirtyBox<span class="pl-k">=!</span><span class="pl-c1">0</span>;d.linkSeries();a<span class="pl-k">&amp;&amp;</span>d.redraw(b)});c.isRemoving<span class="pl-k">=!</span><span class="pl-c1">1</span>},<span class="pl-en">update</span>:<span class="pl-st">function</span>(<span class="pl-vpf">a</span>,<span class="pl-vpf">b</span>){<span class="pl-s">var</span> c<span class="pl-k">=</span><span class="pl-v">this</span>,d<span class="pl-k">=</span><span class="pl-v">this</span>.chart,e<span class="pl-k">=</span><span class="pl-v">this</span>.userOptions,f<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-sc">type</span>,g<span class="pl-k">=</span>H[f].<span class="pl-sc">prototype</span>,h<span class="pl-k">=</span>[<span class="pl-s1"><span class="pl-pds">&quot;</span>group<span class="pl-pds">&quot;</span></span>,<span class="pl-s1"><span class="pl-pds">&quot;</span>markerGroup<span class="pl-pds">&quot;</span></span>,<span class="pl-s1"><span class="pl-pds">&quot;</span>dataLabelsGroup<span class="pl-pds">&quot;</span></span>],i;q(h,<span class="pl-st">function</span>(<span class="pl-vpf">a</span>){h[a]<span class="pl-k">=</span>c[a];<span class="pl-k">delete</span> c[a]});</td>
      </tr>
      <tr>
        <td id="L259" class="blob-num js-line-number" data-line-number="259"></td>
        <td id="LC259" class="blob-code js-file-line">a<span class="pl-k">=</span>w(e,{animation<span class="pl-k">:!</span><span class="pl-c1">1</span>,index<span class="pl-k">:</span><span class="pl-v">this</span>.<span class="pl-sc">index</span>,pointStart<span class="pl-k">:</span><span class="pl-v">this</span>.xData[<span class="pl-c1">0</span>]},{data<span class="pl-k">:</span><span class="pl-v">this</span>.<span class="pl-sc">options</span>.<span class="pl-sc">data</span>},a);<span class="pl-v">this</span>.<span class="pl-s3">remove</span>(<span class="pl-k">!</span><span class="pl-c1">1</span>);<span class="pl-k">for</span>(i <span class="pl-k">in</span> g)g.hasOwnProperty(i)<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>[i]<span class="pl-k">=</span>u);r(<span class="pl-v">this</span>,H[a.<span class="pl-sc">type</span><span class="pl-k">||</span>f].<span class="pl-sc">prototype</span>);q(h,<span class="pl-st">function</span>(<span class="pl-vpf">a</span>){c[a]<span class="pl-k">=</span>h[a]});<span class="pl-v">this</span>.init(d,a);d.linkSeries();p(b,<span class="pl-k">!</span><span class="pl-c1">0</span>)<span class="pl-k">&amp;&amp;</span>d.redraw(<span class="pl-k">!</span><span class="pl-c1">1</span>)}});r(na.<span class="pl-sc">prototype</span>,{<span class="pl-en">update</span>:<span class="pl-st">function</span>(<span class="pl-vpf">a</span>,<span class="pl-vpf">b</span>){<span class="pl-s">var</span> c<span class="pl-k">=</span><span class="pl-v">this</span>.chart,a<span class="pl-k">=</span>c.<span class="pl-sc">options</span>[<span class="pl-v">this</span>.coll][<span class="pl-v">this</span>.<span class="pl-sc">options</span>.<span class="pl-sc">index</span>]<span class="pl-k">=</span>w(<span class="pl-v">this</span>.userOptions,a);<span class="pl-v">this</span>.destroy(<span class="pl-k">!</span><span class="pl-c1">0</span>);<span class="pl-v">this</span>._addedPlotLB<span class="pl-k">=</span>u;<span class="pl-v">this</span>.init(c,r(a,{events<span class="pl-k">:</span>u}));c.isDirtyBox<span class="pl-k">=!</span><span class="pl-c1">0</span>;p(b,<span class="pl-k">!</span><span class="pl-c1">0</span>)<span class="pl-k">&amp;&amp;</span>c.redraw()},<span class="pl-en">remove</span>:<span class="pl-st">function</span>(<span class="pl-vpf">a</span>){<span class="pl-k">for</span>(<span class="pl-s">var</span> b<span class="pl-k">=</span></td>
      </tr>
      <tr>
        <td id="L260" class="blob-num js-line-number" data-line-number="260"></td>
        <td id="LC260" class="blob-code js-file-line"><span class="pl-v">this</span>.chart,c<span class="pl-k">=</span><span class="pl-v">this</span>.coll,d<span class="pl-k">=</span><span class="pl-v">this</span>.series,e<span class="pl-k">=</span>d.<span class="pl-sc">length</span>;e<span class="pl-k">--</span>;)d[e]<span class="pl-k">&amp;&amp;</span>d[e].<span class="pl-s3">remove</span>(<span class="pl-k">!</span><span class="pl-c1">1</span>);la(b.axes,<span class="pl-v">this</span>);la(b[c],<span class="pl-v">this</span>);b.<span class="pl-sc">options</span>[c].<span class="pl-s3">splice</span>(<span class="pl-v">this</span>.<span class="pl-sc">options</span>.<span class="pl-sc">index</span>,<span class="pl-c1">1</span>);q(b[c],<span class="pl-st">function</span>(<span class="pl-vpf">a</span>,<span class="pl-vpf">b</span>){a.<span class="pl-sc">options</span>.<span class="pl-sc">index</span><span class="pl-k">=</span>b});<span class="pl-v">this</span>.destroy();b.isDirtyBox<span class="pl-k">=!</span><span class="pl-c1">0</span>;p(a,<span class="pl-k">!</span><span class="pl-c1">0</span>)<span class="pl-k">&amp;&amp;</span>b.redraw()},<span class="pl-en">setTitle</span>:<span class="pl-st">function</span>(<span class="pl-vpf">a</span>,<span class="pl-vpf">b</span>){<span class="pl-v">this</span>.update({title<span class="pl-k">:</span>a},b)},<span class="pl-en">setCategories</span>:<span class="pl-st">function</span>(<span class="pl-vpf">a</span>,<span class="pl-vpf">b</span>){<span class="pl-v">this</span>.update({categories<span class="pl-k">:</span>a},b)}});ia<span class="pl-k">=</span>ma(O);H.line<span class="pl-k">=</span>ia;ca.area<span class="pl-k">=</span>w(T,{threshold<span class="pl-k">:</span><span class="pl-c1">0</span>});<span class="pl-s">var</span> qa<span class="pl-k">=</span>ma(O,{type<span class="pl-k">:</span><span class="pl-s1"><span class="pl-pds">&quot;</span>area<span class="pl-pds">&quot;</span></span>,<span class="pl-en">getSegments</span>:<span class="pl-st">function</span>(){<span class="pl-s">var</span> a<span class="pl-k">=</span><span class="pl-v">this</span>,b<span class="pl-k">=</span>[],c<span class="pl-k">=</span>[],d<span class="pl-k">=</span>[],e<span class="pl-k">=</span><span class="pl-v">this</span>.xAxis,f<span class="pl-k">=</span><span class="pl-v">this</span>.yAxis,g<span class="pl-k">=</span>f.stacks[<span class="pl-v">this</span>.stackKey],</td>
      </tr>
      <tr>
        <td id="L261" class="blob-num js-line-number" data-line-number="261"></td>
        <td id="LC261" class="blob-code js-file-line">h<span class="pl-k">=</span>{},i,j,k<span class="pl-k">=</span><span class="pl-v">this</span>.points,l<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-sc">options</span>.connectNulls,n,m;<span class="pl-k">if</span>(<span class="pl-v">this</span>.<span class="pl-sc">options</span>.stacking<span class="pl-k">&amp;&amp;!</span><span class="pl-v">this</span>.cropped){<span class="pl-k">for</span>(n<span class="pl-k">=</span><span class="pl-c1">0</span>;n<span class="pl-k">&lt;</span>k.<span class="pl-sc">length</span>;n<span class="pl-k">++</span>)h[k[n].<span class="pl-sc">x</span>]<span class="pl-k">=</span>k[n];<span class="pl-k">for</span>(m <span class="pl-k">in</span> g)g[m].total<span class="pl-k">!==</span><span class="pl-c1">null</span><span class="pl-k">&amp;&amp;</span>d.<span class="pl-s3">push</span>(<span class="pl-k">+</span>m);d.<span class="pl-s3">sort</span>(<span class="pl-st">function</span>(<span class="pl-vpf">a</span>,<span class="pl-vpf">b</span>){<span class="pl-k">return</span> a<span class="pl-k">-</span>b});q(d,<span class="pl-st">function</span>(<span class="pl-vpf">b</span>){<span class="pl-s">var</span> d<span class="pl-k">=</span><span class="pl-c1">0</span>,k;<span class="pl-k">if</span>(<span class="pl-k">!</span>l<span class="pl-k">||</span>h[b]<span class="pl-k">&amp;&amp;</span>h[b].<span class="pl-sc">y</span><span class="pl-k">!==</span><span class="pl-c1">null</span>)<span class="pl-k">if</span>(h[b])c.<span class="pl-s3">push</span>(h[b]);<span class="pl-k">else</span>{<span class="pl-k">for</span>(n<span class="pl-k">=</span>a.<span class="pl-sc">index</span>;n<span class="pl-k">&lt;=</span>f.series.<span class="pl-sc">length</span>;n<span class="pl-k">++</span>)<span class="pl-k">if</span>(k<span class="pl-k">=</span>g[b].points[n<span class="pl-k">+</span><span class="pl-s1"><span class="pl-pds">&quot;</span>,<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>b]){d<span class="pl-k">=</span>k[<span class="pl-c1">1</span>];<span class="pl-k">break</span>}i<span class="pl-k">=</span>e.translate(b);j<span class="pl-k">=</span>f.toPixels(d,<span class="pl-k">!</span><span class="pl-c1">0</span>);c.<span class="pl-s3">push</span>({y<span class="pl-k">:</span><span class="pl-c1">null</span>,plotX<span class="pl-k">:</span>i,clientX<span class="pl-k">:</span>i,plotY<span class="pl-k">:</span>j,yBottom<span class="pl-k">:</span>j,onMouseOver<span class="pl-k">:</span>sa})}});c.<span class="pl-sc">length</span><span class="pl-k">&amp;&amp;</span>b.<span class="pl-s3">push</span>(c)}<span class="pl-k">else</span> O.<span class="pl-sc">prototype</span>.getSegments.<span class="pl-s3">call</span>(<span class="pl-v">this</span>),</td>
      </tr>
      <tr>
        <td id="L262" class="blob-num js-line-number" data-line-number="262"></td>
        <td id="LC262" class="blob-code js-file-line">b<span class="pl-k">=</span><span class="pl-v">this</span>.segments;<span class="pl-v">this</span>.segments<span class="pl-k">=</span>b},<span class="pl-en">getSegmentPath</span>:<span class="pl-st">function</span>(<span class="pl-vpf">a</span>){<span class="pl-s">var</span> b<span class="pl-k">=</span>O.<span class="pl-sc">prototype</span>.getSegmentPath.<span class="pl-s3">call</span>(<span class="pl-v">this</span>,a),c<span class="pl-k">=</span>[].<span class="pl-s3">concat</span>(b),d,e<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-sc">options</span>;d<span class="pl-k">=</span>b.<span class="pl-sc">length</span>;<span class="pl-s">var</span> f<span class="pl-k">=</span><span class="pl-v">this</span>.yAxis.getThreshold(e.threshold),g;d<span class="pl-k">===</span><span class="pl-c1">3</span><span class="pl-k">&amp;&amp;</span>c.<span class="pl-s3">push</span>(<span class="pl-s1"><span class="pl-pds">&quot;</span>L<span class="pl-pds">&quot;</span></span>,b[<span class="pl-c1">1</span>],b[<span class="pl-c1">2</span>]);<span class="pl-k">if</span>(e.stacking<span class="pl-k">&amp;&amp;!</span><span class="pl-v">this</span>.closedStacks)<span class="pl-k">for</span>(d<span class="pl-k">=</span>a.<span class="pl-sc">length</span><span class="pl-k">-</span><span class="pl-c1">1</span>;d<span class="pl-k">&gt;=</span><span class="pl-c1">0</span>;d<span class="pl-k">--</span>)g<span class="pl-k">=</span>p(a[d].yBottom,f),d<span class="pl-k">&lt;</span>a.<span class="pl-sc">length</span><span class="pl-k">-</span><span class="pl-c1">1</span><span class="pl-k">&amp;&amp;</span>e.step<span class="pl-k">&amp;&amp;</span>c.<span class="pl-s3">push</span>(a[d<span class="pl-k">+</span><span class="pl-c1">1</span>].plotX,g),c.<span class="pl-s3">push</span>(a[d].plotX,g);<span class="pl-k">else</span> <span class="pl-v">this</span>.closeSegment(c,a,f);<span class="pl-v">this</span>.areaPath<span class="pl-k">=</span><span class="pl-v">this</span>.areaPath.<span class="pl-s3">concat</span>(c);<span class="pl-k">return</span> b},<span class="pl-en">closeSegment</span>:<span class="pl-st">function</span>(<span class="pl-vpf">a</span>,<span class="pl-vpf">b</span>,<span class="pl-vpf">c</span>){a.<span class="pl-s3">push</span>(<span class="pl-s1"><span class="pl-pds">&quot;</span>L<span class="pl-pds">&quot;</span></span>,b[b.<span class="pl-sc">length</span><span class="pl-k">-</span><span class="pl-c1">1</span>].plotX,</td>
      </tr>
      <tr>
        <td id="L263" class="blob-num js-line-number" data-line-number="263"></td>
        <td id="LC263" class="blob-code js-file-line">c,<span class="pl-s1"><span class="pl-pds">&quot;</span>L<span class="pl-pds">&quot;</span></span>,b[<span class="pl-c1">0</span>].plotX,c)},<span class="pl-en">drawGraph</span>:<span class="pl-st">function</span>(){<span class="pl-v">this</span>.areaPath<span class="pl-k">=</span>[];O.<span class="pl-sc">prototype</span>.drawGraph.<span class="pl-s3">apply</span>(<span class="pl-v">this</span>);<span class="pl-s">var</span> a<span class="pl-k">=</span><span class="pl-v">this</span>,b<span class="pl-k">=</span><span class="pl-v">this</span>.areaPath,c<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-sc">options</span>,d<span class="pl-k">=</span>c.negativeColor,e<span class="pl-k">=</span>c.negativeFillColor,f<span class="pl-k">=</span>[[<span class="pl-s1"><span class="pl-pds">&quot;</span>area<span class="pl-pds">&quot;</span></span>,<span class="pl-v">this</span>.<span class="pl-sc">color</span>,c.fillColor]];(d<span class="pl-k">||</span>e)<span class="pl-k">&amp;&amp;</span>f.<span class="pl-s3">push</span>([<span class="pl-s1"><span class="pl-pds">&quot;</span>areaNeg<span class="pl-pds">&quot;</span></span>,d,e]);q(f,<span class="pl-st">function</span>(<span class="pl-vpf">d</span>){<span class="pl-s">var</span> e<span class="pl-k">=</span>d[<span class="pl-c1">0</span>],f<span class="pl-k">=</span>a[e];f<span class="pl-k">?</span>f.animate({d<span class="pl-k">:</span>b})<span class="pl-k">:</span>a[e]<span class="pl-k">=</span>a.chart.renderer.path(b).attr({fill<span class="pl-k">:</span>p(d[<span class="pl-c1">2</span>],ya(d[<span class="pl-c1">1</span>]).setOpacity(p(c.fillOpacity,<span class="pl-c1">0.75</span>)).get()),zIndex<span class="pl-k">:</span><span class="pl-c1">0</span>}).<span class="pl-s3">add</span>(a.group)})},drawLegendSymbol<span class="pl-k">:</span>M.drawRectangle});H.area<span class="pl-k">=</span>qa;ca.spline<span class="pl-k">=</span>w(T);ia<span class="pl-k">=</span>ma(O,{type<span class="pl-k">:</span><span class="pl-s1"><span class="pl-pds">&quot;</span>spline<span class="pl-pds">&quot;</span></span>,</td>
      </tr>
      <tr>
        <td id="L264" class="blob-num js-line-number" data-line-number="264"></td>
        <td id="LC264" class="blob-code js-file-line"><span class="pl-en">getPointSpline</span>:<span class="pl-st">function</span>(<span class="pl-vpf">a</span>,<span class="pl-vpf">b</span>,<span class="pl-vpf">c</span>){<span class="pl-s">var</span> d<span class="pl-k">=</span>b.plotX,e<span class="pl-k">=</span>b.plotY,f<span class="pl-k">=</span>a[c<span class="pl-k">-</span><span class="pl-c1">1</span>],g<span class="pl-k">=</span>a[c<span class="pl-k">+</span><span class="pl-c1">1</span>],h,i,j,k;<span class="pl-k">if</span>(f<span class="pl-k">&amp;&amp;</span>g){a<span class="pl-k">=</span>f.plotY;j<span class="pl-k">=</span>g.plotX;<span class="pl-s">var</span> g<span class="pl-k">=</span>g.plotY,l;h<span class="pl-k">=</span>(<span class="pl-c1">1.5</span><span class="pl-k">*</span>d<span class="pl-k">+</span>f.plotX)/<span class="pl-c1">2.5</span>;i<span class="pl-k">=</span>(<span class="pl-c1">1.5</span><span class="pl-k">*</span>e<span class="pl-k">+</span>a)/<span class="pl-c1">2.5</span>;j<span class="pl-k">=</span>(<span class="pl-c1">1.5</span><span class="pl-k">*</span>d<span class="pl-k">+</span>j)/<span class="pl-c1">2.5</span>;k<span class="pl-k">=</span>(<span class="pl-c1">1.5</span><span class="pl-k">*</span>e<span class="pl-k">+</span>g)/<span class="pl-c1">2.5</span>;l<span class="pl-k">=</span>(k<span class="pl-k">-</span>i)<span class="pl-k">*</span>(j<span class="pl-k">-</span>d)/(j<span class="pl-k">-</span>h)<span class="pl-k">+</span>e<span class="pl-k">-</span>k;i<span class="pl-k">+=</span>l;k<span class="pl-k">+=</span>l;i<span class="pl-k">&gt;</span>a<span class="pl-k">&amp;&amp;</span>i<span class="pl-k">&gt;</span>e<span class="pl-k">?</span>(i<span class="pl-k">=</span>t(a,e),k<span class="pl-k">=</span><span class="pl-c1">2</span><span class="pl-k">*</span>e<span class="pl-k">-</span>i)<span class="pl-k">:</span>i<span class="pl-k">&lt;</span>a<span class="pl-k">&amp;&amp;</span>i<span class="pl-k">&lt;</span>e<span class="pl-k">&amp;&amp;</span>(i<span class="pl-k">=</span>L(a,e),k<span class="pl-k">=</span><span class="pl-c1">2</span><span class="pl-k">*</span>e<span class="pl-k">-</span>i);k<span class="pl-k">&gt;</span>g<span class="pl-k">&amp;&amp;</span>k<span class="pl-k">&gt;</span>e<span class="pl-k">?</span>(k<span class="pl-k">=</span>t(g,e),i<span class="pl-k">=</span><span class="pl-c1">2</span><span class="pl-k">*</span>e<span class="pl-k">-</span>k)<span class="pl-k">:</span>k<span class="pl-k">&lt;</span>g<span class="pl-k">&amp;&amp;</span>k<span class="pl-k">&lt;</span>e<span class="pl-k">&amp;&amp;</span>(k<span class="pl-k">=</span>L(g,e),i<span class="pl-k">=</span><span class="pl-c1">2</span><span class="pl-k">*</span>e<span class="pl-k">-</span>k);b.rightContX<span class="pl-k">=</span>j;b.rightContY<span class="pl-k">=</span>k}c<span class="pl-k">?</span>(b<span class="pl-k">=</span>[<span class="pl-s1"><span class="pl-pds">&quot;</span>C<span class="pl-pds">&quot;</span></span>,f.rightContX<span class="pl-k">||</span>f.plotX,f.rightContY<span class="pl-k">||</span>f.plotY,h<span class="pl-k">||</span>d,i<span class="pl-k">||</span>e,d,e],f.rightContX<span class="pl-k">=</span>f.rightContY<span class="pl-k">=</span><span class="pl-c1">null</span>)<span class="pl-k">:</span>b<span class="pl-k">=</span>[<span class="pl-s1"><span class="pl-pds">&quot;</span>M<span class="pl-pds">&quot;</span></span>,d,e];<span class="pl-k">return</span> b}});H.spline<span class="pl-k">=</span></td>
      </tr>
      <tr>
        <td id="L265" class="blob-num js-line-number" data-line-number="265"></td>
        <td id="LC265" class="blob-code js-file-line">ia;ca.areaspline<span class="pl-k">=</span>w(ca.area);qa<span class="pl-k">=</span>qa.<span class="pl-sc">prototype</span>;ia<span class="pl-k">=</span>ma(ia,{type<span class="pl-k">:</span><span class="pl-s1"><span class="pl-pds">&quot;</span>areaspline<span class="pl-pds">&quot;</span></span>,closedStacks<span class="pl-k">:!</span><span class="pl-c1">0</span>,getSegmentPath<span class="pl-k">:</span>qa.getSegmentPath,closeSegment<span class="pl-k">:</span>qa.closeSegment,drawGraph<span class="pl-k">:</span>qa.drawGraph,drawLegendSymbol<span class="pl-k">:</span>M.drawRectangle});H.areaspline<span class="pl-k">=</span>ia;ca.column<span class="pl-k">=</span>w(T,{borderColor<span class="pl-k">:</span><span class="pl-s1"><span class="pl-pds">&quot;</span>#FFFFFF<span class="pl-pds">&quot;</span></span>,borderRadius<span class="pl-k">:</span><span class="pl-c1">0</span>,groupPadding<span class="pl-k">:</span><span class="pl-c1">0.2</span>,marker<span class="pl-k">:</span><span class="pl-c1">null</span>,pointPadding<span class="pl-k">:</span><span class="pl-c1">0.1</span>,minPointLength<span class="pl-k">:</span><span class="pl-c1">0</span>,cropThreshold<span class="pl-k">:</span><span class="pl-c1">50</span>,pointRange<span class="pl-k">:</span><span class="pl-c1">null</span>,states<span class="pl-k">:</span>{hover<span class="pl-k">:</span>{brightness<span class="pl-k">:</span><span class="pl-c1">0.1</span>,shadow<span class="pl-k">:!</span><span class="pl-c1">1</span>,halo<span class="pl-k">:!</span><span class="pl-c1">1</span>},select<span class="pl-k">:</span>{color<span class="pl-k">:</span><span class="pl-s1"><span class="pl-pds">&quot;</span>#C0C0C0<span class="pl-pds">&quot;</span></span>,borderColor<span class="pl-k">:</span><span class="pl-s1"><span class="pl-pds">&quot;</span>#000000<span class="pl-pds">&quot;</span></span>,shadow<span class="pl-k">:!</span><span class="pl-c1">1</span>}},dataLabels<span class="pl-k">:</span>{align<span class="pl-k">:</span><span class="pl-c1">null</span>,</td>
      </tr>
      <tr>
        <td id="L266" class="blob-num js-line-number" data-line-number="266"></td>
        <td id="LC266" class="blob-code js-file-line">verticalAlign<span class="pl-k">:</span><span class="pl-c1">null</span>,y<span class="pl-k">:</span><span class="pl-c1">null</span>},stickyTracking<span class="pl-k">:!</span><span class="pl-c1">1</span>,tooltip<span class="pl-k">:</span>{distance<span class="pl-k">:</span><span class="pl-c1">6</span>},threshold<span class="pl-k">:</span><span class="pl-c1">0</span>});ia<span class="pl-k">=</span>ma(O,{type<span class="pl-k">:</span><span class="pl-s1"><span class="pl-pds">&quot;</span>column<span class="pl-pds">&quot;</span></span>,pointAttrToOptions<span class="pl-k">:</span>{stroke<span class="pl-k">:</span><span class="pl-s1"><span class="pl-pds">&quot;</span>borderColor<span class="pl-pds">&quot;</span></span>,fill<span class="pl-k">:</span><span class="pl-s1"><span class="pl-pds">&quot;</span>color<span class="pl-pds">&quot;</span></span>,r<span class="pl-k">:</span><span class="pl-s1"><span class="pl-pds">&quot;</span>borderRadius<span class="pl-pds">&quot;</span></span>},cropShoulder<span class="pl-k">:</span><span class="pl-c1">0</span>,trackerGroups<span class="pl-k">:</span>[<span class="pl-s1"><span class="pl-pds">&quot;</span>group<span class="pl-pds">&quot;</span></span>,<span class="pl-s1"><span class="pl-pds">&quot;</span>dataLabelsGroup<span class="pl-pds">&quot;</span></span>],negStacks<span class="pl-k">:!</span><span class="pl-c1">0</span>,<span class="pl-en">init</span>:<span class="pl-st">function</span>(){O.<span class="pl-sc">prototype</span>.init.<span class="pl-s3">apply</span>(<span class="pl-v">this</span>,arguments);<span class="pl-s">var</span> a<span class="pl-k">=</span><span class="pl-v">this</span>,b<span class="pl-k">=</span>a.chart;b.hasRendered<span class="pl-k">&amp;&amp;</span>q(b.series,<span class="pl-st">function</span>(<span class="pl-vpf">b</span>){<span class="pl-k">if</span>(b.<span class="pl-sc">type</span><span class="pl-k">===</span>a.<span class="pl-sc">type</span>)b.isDirty<span class="pl-k">=!</span><span class="pl-c1">0</span>})},<span class="pl-en">getColumnMetrics</span>:<span class="pl-st">function</span>(){<span class="pl-s">var</span> a<span class="pl-k">=</span><span class="pl-v">this</span>,b<span class="pl-k">=</span>a.<span class="pl-sc">options</span>,c<span class="pl-k">=</span>a.xAxis,d<span class="pl-k">=</span>a.yAxis,e<span class="pl-k">=</span>c.reversed,f,g<span class="pl-k">=</span>{},h,i<span class="pl-k">=</span><span class="pl-c1">0</span>;b.grouping<span class="pl-k">===</span></td>
      </tr>
      <tr>
        <td id="L267" class="blob-num js-line-number" data-line-number="267"></td>
        <td id="LC267" class="blob-code js-file-line"><span class="pl-k">!</span><span class="pl-c1">1</span><span class="pl-k">?</span>i<span class="pl-k">=</span><span class="pl-c1">1</span><span class="pl-k">:</span>q(a.chart.series,<span class="pl-st">function</span>(<span class="pl-vpf">b</span>){<span class="pl-s">var</span> c<span class="pl-k">=</span>b.<span class="pl-sc">options</span>,e<span class="pl-k">=</span>b.yAxis;<span class="pl-k">if</span>(b.<span class="pl-sc">type</span><span class="pl-k">===</span>a.<span class="pl-sc">type</span><span class="pl-k">&amp;&amp;</span>b.visible<span class="pl-k">&amp;&amp;</span>d.len<span class="pl-k">===</span>e.len<span class="pl-k">&amp;&amp;</span>d.pos<span class="pl-k">===</span>e.pos)c.stacking<span class="pl-k">?</span>(f<span class="pl-k">=</span>b.stackKey,g[f]<span class="pl-k">===</span>u<span class="pl-k">&amp;&amp;</span>(g[f]<span class="pl-k">=</span>i<span class="pl-k">++</span>),h<span class="pl-k">=</span>g[f])<span class="pl-k">:</span>c.grouping<span class="pl-k">!==!</span><span class="pl-c1">1</span><span class="pl-k">&amp;&amp;</span>(h<span class="pl-k">=</span>i<span class="pl-k">++</span>),b.columnIndex<span class="pl-k">=</span>h});<span class="pl-s">var</span> c<span class="pl-k">=</span>L(Q(c.transA)<span class="pl-k">*</span>(c.ordinalSlope<span class="pl-k">||</span>b.pointRange<span class="pl-k">||</span>c.closestPointRange<span class="pl-k">||</span>c.tickInterval<span class="pl-k">||</span><span class="pl-c1">1</span>),c.len),j<span class="pl-k">=</span>c<span class="pl-k">*</span>b.groupPadding,k<span class="pl-k">=</span>(c<span class="pl-k">-</span><span class="pl-c1">2</span><span class="pl-k">*</span>j)/i,l<span class="pl-k">=</span>b.pointWidth,b<span class="pl-k">=</span>s(l)<span class="pl-k">?</span>(k<span class="pl-k">-</span>l)/<span class="pl-c1">2</span><span class="pl-k">:</span>k<span class="pl-k">*</span>b.pointPadding,l<span class="pl-k">=</span>p(l,k<span class="pl-k">-</span><span class="pl-c1">2</span><span class="pl-k">*</span>b);<span class="pl-k">return</span> a.columnMetrics<span class="pl-k">=</span>{width<span class="pl-k">:</span>l,offset<span class="pl-k">:</span>b<span class="pl-k">+</span>(j<span class="pl-k">+</span>((e<span class="pl-k">?</span>i<span class="pl-k">-</span>(a.columnIndex<span class="pl-k">||</span><span class="pl-c1">0</span>)<span class="pl-k">:</span>a.columnIndex)<span class="pl-k">||</span><span class="pl-c1">0</span>)<span class="pl-k">*</span>k<span class="pl-k">-</span>c/<span class="pl-c1">2</span>)<span class="pl-k">*</span></td>
      </tr>
      <tr>
        <td id="L268" class="blob-num js-line-number" data-line-number="268"></td>
        <td id="LC268" class="blob-code js-file-line">(e<span class="pl-k">?-</span><span class="pl-c1">1</span><span class="pl-k">:</span><span class="pl-c1">1</span>)}},<span class="pl-en">translate</span>:<span class="pl-st">function</span>(){<span class="pl-s">var</span> a<span class="pl-k">=</span><span class="pl-v">this</span>,b<span class="pl-k">=</span>a.chart,c<span class="pl-k">=</span>a.<span class="pl-sc">options</span>,d<span class="pl-k">=</span>a.<span class="pl-sc">borderWidth</span><span class="pl-k">=</span>p(c.<span class="pl-sc">borderWidth</span>,a.activePointCount<span class="pl-k">&gt;</span><span class="pl-c1">0.5</span><span class="pl-k">*</span>a.xAxis.len<span class="pl-k">?</span><span class="pl-c1">0</span><span class="pl-k">:</span><span class="pl-c1">1</span>),e<span class="pl-k">=</span>a.yAxis,f<span class="pl-k">=</span>a.translatedThreshold<span class="pl-k">=</span>e.getThreshold(c.threshold),g<span class="pl-k">=</span>p(c.minPointLength,<span class="pl-c1">5</span>),h<span class="pl-k">=</span>a.getColumnMetrics(),i<span class="pl-k">=</span>h.<span class="pl-sc">width</span>,j<span class="pl-k">=</span>a.barW<span class="pl-k">=</span>t(i,<span class="pl-c1">1</span><span class="pl-k">+</span><span class="pl-c1">2</span><span class="pl-k">*</span>d),k<span class="pl-k">=</span>a.pointXOffset<span class="pl-k">=</span>h.offset,l<span class="pl-k">=-</span>(d<span class="pl-k">%</span><span class="pl-c1">2</span><span class="pl-k">?</span><span class="pl-c1">0.5</span><span class="pl-k">:</span><span class="pl-c1">0</span>),n<span class="pl-k">=</span>d<span class="pl-k">%</span><span class="pl-c1">2</span><span class="pl-k">?</span><span class="pl-c1">0.5</span><span class="pl-k">:</span><span class="pl-c1">1</span>;b.renderer.isVML<span class="pl-k">&amp;&amp;</span>b.inverted<span class="pl-k">&amp;&amp;</span>(n<span class="pl-k">+=</span><span class="pl-c1">1</span>);c.pointPadding<span class="pl-k">&amp;&amp;</span>(j<span class="pl-k">=</span>La(j));O.<span class="pl-sc">prototype</span>.translate.<span class="pl-s3">apply</span>(a);q(a.points,<span class="pl-st">function</span>(<span class="pl-vpf">c</span>){<span class="pl-s">var</span> d<span class="pl-k">=</span>p(c.yBottom,f),h<span class="pl-k">=</span>L(t(<span class="pl-k">-</span><span class="pl-c1">999</span><span class="pl-k">-</span>d,c.plotY),e.len<span class="pl-k">+</span><span class="pl-c1">999</span><span class="pl-k">+</span>d),</td>
      </tr>
      <tr>
        <td id="L269" class="blob-num js-line-number" data-line-number="269"></td>
        <td id="LC269" class="blob-code js-file-line">q<span class="pl-k">=</span>c.plotX<span class="pl-k">+</span>k,r<span class="pl-k">=</span>j,s<span class="pl-k">=</span>L(h,d),u;u<span class="pl-k">=</span>t(h,d)<span class="pl-k">-</span>s;Q(u)<span class="pl-k">&lt;</span>g<span class="pl-k">&amp;&amp;</span>g<span class="pl-k">&amp;&amp;</span>(u<span class="pl-k">=</span>g,s<span class="pl-k">=</span>v(Q(s<span class="pl-k">-</span>f)<span class="pl-k">&gt;</span>g<span class="pl-k">?</span>d<span class="pl-k">-</span>g<span class="pl-k">:</span>f<span class="pl-k">-</span>(e.translate(c.<span class="pl-sc">y</span>,<span class="pl-c1">0</span>,<span class="pl-c1">1</span>,<span class="pl-c1">0</span>,<span class="pl-c1">1</span>)<span class="pl-k">&lt;=</span>f<span class="pl-k">?</span>g<span class="pl-k">:</span><span class="pl-c1">0</span>)));c.barX<span class="pl-k">=</span>q;c.pointWidth<span class="pl-k">=</span>i;c.tooltipPos<span class="pl-k">=</span>b.inverted<span class="pl-k">?</span>[e.len<span class="pl-k">-</span>h,a.xAxis.len<span class="pl-k">-</span>q<span class="pl-k">-</span>r/<span class="pl-c1">2</span>]<span class="pl-k">:</span>[q<span class="pl-k">+</span>r/<span class="pl-c1">2</span>,h<span class="pl-k">+</span>e.pos<span class="pl-k">-</span>b.plotTop];r<span class="pl-k">=</span>v(q<span class="pl-k">+</span>r)<span class="pl-k">+</span>l;q<span class="pl-k">=</span>v(q)<span class="pl-k">+</span>l;r<span class="pl-k">-=</span>q;d<span class="pl-k">=</span>Q(s)<span class="pl-k">&lt;</span><span class="pl-c1">0.5</span>;u<span class="pl-k">=</span>v(s<span class="pl-k">+</span>u)<span class="pl-k">+</span>n;s<span class="pl-k">=</span>v(s)<span class="pl-k">+</span>n;u<span class="pl-k">-=</span>s;d<span class="pl-k">&amp;&amp;</span>(s<span class="pl-k">-=</span><span class="pl-c1">1</span>,u<span class="pl-k">+=</span><span class="pl-c1">1</span>);c.shapeType<span class="pl-k">=</span><span class="pl-s1"><span class="pl-pds">&quot;</span>rect<span class="pl-pds">&quot;</span></span>;c.shapeArgs<span class="pl-k">=</span>{x<span class="pl-k">:</span>q,y<span class="pl-k">:</span>s,width<span class="pl-k">:</span>r,height<span class="pl-k">:</span>u}})},getSymbol<span class="pl-k">:</span>sa,drawLegendSymbol<span class="pl-k">:</span>M.drawRectangle,drawGraph<span class="pl-k">:</span>sa,<span class="pl-en">drawPoints</span>:<span class="pl-st">function</span>(){<span class="pl-s">var</span> a<span class="pl-k">=</span><span class="pl-v">this</span>,b<span class="pl-k">=</span><span class="pl-v">this</span>.chart,c<span class="pl-k">=</span>a.<span class="pl-sc">options</span>,d<span class="pl-k">=</span>b.renderer,e<span class="pl-k">=</span>c.animationLimit<span class="pl-k">||</span><span class="pl-c1">250</span>,</td>
      </tr>
      <tr>
        <td id="L270" class="blob-num js-line-number" data-line-number="270"></td>
        <td id="LC270" class="blob-code js-file-line">f,g;q(a.points,<span class="pl-st">function</span>(<span class="pl-vpf">h</span>){<span class="pl-s">var</span> i<span class="pl-k">=</span>h.plotY,j<span class="pl-k">=</span>h.graphic;<span class="pl-k">if</span>(i<span class="pl-k">!==</span>u<span class="pl-k">&amp;&amp;!</span><span class="pl-s3">isNaN</span>(i)<span class="pl-k">&amp;&amp;</span>h.<span class="pl-sc">y</span><span class="pl-k">!==</span><span class="pl-c1">null</span>)f<span class="pl-k">=</span>h.shapeArgs,i<span class="pl-k">=</span>s(a.<span class="pl-sc">borderWidth</span>)<span class="pl-k">?</span>{<span class="pl-s1"><span class="pl-pds">&quot;</span>stroke-width<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span>a.<span class="pl-sc">borderWidth</span>}<span class="pl-k">:</span>{},g<span class="pl-k">=</span>h.pointAttr[h.<span class="pl-sc">selected</span><span class="pl-k">?</span><span class="pl-s1"><span class="pl-pds">&quot;</span>select<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s1"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>]<span class="pl-k">||</span>a.pointAttr[<span class="pl-s1"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>],j<span class="pl-k">?</span>(bb(j),j.attr(i)[b.pointCount<span class="pl-k">&lt;</span>e<span class="pl-k">?</span><span class="pl-s1"><span class="pl-pds">&quot;</span>animate<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s1"><span class="pl-pds">&quot;</span>attr<span class="pl-pds">&quot;</span></span>](w(f)))<span class="pl-k">:</span>h.graphic<span class="pl-k">=</span>d[h.shapeType](f).attr(g).attr(i).<span class="pl-s3">add</span>(a.group).shadow(c.shadow,<span class="pl-c1">null</span>,c.stacking<span class="pl-k">&amp;&amp;!</span>c.borderRadius);<span class="pl-k">else</span> <span class="pl-k">if</span>(j)h.graphic<span class="pl-k">=</span>j.destroy()})},<span class="pl-en">animate</span>:<span class="pl-st">function</span>(<span class="pl-vpf">a</span>){<span class="pl-s">var</span> b<span class="pl-k">=</span><span class="pl-v">this</span>.yAxis,c<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-sc">options</span>,d<span class="pl-k">=</span><span class="pl-v">this</span>.chart.inverted,e<span class="pl-k">=</span>{};<span class="pl-k">if</span>(ba)a<span class="pl-k">?</span>(e.scaleY<span class="pl-k">=</span></td>
      </tr>
      <tr>
        <td id="L271" class="blob-num js-line-number" data-line-number="271"></td>
        <td id="LC271" class="blob-code js-file-line"><span class="pl-c1">0.001</span>,a<span class="pl-k">=</span>L(b.pos<span class="pl-k">+</span>b.len,t(b.pos,b.toPixels(c.threshold))),d<span class="pl-k">?</span>e.translateX<span class="pl-k">=</span>a<span class="pl-k">-</span>b.len<span class="pl-k">:</span>e.translateY<span class="pl-k">=</span>a,<span class="pl-v">this</span>.group.attr(e))<span class="pl-k">:</span>(e.scaleY<span class="pl-k">=</span><span class="pl-c1">1</span>,e[d<span class="pl-k">?</span><span class="pl-s1"><span class="pl-pds">&quot;</span>translateX<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s1"><span class="pl-pds">&quot;</span>translateY<span class="pl-pds">&quot;</span></span>]<span class="pl-k">=</span>b.pos,<span class="pl-v">this</span>.group.animate(e,<span class="pl-v">this</span>.<span class="pl-sc">options</span>.animation),<span class="pl-v">this</span>.animate<span class="pl-k">=</span><span class="pl-c1">null</span>)},<span class="pl-en">remove</span>:<span class="pl-st">function</span>(){<span class="pl-s">var</span> a<span class="pl-k">=</span><span class="pl-v">this</span>,b<span class="pl-k">=</span>a.chart;b.hasRendered<span class="pl-k">&amp;&amp;</span>q(b.series,<span class="pl-st">function</span>(<span class="pl-vpf">b</span>){<span class="pl-k">if</span>(b.<span class="pl-sc">type</span><span class="pl-k">===</span>a.<span class="pl-sc">type</span>)b.isDirty<span class="pl-k">=!</span><span class="pl-c1">0</span>});O.<span class="pl-sc">prototype</span>.remove.<span class="pl-s3">apply</span>(a,arguments)}});H.column<span class="pl-k">=</span>ia;ca.bar<span class="pl-k">=</span>w(ca.column);qa<span class="pl-k">=</span>ma(ia,{type<span class="pl-k">:</span><span class="pl-s1"><span class="pl-pds">&quot;</span>bar<span class="pl-pds">&quot;</span></span>,inverted<span class="pl-k">:!</span><span class="pl-c1">0</span>});H.bar<span class="pl-k">=</span>qa;ca.scatter<span class="pl-k">=</span>w(T,{lineWidth<span class="pl-k">:</span><span class="pl-c1">0</span>,tooltip<span class="pl-k">:</span>{headerFormat<span class="pl-k">:</span><span class="pl-s1"><span class="pl-pds">&#39;</span>&lt;span style=&quot;color:{series.color}&quot;&gt;●&lt;/span&gt; &lt;span style=&quot;font-size: 10px;&quot;&gt; {series.name}&lt;/span&gt;&lt;br/&gt;<span class="pl-pds">&#39;</span></span>,</td>
      </tr>
      <tr>
        <td id="L272" class="blob-num js-line-number" data-line-number="272"></td>
        <td id="LC272" class="blob-code js-file-line">pointFormat<span class="pl-k">:</span><span class="pl-s1"><span class="pl-pds">&quot;</span>x: &lt;b&gt;{point.x}&lt;/b&gt;&lt;br/&gt;y: &lt;b&gt;{point.y}&lt;/b&gt;&lt;br/&gt;<span class="pl-pds">&quot;</span></span>},stickyTracking<span class="pl-k">:!</span><span class="pl-c1">1</span>});qa<span class="pl-k">=</span>ma(O,{type<span class="pl-k">:</span><span class="pl-s1"><span class="pl-pds">&quot;</span>scatter<span class="pl-pds">&quot;</span></span>,sorted<span class="pl-k">:!</span><span class="pl-c1">1</span>,requireSorting<span class="pl-k">:!</span><span class="pl-c1">1</span>,noSharedTooltip<span class="pl-k">:!</span><span class="pl-c1">0</span>,trackerGroups<span class="pl-k">:</span>[<span class="pl-s1"><span class="pl-pds">&quot;</span>markerGroup<span class="pl-pds">&quot;</span></span>,<span class="pl-s1"><span class="pl-pds">&quot;</span>dataLabelsGroup<span class="pl-pds">&quot;</span></span>],takeOrdinalPosition<span class="pl-k">:!</span><span class="pl-c1">1</span>,singularTooltips<span class="pl-k">:!</span><span class="pl-c1">0</span>,<span class="pl-en">drawGraph</span>:<span class="pl-st">function</span>(){<span class="pl-v">this</span>.<span class="pl-sc">options</span>.lineWidth<span class="pl-k">&amp;&amp;</span>O.<span class="pl-sc">prototype</span>.drawGraph.<span class="pl-s3">call</span>(<span class="pl-v">this</span>)}});H.scatter<span class="pl-k">=</span>qa;ca.pie<span class="pl-k">=</span>w(T,{borderColor<span class="pl-k">:</span><span class="pl-s1"><span class="pl-pds">&quot;</span>#FFFFFF<span class="pl-pds">&quot;</span></span>,borderWidth<span class="pl-k">:</span><span class="pl-c1">1</span>,center<span class="pl-k">:</span>[<span class="pl-c1">null</span>,<span class="pl-c1">null</span>],clip<span class="pl-k">:!</span><span class="pl-c1">1</span>,colorByPoint<span class="pl-k">:!</span><span class="pl-c1">0</span>,dataLabels<span class="pl-k">:</span>{distance<span class="pl-k">:</span><span class="pl-c1">30</span>,enabled<span class="pl-k">:!</span><span class="pl-c1">0</span>,<span class="pl-en">formatter</span>:<span class="pl-st">function</span>(){<span class="pl-k">return</span> <span class="pl-v">this</span>.point.<span class="pl-sc">name</span>}},</td>
      </tr>
      <tr>
        <td id="L273" class="blob-num js-line-number" data-line-number="273"></td>
        <td id="LC273" class="blob-code js-file-line">ignoreHiddenPoint<span class="pl-k">:!</span><span class="pl-c1">0</span>,legendType<span class="pl-k">:</span><span class="pl-s1"><span class="pl-pds">&quot;</span>point<span class="pl-pds">&quot;</span></span>,marker<span class="pl-k">:</span><span class="pl-c1">null</span>,size<span class="pl-k">:</span><span class="pl-c1">null</span>,showInLegend<span class="pl-k">:!</span><span class="pl-c1">1</span>,slicedOffset<span class="pl-k">:</span><span class="pl-c1">10</span>,states<span class="pl-k">:</span>{hover<span class="pl-k">:</span>{brightness<span class="pl-k">:</span><span class="pl-c1">0.1</span>,shadow<span class="pl-k">:!</span><span class="pl-c1">1</span>}},stickyTracking<span class="pl-k">:!</span><span class="pl-c1">1</span>,tooltip<span class="pl-k">:</span>{followPointer<span class="pl-k">:!</span><span class="pl-c1">0</span>}});T<span class="pl-k">=</span>{type<span class="pl-k">:</span><span class="pl-s1"><span class="pl-pds">&quot;</span>pie<span class="pl-pds">&quot;</span></span>,isCartesian<span class="pl-k">:!</span><span class="pl-c1">1</span>,pointClass<span class="pl-k">:</span>ma(Fa,{<span class="pl-en">init</span>:<span class="pl-st">function</span>(){Fa.<span class="pl-sc">prototype</span>.init.<span class="pl-s3">apply</span>(<span class="pl-v">this</span>,arguments);<span class="pl-s">var</span> a<span class="pl-k">=</span><span class="pl-v">this</span>,b;<span class="pl-k">if</span>(a.<span class="pl-sc">y</span><span class="pl-k">&lt;</span><span class="pl-c1">0</span>)a.<span class="pl-sc">y</span><span class="pl-k">=</span><span class="pl-c1">null</span>;r(a,{visible<span class="pl-k">:</span>a.visible<span class="pl-k">!==!</span><span class="pl-c1">1</span>,name<span class="pl-k">:</span>p(a.<span class="pl-sc">name</span>,<span class="pl-s1"><span class="pl-pds">&quot;</span>Slice<span class="pl-pds">&quot;</span></span>)});<span class="pl-en">b</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">b</span>){a.<span class="pl-s3">slice</span>(b.<span class="pl-sc">type</span><span class="pl-k">===</span><span class="pl-s1"><span class="pl-pds">&quot;</span>select<span class="pl-pds">&quot;</span></span>)};N(a,<span class="pl-s1"><span class="pl-pds">&quot;</span>select<span class="pl-pds">&quot;</span></span>,b);N(a,<span class="pl-s1"><span class="pl-pds">&quot;</span>unselect<span class="pl-pds">&quot;</span></span>,b);<span class="pl-k">return</span> a},<span class="pl-en">setVisible</span>:<span class="pl-st">function</span>(<span class="pl-vpf">a</span>){<span class="pl-s">var</span> b<span class="pl-k">=</span><span class="pl-v">this</span>,c<span class="pl-k">=</span>b.series,</td>
      </tr>
      <tr>
        <td id="L274" class="blob-num js-line-number" data-line-number="274"></td>
        <td id="LC274" class="blob-code js-file-line">d<span class="pl-k">=</span>c.chart;b.visible<span class="pl-k">=</span>b.<span class="pl-sc">options</span>.visible<span class="pl-k">=</span>a<span class="pl-k">=</span>a<span class="pl-k">===</span>u<span class="pl-k">?!</span>b.visible<span class="pl-k">:</span>a;c.<span class="pl-sc">options</span>.<span class="pl-sc">data</span>[Ma(b,c.<span class="pl-sc">data</span>)]<span class="pl-k">=</span>b.<span class="pl-sc">options</span>;q([<span class="pl-s1"><span class="pl-pds">&quot;</span>graphic<span class="pl-pds">&quot;</span></span>,<span class="pl-s1"><span class="pl-pds">&quot;</span>dataLabel<span class="pl-pds">&quot;</span></span>,<span class="pl-s1"><span class="pl-pds">&quot;</span>connector<span class="pl-pds">&quot;</span></span>,<span class="pl-s1"><span class="pl-pds">&quot;</span>shadowGroup<span class="pl-pds">&quot;</span></span>],<span class="pl-st">function</span>(<span class="pl-vpf">c</span>){<span class="pl-k">if</span>(b[c])b[c][a<span class="pl-k">?</span><span class="pl-s1"><span class="pl-pds">&quot;</span>show<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s1"><span class="pl-pds">&quot;</span>hide<span class="pl-pds">&quot;</span></span>](<span class="pl-k">!</span><span class="pl-c1">0</span>)});b.legendItem<span class="pl-k">&amp;&amp;</span>d.legend.colorizeItem(b,a);<span class="pl-k">if</span>(<span class="pl-k">!</span>c.isDirty<span class="pl-k">&amp;&amp;</span>c.<span class="pl-sc">options</span>.ignoreHiddenPoint)c.isDirty<span class="pl-k">=!</span><span class="pl-c1">0</span>,d.redraw()},<span class="pl-en">slice</span>:<span class="pl-st">function</span>(<span class="pl-vpf">a</span>,<span class="pl-vpf">b</span>,<span class="pl-vpf">c</span>){<span class="pl-s">var</span> d<span class="pl-k">=</span><span class="pl-v">this</span>.series;Ra(c,d.chart);p(b,<span class="pl-k">!</span><span class="pl-c1">0</span>);<span class="pl-v">this</span>.sliced<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-sc">options</span>.sliced<span class="pl-k">=</span>a<span class="pl-k">=</span>s(a)<span class="pl-k">?</span>a<span class="pl-k">:!</span><span class="pl-v">this</span>.sliced;d.<span class="pl-sc">options</span>.<span class="pl-sc">data</span>[Ma(<span class="pl-v">this</span>,d.<span class="pl-sc">data</span>)]<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-sc">options</span>;a<span class="pl-k">=</span>a<span class="pl-k">?</span><span class="pl-v">this</span>.slicedTranslation<span class="pl-k">:</span>{translateX<span class="pl-k">:</span><span class="pl-c1">0</span>,</td>
      </tr>
      <tr>
        <td id="L275" class="blob-num js-line-number" data-line-number="275"></td>
        <td id="LC275" class="blob-code js-file-line">translateY<span class="pl-k">:</span><span class="pl-c1">0</span>};<span class="pl-v">this</span>.graphic.animate(a);<span class="pl-v">this</span>.shadowGroup<span class="pl-k">&amp;&amp;</span><span class="pl-v">this</span>.shadowGroup.animate(a)},<span class="pl-en">haloPath</span>:<span class="pl-st">function</span>(<span class="pl-vpf">a</span>){<span class="pl-s">var</span> b<span class="pl-k">=</span><span class="pl-v">this</span>.shapeArgs,c<span class="pl-k">=</span><span class="pl-v">this</span>.series.chart;<span class="pl-k">return</span> <span class="pl-v">this</span>.sliced<span class="pl-k">||!</span><span class="pl-v">this</span>.visible<span class="pl-k">?</span>[]<span class="pl-k">:</span><span class="pl-v">this</span>.series.chart.renderer.symbols.arc(c.plotLeft<span class="pl-k">+</span>b.<span class="pl-sc">x</span>,c.plotTop<span class="pl-k">+</span>b.<span class="pl-sc">y</span>,b.r<span class="pl-k">+</span>a,b.r<span class="pl-k">+</span>a,{innerR<span class="pl-k">:</span><span class="pl-v">this</span>.shapeArgs.r,start<span class="pl-k">:</span>b.<span class="pl-sc">start</span>,end<span class="pl-k">:</span>b.end})}}),requireSorting<span class="pl-k">:!</span><span class="pl-c1">1</span>,noSharedTooltip<span class="pl-k">:!</span><span class="pl-c1">0</span>,trackerGroups<span class="pl-k">:</span>[<span class="pl-s1"><span class="pl-pds">&quot;</span>group<span class="pl-pds">&quot;</span></span>,<span class="pl-s1"><span class="pl-pds">&quot;</span>dataLabelsGroup<span class="pl-pds">&quot;</span></span>],axisTypes<span class="pl-k">:</span>[],pointAttrToOptions<span class="pl-k">:</span>{stroke<span class="pl-k">:</span><span class="pl-s1"><span class="pl-pds">&quot;</span>borderColor<span class="pl-pds">&quot;</span></span>,<span class="pl-s1"><span class="pl-pds">&quot;</span>stroke-width<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s1"><span class="pl-pds">&quot;</span>borderWidth<span class="pl-pds">&quot;</span></span>,fill<span class="pl-k">:</span><span class="pl-s1"><span class="pl-pds">&quot;</span>color<span class="pl-pds">&quot;</span></span>},singularTooltips<span class="pl-k">:!</span><span class="pl-c1">0</span>,</td>
      </tr>
      <tr>
        <td id="L276" class="blob-num js-line-number" data-line-number="276"></td>
        <td id="LC276" class="blob-code js-file-line">getColor<span class="pl-k">:</span>sa,<span class="pl-en">animate</span>:<span class="pl-st">function</span>(<span class="pl-vpf">a</span>){<span class="pl-s">var</span> b<span class="pl-k">=</span><span class="pl-v">this</span>,c<span class="pl-k">=</span>b.points,d<span class="pl-k">=</span>b.startAngleRad;<span class="pl-k">if</span>(<span class="pl-k">!</span>a)q(c,<span class="pl-st">function</span>(<span class="pl-vpf">a</span>){<span class="pl-s">var</span> c<span class="pl-k">=</span>a.graphic,a<span class="pl-k">=</span>a.shapeArgs;c<span class="pl-k">&amp;&amp;</span>(c.attr({r<span class="pl-k">:</span>b.center[<span class="pl-c1">3</span>]/<span class="pl-c1">2</span>,start<span class="pl-k">:</span>d,end<span class="pl-k">:</span>d}),c.animate({r<span class="pl-k">:</span>a.r,start<span class="pl-k">:</span>a.<span class="pl-sc">start</span>,end<span class="pl-k">:</span>a.end},b.<span class="pl-sc">options</span>.animation))}),b.animate<span class="pl-k">=</span><span class="pl-c1">null</span>},<span class="pl-en">setData</span>:<span class="pl-st">function</span>(<span class="pl-vpf">a</span>,<span class="pl-vpf">b</span>,<span class="pl-vpf">c</span>,<span class="pl-vpf">d</span>){O.<span class="pl-sc">prototype</span>.setData.<span class="pl-s3">call</span>(<span class="pl-v">this</span>,a,<span class="pl-k">!</span><span class="pl-c1">1</span>,c,d);<span class="pl-v">this</span>.processData();<span class="pl-v">this</span>.generatePoints();p(b,<span class="pl-k">!</span><span class="pl-c1">0</span>)<span class="pl-k">&amp;&amp;</span><span class="pl-v">this</span>.chart.redraw(c)},<span class="pl-en">generatePoints</span>:<span class="pl-st">function</span>(){<span class="pl-s">var</span> a,b<span class="pl-k">=</span><span class="pl-c1">0</span>,c,d,e,f<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-sc">options</span>.ignoreHiddenPoint;O.<span class="pl-sc">prototype</span>.generatePoints.<span class="pl-s3">call</span>(<span class="pl-v">this</span>);</td>
      </tr>
      <tr>
        <td id="L277" class="blob-num js-line-number" data-line-number="277"></td>
        <td id="LC277" class="blob-code js-file-line">c<span class="pl-k">=</span><span class="pl-v">this</span>.points;d<span class="pl-k">=</span>c.<span class="pl-sc">length</span>;<span class="pl-k">for</span>(a<span class="pl-k">=</span><span class="pl-c1">0</span>;a<span class="pl-k">&lt;</span>d;a<span class="pl-k">++</span>)e<span class="pl-k">=</span>c[a],b<span class="pl-k">+=</span>f<span class="pl-k">&amp;&amp;!</span>e.visible<span class="pl-k">?</span><span class="pl-c1">0</span><span class="pl-k">:</span>e.<span class="pl-sc">y</span>;<span class="pl-v">this</span>.total<span class="pl-k">=</span>b;<span class="pl-k">for</span>(a<span class="pl-k">=</span><span class="pl-c1">0</span>;a<span class="pl-k">&lt;</span>d;a<span class="pl-k">++</span>)e<span class="pl-k">=</span>c[a],e.percentage<span class="pl-k">=</span>b<span class="pl-k">&gt;</span><span class="pl-c1">0</span><span class="pl-k">?</span>e.<span class="pl-sc">y</span>/b<span class="pl-k">*</span><span class="pl-c1">100</span><span class="pl-k">:</span><span class="pl-c1">0</span>,e.total<span class="pl-k">=</span>b},<span class="pl-en">translate</span>:<span class="pl-st">function</span>(<span class="pl-vpf">a</span>){<span class="pl-v">this</span>.generatePoints();<span class="pl-s">var</span> b<span class="pl-k">=</span><span class="pl-c1">0</span>,c<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-sc">options</span>,d<span class="pl-k">=</span>c.slicedOffset,e<span class="pl-k">=</span>d<span class="pl-k">+</span>c.<span class="pl-sc">borderWidth</span>,f,g,h,i<span class="pl-k">=</span>c.startAngle<span class="pl-k">||</span><span class="pl-c1">0</span>,j<span class="pl-k">=</span><span class="pl-v">this</span>.startAngleRad<span class="pl-k">=</span>oa/<span class="pl-c1">180</span><span class="pl-k">*</span>(i<span class="pl-k">-</span><span class="pl-c1">90</span>),i<span class="pl-k">=</span>(<span class="pl-v">this</span>.endAngleRad<span class="pl-k">=</span>oa/<span class="pl-c1">180</span><span class="pl-k">*</span>(p(c.endAngle,i<span class="pl-k">+</span><span class="pl-c1">360</span>)<span class="pl-k">-</span><span class="pl-c1">90</span>))<span class="pl-k">-</span>j,k<span class="pl-k">=</span><span class="pl-v">this</span>.points,l<span class="pl-k">=</span>c.dataLabels.distance,c<span class="pl-k">=</span>c.ignoreHiddenPoint,n,m<span class="pl-k">=</span>k.<span class="pl-sc">length</span>,o;<span class="pl-k">if</span>(<span class="pl-k">!</span>a)<span class="pl-v">this</span>.center<span class="pl-k">=</span>a<span class="pl-k">=</span><span class="pl-v">this</span>.getCenter();<span class="pl-s3">this</span>.<span class="pl-en">getX</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">b</span>,<span class="pl-vpf">c</span>){h<span class="pl-k">=</span></td>
      </tr>
      <tr>
        <td id="L278" class="blob-num js-line-number" data-line-number="278"></td>
        <td id="LC278" class="blob-code js-file-line">V.<span class="pl-s3">asin</span>(L((b<span class="pl-k">-</span>a[<span class="pl-c1">1</span>])/(a[<span class="pl-c1">2</span>]/<span class="pl-c1">2</span><span class="pl-k">+</span>l),<span class="pl-c1">1</span>));<span class="pl-k">return</span> a[<span class="pl-c1">0</span>]<span class="pl-k">+</span>(c<span class="pl-k">?-</span><span class="pl-c1">1</span><span class="pl-k">:</span><span class="pl-c1">1</span>)<span class="pl-k">*</span>aa(h)<span class="pl-k">*</span>(a[<span class="pl-c1">2</span>]/<span class="pl-c1">2</span><span class="pl-k">+</span>l)};<span class="pl-k">for</span>(n<span class="pl-k">=</span><span class="pl-c1">0</span>;n<span class="pl-k">&lt;</span>m;n<span class="pl-k">++</span>){o<span class="pl-k">=</span>k[n];f<span class="pl-k">=</span>j<span class="pl-k">+</span>b<span class="pl-k">*</span>i;<span class="pl-k">if</span>(<span class="pl-k">!</span>c<span class="pl-k">||</span>o.visible)b<span class="pl-k">+=</span>o.percentage/<span class="pl-c1">100</span>;g<span class="pl-k">=</span>j<span class="pl-k">+</span>b<span class="pl-k">*</span>i;o.shapeType<span class="pl-k">=</span><span class="pl-s1"><span class="pl-pds">&quot;</span>arc<span class="pl-pds">&quot;</span></span>;o.shapeArgs<span class="pl-k">=</span>{x<span class="pl-k">:</span>a[<span class="pl-c1">0</span>],y<span class="pl-k">:</span>a[<span class="pl-c1">1</span>],r<span class="pl-k">:</span>a[<span class="pl-c1">2</span>]/<span class="pl-c1">2</span>,innerR<span class="pl-k">:</span>a[<span class="pl-c1">3</span>]/<span class="pl-c1">2</span>,start<span class="pl-k">:</span>v(f<span class="pl-k">*</span><span class="pl-c1">1E3</span>)/<span class="pl-c1">1E3</span>,end<span class="pl-k">:</span>v(g<span class="pl-k">*</span><span class="pl-c1">1E3</span>)/<span class="pl-c1">1E3</span>};h<span class="pl-k">=</span>(g<span class="pl-k">+</span>f)/<span class="pl-c1">2</span>;h<span class="pl-k">&gt;</span><span class="pl-c1">1.5</span><span class="pl-k">*</span>oa<span class="pl-k">?</span>h<span class="pl-k">-=</span><span class="pl-c1">2</span><span class="pl-k">*</span>oa<span class="pl-k">:</span>h<span class="pl-k">&lt;-</span>oa/<span class="pl-c1">2</span><span class="pl-k">&amp;&amp;</span>(h<span class="pl-k">+=</span><span class="pl-c1">2</span><span class="pl-k">*</span>oa);o.slicedTranslation<span class="pl-k">=</span>{translateX<span class="pl-k">:</span>v(aa(h)<span class="pl-k">*</span>d),translateY<span class="pl-k">:</span>v(fa(h)<span class="pl-k">*</span>d)};f<span class="pl-k">=</span>aa(h)<span class="pl-k">*</span>a[<span class="pl-c1">2</span>]/<span class="pl-c1">2</span>;g<span class="pl-k">=</span>fa(h)<span class="pl-k">*</span>a[<span class="pl-c1">2</span>]/<span class="pl-c1">2</span>;o.tooltipPos<span class="pl-k">=</span>[a[<span class="pl-c1">0</span>]<span class="pl-k">+</span>f<span class="pl-k">*</span><span class="pl-c1">0.7</span>,a[<span class="pl-c1">1</span>]<span class="pl-k">+</span>g<span class="pl-k">*</span><span class="pl-c1">0.7</span>];o.half<span class="pl-k">=</span>h<span class="pl-k">&lt;-</span>oa/<span class="pl-c1">2</span><span class="pl-k">||</span>h<span class="pl-k">&gt;</span>oa/<span class="pl-c1">2</span><span class="pl-k">?</span><span class="pl-c1">1</span><span class="pl-k">:</span><span class="pl-c1">0</span>;o.angle<span class="pl-k">=</span>h;e<span class="pl-k">=</span>L(e,l/<span class="pl-c1">2</span>);o.labelPos<span class="pl-k">=</span>[a[<span class="pl-c1">0</span>]<span class="pl-k">+</span>f<span class="pl-k">+</span>aa(h)<span class="pl-k">*</span></td>
      </tr>
      <tr>
        <td id="L279" class="blob-num js-line-number" data-line-number="279"></td>
        <td id="LC279" class="blob-code js-file-line">l,a[<span class="pl-c1">1</span>]<span class="pl-k">+</span>g<span class="pl-k">+</span>fa(h)<span class="pl-k">*</span>l,a[<span class="pl-c1">0</span>]<span class="pl-k">+</span>f<span class="pl-k">+</span>aa(h)<span class="pl-k">*</span>e,a[<span class="pl-c1">1</span>]<span class="pl-k">+</span>g<span class="pl-k">+</span>fa(h)<span class="pl-k">*</span>e,a[<span class="pl-c1">0</span>]<span class="pl-k">+</span>f,a[<span class="pl-c1">1</span>]<span class="pl-k">+</span>g,l<span class="pl-k">&lt;</span><span class="pl-c1">0</span><span class="pl-k">?</span><span class="pl-s1"><span class="pl-pds">&quot;</span>center<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span>o.half<span class="pl-k">?</span><span class="pl-s1"><span class="pl-pds">&quot;</span>right<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s1"><span class="pl-pds">&quot;</span>left<span class="pl-pds">&quot;</span></span>,h]}},drawGraph<span class="pl-k">:</span><span class="pl-c1">null</span>,<span class="pl-en">drawPoints</span>:<span class="pl-st">function</span>(){<span class="pl-s">var</span> a<span class="pl-k">=</span><span class="pl-v">this</span>,b<span class="pl-k">=</span>a.chart.renderer,c,d,e<span class="pl-k">=</span>a.<span class="pl-sc">options</span>.shadow,f,g;<span class="pl-k">if</span>(e<span class="pl-k">&amp;&amp;!</span>a.shadowGroup)a.shadowGroup<span class="pl-k">=</span>b.g(<span class="pl-s1"><span class="pl-pds">&quot;</span>shadow<span class="pl-pds">&quot;</span></span>).<span class="pl-s3">add</span>(a.group);q(a.points,<span class="pl-st">function</span>(<span class="pl-vpf">h</span>){d<span class="pl-k">=</span>h.graphic;g<span class="pl-k">=</span>h.shapeArgs;f<span class="pl-k">=</span>h.shadowGroup;<span class="pl-k">if</span>(e<span class="pl-k">&amp;&amp;!</span>f)f<span class="pl-k">=</span>h.shadowGroup<span class="pl-k">=</span>b.g(<span class="pl-s1"><span class="pl-pds">&quot;</span>shadow<span class="pl-pds">&quot;</span></span>).<span class="pl-s3">add</span>(a.shadowGroup);c<span class="pl-k">=</span>h.sliced<span class="pl-k">?</span>h.slicedTranslation<span class="pl-k">:</span>{translateX<span class="pl-k">:</span><span class="pl-c1">0</span>,translateY<span class="pl-k">:</span><span class="pl-c1">0</span>};f<span class="pl-k">&amp;&amp;</span>f.attr(c);d<span class="pl-k">?</span>d.animate(r(g,c))<span class="pl-k">:</span>h.graphic<span class="pl-k">=</span>d<span class="pl-k">=</span>b[h.shapeType](g).setRadialReference(a.center).attr(h.pointAttr[h.<span class="pl-sc">selected</span><span class="pl-k">?</span></td>
      </tr>
      <tr>
        <td id="L280" class="blob-num js-line-number" data-line-number="280"></td>
        <td id="LC280" class="blob-code js-file-line"><span class="pl-s1"><span class="pl-pds">&quot;</span>select<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s1"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>]).attr({<span class="pl-s1"><span class="pl-pds">&quot;</span>stroke-linejoin<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s1"><span class="pl-pds">&quot;</span>round<span class="pl-pds">&quot;</span></span>}).attr(c).<span class="pl-s3">add</span>(a.group).shadow(e,f);h.visible<span class="pl-k">!==void</span> <span class="pl-c1">0</span><span class="pl-k">&amp;&amp;</span>h.setVisible(h.visible)})},<span class="pl-en">sortByAngle</span>:<span class="pl-st">function</span>(<span class="pl-vpf">a</span>,<span class="pl-vpf">b</span>){a.<span class="pl-s3">sort</span>(<span class="pl-st">function</span>(<span class="pl-vpf">a</span>,<span class="pl-vpf">d</span>){<span class="pl-k">return</span> a.angle<span class="pl-k">!==void</span> <span class="pl-c1">0</span><span class="pl-k">&amp;&amp;</span>(d.angle<span class="pl-k">-</span>a.angle)<span class="pl-k">*</span>b})},drawLegendSymbol<span class="pl-k">:</span>M.drawRectangle,getCenter<span class="pl-k">:</span>Z.getCenter,getSymbol<span class="pl-k">:</span>sa};T<span class="pl-k">=</span>ma(O,T);H.pie<span class="pl-k">=</span>T;<span class="pl-s3">O</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">drawDataLabels</span><span class="pl-k">=</span><span class="pl-st">function</span>(){<span class="pl-s">var</span> a<span class="pl-k">=</span><span class="pl-v">this</span>,b<span class="pl-k">=</span>a.<span class="pl-sc">options</span>,c<span class="pl-k">=</span>b.cursor,d<span class="pl-k">=</span>b.dataLabels,e<span class="pl-k">=</span>a.points,f,g,h<span class="pl-k">=</span>a.hasRendered<span class="pl-k">||</span><span class="pl-c1">0</span>,i,j;<span class="pl-k">if</span>(d.enabled<span class="pl-k">||</span>a._hasPointLabels)a.dlProcessOptions<span class="pl-k">&amp;&amp;</span>a.dlProcessOptions(d),</td>
      </tr>
      <tr>
        <td id="L281" class="blob-num js-line-number" data-line-number="281"></td>
        <td id="LC281" class="blob-code js-file-line">j<span class="pl-k">=</span>a.plotGroup(<span class="pl-s1"><span class="pl-pds">&quot;</span>dataLabelsGroup<span class="pl-pds">&quot;</span></span>,<span class="pl-s1"><span class="pl-pds">&quot;</span>data-labels<span class="pl-pds">&quot;</span></span>,d.<span class="pl-sc">defer</span><span class="pl-k">?</span><span class="pl-s1"><span class="pl-pds">&quot;</span>hidden<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s1"><span class="pl-pds">&quot;</span>visible<span class="pl-pds">&quot;</span></span>,d.<span class="pl-sc">zIndex</span><span class="pl-k">||</span><span class="pl-c1">6</span>),p(d.<span class="pl-sc">defer</span>,<span class="pl-k">!</span><span class="pl-c1">0</span>)<span class="pl-k">&amp;&amp;</span>(j.attr({opacity<span class="pl-k">:+</span>h}),h<span class="pl-k">||</span>N(a,<span class="pl-s1"><span class="pl-pds">&quot;</span>afterAnimate<span class="pl-pds">&quot;</span></span>,<span class="pl-st">function</span>(){a.visible<span class="pl-k">&amp;&amp;</span>j.show();j[b.animation<span class="pl-k">?</span><span class="pl-s1"><span class="pl-pds">&quot;</span>animate<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s1"><span class="pl-pds">&quot;</span>attr<span class="pl-pds">&quot;</span></span>]({opacity<span class="pl-k">:</span><span class="pl-c1">1</span>},{duration<span class="pl-k">:</span><span class="pl-c1">200</span>})})),g<span class="pl-k">=</span>d,q(e,<span class="pl-st">function</span>(<span class="pl-vpf">b</span>){<span class="pl-s">var</span> e,h<span class="pl-k">=</span>b.dataLabel,m,o,q<span class="pl-k">=</span>b.connector,t<span class="pl-k">=!</span><span class="pl-c1">0</span>;f<span class="pl-k">=</span>b.<span class="pl-sc">options</span><span class="pl-k">&amp;&amp;</span>b.<span class="pl-sc">options</span>.dataLabels;e<span class="pl-k">=</span>p(f<span class="pl-k">&amp;&amp;</span>f.enabled,g.enabled);<span class="pl-k">if</span>(h<span class="pl-k">&amp;&amp;!</span>e)b.dataLabel<span class="pl-k">=</span>h.destroy();<span class="pl-k">else</span> <span class="pl-k">if</span>(e){d<span class="pl-k">=</span>w(g,f);e<span class="pl-k">=</span>d.rotation;m<span class="pl-k">=</span>b.getLabelConfig();i<span class="pl-k">=</span>d.format<span class="pl-k">?</span>Ja(d.format,m)<span class="pl-k">:</span>d.formatter.<span class="pl-s3">call</span>(m,d);d.<span class="pl-sc">style</span>.<span class="pl-sc">color</span><span class="pl-k">=</span></td>
      </tr>
      <tr>
        <td id="L282" class="blob-num js-line-number" data-line-number="282"></td>
        <td id="LC282" class="blob-code js-file-line">p(d.<span class="pl-sc">color</span>,d.<span class="pl-sc">style</span>.<span class="pl-sc">color</span>,a.<span class="pl-sc">color</span>,<span class="pl-s1"><span class="pl-pds">&quot;</span>black<span class="pl-pds">&quot;</span></span>);<span class="pl-k">if</span>(h)<span class="pl-k">if</span>(s(i))h.attr({text<span class="pl-k">:</span>i}),t<span class="pl-k">=!</span><span class="pl-c1">1</span>;<span class="pl-k">else</span>{<span class="pl-k">if</span>(b.dataLabel<span class="pl-k">=</span>h<span class="pl-k">=</span>h.destroy(),q)b.connector<span class="pl-k">=</span>q.destroy()}<span class="pl-k">else</span> <span class="pl-k">if</span>(s(i)){h<span class="pl-k">=</span>{fill<span class="pl-k">:</span>d.<span class="pl-sc">backgroundColor</span>,stroke<span class="pl-k">:</span>d.<span class="pl-sc">borderColor</span>,<span class="pl-s1"><span class="pl-pds">&quot;</span>stroke-width<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span>d.<span class="pl-sc">borderWidth</span>,r<span class="pl-k">:</span>d.borderRadius<span class="pl-k">||</span><span class="pl-c1">0</span>,rotation<span class="pl-k">:</span>e,padding<span class="pl-k">:</span>d.padding,zIndex<span class="pl-k">:</span><span class="pl-c1">1</span>};<span class="pl-k">for</span>(o <span class="pl-k">in</span> h)h[o]<span class="pl-k">===</span>u<span class="pl-k">&amp;&amp;delete</span> h[o];h<span class="pl-k">=</span>b.dataLabel<span class="pl-k">=</span>a.chart.renderer[e<span class="pl-k">?</span><span class="pl-s1"><span class="pl-pds">&quot;</span>text<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s1"><span class="pl-pds">&quot;</span>label<span class="pl-pds">&quot;</span></span>](i,<span class="pl-c1">0</span>,<span class="pl-k">-</span><span class="pl-c1">999</span>,<span class="pl-c1">null</span>,<span class="pl-c1">null</span>,<span class="pl-c1">null</span>,d.useHTML).attr(h).css(r(d.<span class="pl-sc">style</span>,c<span class="pl-k">&amp;&amp;</span>{cursor<span class="pl-k">:</span>c})).<span class="pl-s3">add</span>(j).shadow(d.shadow)}h<span class="pl-k">&amp;&amp;</span>a.alignDataLabel(b,h,d,<span class="pl-c1">null</span>,t)}})};</td>
      </tr>
      <tr>
        <td id="L283" class="blob-num js-line-number" data-line-number="283"></td>
        <td id="LC283" class="blob-code js-file-line"><span class="pl-s3">O</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">alignDataLabel</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>,<span class="pl-vpf">b</span>,<span class="pl-vpf">c</span>,<span class="pl-vpf">d</span>,<span class="pl-vpf">e</span>){<span class="pl-s">var</span> f<span class="pl-k">=</span><span class="pl-v">this</span>.chart,g<span class="pl-k">=</span>f.inverted,h<span class="pl-k">=</span>p(a.plotX,<span class="pl-k">-</span><span class="pl-c1">999</span>),i<span class="pl-k">=</span>p(a.plotY,<span class="pl-k">-</span><span class="pl-c1">999</span>),j<span class="pl-k">=</span>b.getBBox();<span class="pl-k">if</span>(a<span class="pl-k">=</span><span class="pl-v">this</span>.visible<span class="pl-k">&amp;&amp;</span>(a.series.forceDL<span class="pl-k">||</span>f.isInsidePlot(h,v(i),g)<span class="pl-k">||</span>d<span class="pl-k">&amp;&amp;</span>f.isInsidePlot(h,g<span class="pl-k">?</span>d.<span class="pl-sc">x</span><span class="pl-k">+</span><span class="pl-c1">1</span><span class="pl-k">:</span>d.<span class="pl-sc">y</span><span class="pl-k">+</span>d.<span class="pl-sc">height</span><span class="pl-k">-</span><span class="pl-c1">1</span>,g)))d<span class="pl-k">=</span>r({x<span class="pl-k">:</span>g<span class="pl-k">?</span>f.plotWidth<span class="pl-k">-</span>i<span class="pl-k">:</span>h,y<span class="pl-k">:</span>v(g<span class="pl-k">?</span>f.plotHeight<span class="pl-k">-</span>h<span class="pl-k">:</span>i),width<span class="pl-k">:</span><span class="pl-c1">0</span>,height<span class="pl-k">:</span><span class="pl-c1">0</span>},d),r(c,{width<span class="pl-k">:</span>j.<span class="pl-sc">width</span>,height<span class="pl-k">:</span>j.<span class="pl-sc">height</span>}),c.rotation<span class="pl-k">?</span>b[e<span class="pl-k">?</span><span class="pl-s1"><span class="pl-pds">&quot;</span>attr<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s1"><span class="pl-pds">&quot;</span>animate<span class="pl-pds">&quot;</span></span>]({x<span class="pl-k">:</span>d.<span class="pl-sc">x</span><span class="pl-k">+</span>c.<span class="pl-sc">x</span><span class="pl-k">+</span>d.<span class="pl-sc">width</span>/<span class="pl-c1">2</span>,y<span class="pl-k">:</span>d.<span class="pl-sc">y</span><span class="pl-k">+</span>c.<span class="pl-sc">y</span><span class="pl-k">+</span>d.<span class="pl-sc">height</span>/<span class="pl-c1">2</span>}).attr({align<span class="pl-k">:</span>c.<span class="pl-sc">align</span>})<span class="pl-k">:</span>(b.<span class="pl-sc">align</span>(c,<span class="pl-c1">null</span>,d),g<span class="pl-k">=</span>b.alignAttr,p(c.overflow,<span class="pl-s1"><span class="pl-pds">&quot;</span>justify<span class="pl-pds">&quot;</span></span>)<span class="pl-k">===</span></td>
      </tr>
      <tr>
        <td id="L284" class="blob-num js-line-number" data-line-number="284"></td>
        <td id="LC284" class="blob-code js-file-line"><span class="pl-s1"><span class="pl-pds">&quot;</span>justify<span class="pl-pds">&quot;</span></span><span class="pl-k">?</span><span class="pl-v">this</span>.justifyDataLabel(b,c,g,j,d,e)<span class="pl-k">:</span>p(c.crop,<span class="pl-k">!</span><span class="pl-c1">0</span>)<span class="pl-k">&amp;&amp;</span>(a<span class="pl-k">=</span>f.isInsidePlot(g.<span class="pl-sc">x</span>,g.<span class="pl-sc">y</span>)<span class="pl-k">&amp;&amp;</span>f.isInsidePlot(g.<span class="pl-sc">x</span><span class="pl-k">+</span>j.<span class="pl-sc">width</span>,g.<span class="pl-sc">y</span><span class="pl-k">+</span>j.<span class="pl-sc">height</span>)));<span class="pl-k">if</span>(<span class="pl-k">!</span>a)b.attr({y<span class="pl-k">:-</span><span class="pl-c1">999</span>}),b.placed<span class="pl-k">=!</span><span class="pl-c1">1</span>};<span class="pl-s3">O</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">justifyDataLabel</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>,<span class="pl-vpf">b</span>,<span class="pl-vpf">c</span>,<span class="pl-vpf">d</span>,<span class="pl-vpf">e</span>,<span class="pl-vpf">f</span>){<span class="pl-s">var</span> g<span class="pl-k">=</span><span class="pl-v">this</span>.chart,h<span class="pl-k">=</span>b.<span class="pl-sc">align</span>,i<span class="pl-k">=</span>b.verticalAlign,j,k;j<span class="pl-k">=</span>c.<span class="pl-sc">x</span>;<span class="pl-k">if</span>(j<span class="pl-k">&lt;</span><span class="pl-c1">0</span>)h<span class="pl-k">===</span><span class="pl-s1"><span class="pl-pds">&quot;</span>right<span class="pl-pds">&quot;</span></span><span class="pl-k">?</span>b.<span class="pl-sc">align</span><span class="pl-k">=</span><span class="pl-s1"><span class="pl-pds">&quot;</span>left<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span>b.<span class="pl-sc">x</span><span class="pl-k">=-</span>j,k<span class="pl-k">=!</span><span class="pl-c1">0</span>;j<span class="pl-k">=</span>c.<span class="pl-sc">x</span><span class="pl-k">+</span>d.<span class="pl-sc">width</span>;<span class="pl-k">if</span>(j<span class="pl-k">&gt;</span>g.plotWidth)h<span class="pl-k">===</span><span class="pl-s1"><span class="pl-pds">&quot;</span>left<span class="pl-pds">&quot;</span></span><span class="pl-k">?</span>b.<span class="pl-sc">align</span><span class="pl-k">=</span><span class="pl-s1"><span class="pl-pds">&quot;</span>right<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span>b.<span class="pl-sc">x</span><span class="pl-k">=</span>g.plotWidth<span class="pl-k">-</span>j,k<span class="pl-k">=!</span><span class="pl-c1">0</span>;j<span class="pl-k">=</span>c.<span class="pl-sc">y</span>;<span class="pl-k">if</span>(j<span class="pl-k">&lt;</span><span class="pl-c1">0</span>)i<span class="pl-k">===</span><span class="pl-s1"><span class="pl-pds">&quot;</span>bottom<span class="pl-pds">&quot;</span></span><span class="pl-k">?</span>b.verticalAlign<span class="pl-k">=</span><span class="pl-s1"><span class="pl-pds">&quot;</span>top<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span>b.<span class="pl-sc">y</span><span class="pl-k">=-</span>j,k<span class="pl-k">=!</span><span class="pl-c1">0</span>;j<span class="pl-k">=</span>c.<span class="pl-sc">y</span><span class="pl-k">+</span>d.<span class="pl-sc">height</span>;<span class="pl-k">if</span>(j<span class="pl-k">&gt;</span>g.plotHeight)i<span class="pl-k">===</span><span class="pl-s1"><span class="pl-pds">&quot;</span>top<span class="pl-pds">&quot;</span></span><span class="pl-k">?</span></td>
      </tr>
      <tr>
        <td id="L285" class="blob-num js-line-number" data-line-number="285"></td>
        <td id="LC285" class="blob-code js-file-line">b.verticalAlign<span class="pl-k">=</span><span class="pl-s1"><span class="pl-pds">&quot;</span>bottom<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span>b.<span class="pl-sc">y</span><span class="pl-k">=</span>g.plotHeight<span class="pl-k">-</span>j,k<span class="pl-k">=!</span><span class="pl-c1">0</span>;<span class="pl-k">if</span>(k)a.placed<span class="pl-k">=!</span>f,a.<span class="pl-sc">align</span>(b,<span class="pl-c1">null</span>,e)};<span class="pl-k">if</span>(H.pie)<span class="pl-s3">H.pie</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">drawDataLabels</span><span class="pl-k">=</span><span class="pl-st">function</span>(){<span class="pl-s">var</span> a<span class="pl-k">=</span><span class="pl-v">this</span>,b<span class="pl-k">=</span>a.<span class="pl-sc">data</span>,c,d<span class="pl-k">=</span>a.chart,e<span class="pl-k">=</span>a.<span class="pl-sc">options</span>.dataLabels,f<span class="pl-k">=</span>p(e.connectorPadding,<span class="pl-c1">10</span>),g<span class="pl-k">=</span>p(e.connectorWidth,<span class="pl-c1">1</span>),h<span class="pl-k">=</span>d.plotWidth,i<span class="pl-k">=</span>d.plotHeight,j,k,l<span class="pl-k">=</span>p(e.softConnector,<span class="pl-k">!</span><span class="pl-c1">0</span>),n<span class="pl-k">=</span>e.distance,m<span class="pl-k">=</span>a.center,o<span class="pl-k">=</span>m[<span class="pl-c1">2</span>]/<span class="pl-c1">2</span>,r<span class="pl-k">=</span>m[<span class="pl-c1">1</span>],s<span class="pl-k">=</span>n<span class="pl-k">&gt;</span><span class="pl-c1">0</span>,u,w,x,A<span class="pl-k">=</span>[[],[]],y,B,I,H,z,R<span class="pl-k">=</span>[<span class="pl-c1">0</span>,<span class="pl-c1">0</span>,<span class="pl-c1">0</span>,<span class="pl-c1">0</span>],<span class="pl-en">N</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>,<span class="pl-vpf">b</span>){<span class="pl-k">return</span> b.<span class="pl-sc">y</span><span class="pl-k">-</span>a.<span class="pl-sc">y</span>};<span class="pl-k">if</span>(a.visible<span class="pl-k">&amp;&amp;</span>(e.enabled<span class="pl-k">||</span>a._hasPointLabels)){O.<span class="pl-sc">prototype</span>.drawDataLabels.<span class="pl-s3">apply</span>(a);q(b,</td>
      </tr>
      <tr>
        <td id="L286" class="blob-num js-line-number" data-line-number="286"></td>
        <td id="LC286" class="blob-code js-file-line"><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){a.dataLabel<span class="pl-k">&amp;&amp;</span>a.visible<span class="pl-k">&amp;&amp;</span>A[a.half].<span class="pl-s3">push</span>(a)});<span class="pl-k">for</span>(H<span class="pl-k">=</span><span class="pl-c1">2</span>;H<span class="pl-k">--</span>;){<span class="pl-s">var</span> G<span class="pl-k">=</span>[],M<span class="pl-k">=</span>[],F<span class="pl-k">=</span>A[H],K<span class="pl-k">=</span>F.<span class="pl-sc">length</span>,E;<span class="pl-k">if</span>(K){a.sortByAngle(F,H<span class="pl-k">-</span><span class="pl-c1">0.5</span>);<span class="pl-k">for</span>(z<span class="pl-k">=</span>b<span class="pl-k">=</span><span class="pl-c1">0</span>;<span class="pl-k">!</span>b<span class="pl-k">&amp;&amp;</span>F[z];)b<span class="pl-k">=</span>F[z]<span class="pl-k">&amp;&amp;</span>F[z].dataLabel<span class="pl-k">&amp;&amp;</span>(F[z].dataLabel.getBBox().<span class="pl-sc">height</span><span class="pl-k">||</span><span class="pl-c1">21</span>),z<span class="pl-k">++</span>;<span class="pl-k">if</span>(n<span class="pl-k">&gt;</span><span class="pl-c1">0</span>){w<span class="pl-k">=</span>L(r<span class="pl-k">+</span>o<span class="pl-k">+</span>n,d.plotHeight);<span class="pl-k">for</span>(z<span class="pl-k">=</span>t(<span class="pl-c1">0</span>,r<span class="pl-k">-</span>o<span class="pl-k">-</span>n);z<span class="pl-k">&lt;=</span>w;z<span class="pl-k">+=</span>b)G.<span class="pl-s3">push</span>(z);w<span class="pl-k">=</span>G.<span class="pl-sc">length</span>;<span class="pl-k">if</span>(K<span class="pl-k">&gt;</span>w){c<span class="pl-k">=</span>[].<span class="pl-s3">concat</span>(F);c.<span class="pl-s3">sort</span>(N);<span class="pl-k">for</span>(z<span class="pl-k">=</span>K;z<span class="pl-k">--</span>;)c[z].rank<span class="pl-k">=</span>z;<span class="pl-k">for</span>(z<span class="pl-k">=</span>K;z<span class="pl-k">--</span>;)F[z].rank<span class="pl-k">&gt;=</span>w<span class="pl-k">&amp;&amp;</span>F.<span class="pl-s3">splice</span>(z,<span class="pl-c1">1</span>);K<span class="pl-k">=</span>F.<span class="pl-sc">length</span>}<span class="pl-k">for</span>(z<span class="pl-k">=</span><span class="pl-c1">0</span>;z<span class="pl-k">&lt;</span>K;z<span class="pl-k">++</span>){c<span class="pl-k">=</span>F[z];x<span class="pl-k">=</span>c.labelPos;c<span class="pl-k">=</span><span class="pl-c1">9999</span>;<span class="pl-s">var</span> S,P;<span class="pl-k">for</span>(P<span class="pl-k">=</span><span class="pl-c1">0</span>;P<span class="pl-k">&lt;</span>w;P<span class="pl-k">++</span>)S<span class="pl-k">=</span>Q(G[P]<span class="pl-k">-</span>x[<span class="pl-c1">1</span>]),S<span class="pl-k">&lt;</span>c<span class="pl-k">&amp;&amp;</span>(c<span class="pl-k">=</span>S,</td>
      </tr>
      <tr>
        <td id="L287" class="blob-num js-line-number" data-line-number="287"></td>
        <td id="LC287" class="blob-code js-file-line">E<span class="pl-k">=</span>P);<span class="pl-k">if</span>(E<span class="pl-k">&lt;</span>z<span class="pl-k">&amp;&amp;</span>G[z]<span class="pl-k">!==</span><span class="pl-c1">null</span>)E<span class="pl-k">=</span>z;<span class="pl-k">else</span> <span class="pl-k">for</span>(w<span class="pl-k">&lt;</span>K<span class="pl-k">-</span>z<span class="pl-k">+</span>E<span class="pl-k">&amp;&amp;</span>G[z]<span class="pl-k">!==</span><span class="pl-c1">null</span><span class="pl-k">&amp;&amp;</span>(E<span class="pl-k">=</span>w<span class="pl-k">-</span>K<span class="pl-k">+</span>z);G[E]<span class="pl-k">===</span><span class="pl-c1">null</span>;)E<span class="pl-k">++</span>;M.<span class="pl-s3">push</span>({i<span class="pl-k">:</span>E,y<span class="pl-k">:</span>G[E]});G[E]<span class="pl-k">=</span><span class="pl-c1">null</span>}M.<span class="pl-s3">sort</span>(N)}<span class="pl-k">for</span>(z<span class="pl-k">=</span><span class="pl-c1">0</span>;z<span class="pl-k">&lt;</span>K;z<span class="pl-k">++</span>){c<span class="pl-k">=</span>F[z];x<span class="pl-k">=</span>c.labelPos;u<span class="pl-k">=</span>c.dataLabel;I<span class="pl-k">=</span>c.visible<span class="pl-k">===!</span><span class="pl-c1">1</span><span class="pl-k">?</span><span class="pl-s1"><span class="pl-pds">&quot;</span>hidden<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s1"><span class="pl-pds">&quot;</span>visible<span class="pl-pds">&quot;</span></span>;c<span class="pl-k">=</span>x[<span class="pl-c1">1</span>];<span class="pl-k">if</span>(n<span class="pl-k">&gt;</span><span class="pl-c1">0</span>){<span class="pl-k">if</span>(w<span class="pl-k">=</span>M.<span class="pl-s3">pop</span>(),E<span class="pl-k">=</span>w.i,B<span class="pl-k">=</span>w.<span class="pl-sc">y</span>,c<span class="pl-k">&gt;</span>B<span class="pl-k">&amp;&amp;</span>G[E<span class="pl-k">+</span><span class="pl-c1">1</span>]<span class="pl-k">!==</span><span class="pl-c1">null</span><span class="pl-k">||</span>c<span class="pl-k">&lt;</span>B<span class="pl-k">&amp;&amp;</span>G[E<span class="pl-k">-</span><span class="pl-c1">1</span>]<span class="pl-k">!==</span><span class="pl-c1">null</span>)B<span class="pl-k">=</span>L(t(<span class="pl-c1">0</span>,c),d.plotHeight)}<span class="pl-k">else</span> B<span class="pl-k">=</span>c;y<span class="pl-k">=</span>e.justify<span class="pl-k">?</span>m[<span class="pl-c1">0</span>]<span class="pl-k">+</span>(H<span class="pl-k">?-</span><span class="pl-c1">1</span><span class="pl-k">:</span><span class="pl-c1">1</span>)<span class="pl-k">*</span>(o<span class="pl-k">+</span>n)<span class="pl-k">:</span>a.getX(B<span class="pl-k">===</span>r<span class="pl-k">-</span>o<span class="pl-k">-</span>n<span class="pl-k">||</span>B<span class="pl-k">===</span>r<span class="pl-k">+</span>o<span class="pl-k">+</span>n<span class="pl-k">?</span>c<span class="pl-k">:</span>B,H);u._attr<span class="pl-k">=</span>{visibility<span class="pl-k">:</span>I,align<span class="pl-k">:</span>x[<span class="pl-c1">6</span>]};u._pos<span class="pl-k">=</span>{x<span class="pl-k">:</span>y<span class="pl-k">+</span>e.<span class="pl-sc">x</span><span class="pl-k">+</span>({left<span class="pl-k">:</span>f,right<span class="pl-k">:-</span>f}[x[<span class="pl-c1">6</span>]]<span class="pl-k">||</span><span class="pl-c1">0</span>),y<span class="pl-k">:</span>B<span class="pl-k">+</span>e.<span class="pl-sc">y</span><span class="pl-k">-</span><span class="pl-c1">10</span>};u.connX<span class="pl-k">=</span>y;u.connY<span class="pl-k">=</span></td>
      </tr>
      <tr>
        <td id="L288" class="blob-num js-line-number" data-line-number="288"></td>
        <td id="LC288" class="blob-code js-file-line">B;<span class="pl-k">if</span>(<span class="pl-v">this</span>.<span class="pl-sc">options</span>.<span class="pl-sc">size</span><span class="pl-k">===</span><span class="pl-c1">null</span>)w<span class="pl-k">=</span>u.<span class="pl-sc">width</span>,y<span class="pl-k">-</span>w<span class="pl-k">&lt;</span>f<span class="pl-k">?</span>R[<span class="pl-c1">3</span>]<span class="pl-k">=</span>t(v(w<span class="pl-k">-</span>y<span class="pl-k">+</span>f),R[<span class="pl-c1">3</span>])<span class="pl-k">:</span>y<span class="pl-k">+</span>w<span class="pl-k">&gt;</span>h<span class="pl-k">-</span>f<span class="pl-k">&amp;&amp;</span>(R[<span class="pl-c1">1</span>]<span class="pl-k">=</span>t(v(y<span class="pl-k">+</span>w<span class="pl-k">-</span>h<span class="pl-k">+</span>f),R[<span class="pl-c1">1</span>])),B<span class="pl-k">-</span>b/<span class="pl-c1">2</span><span class="pl-k">&lt;</span><span class="pl-c1">0</span><span class="pl-k">?</span>R[<span class="pl-c1">0</span>]<span class="pl-k">=</span>t(v(<span class="pl-k">-</span>B<span class="pl-k">+</span>b/<span class="pl-c1">2</span>),R[<span class="pl-c1">0</span>])<span class="pl-k">:</span>B<span class="pl-k">+</span>b/<span class="pl-c1">2</span><span class="pl-k">&gt;</span>i<span class="pl-k">&amp;&amp;</span>(R[<span class="pl-c1">2</span>]<span class="pl-k">=</span>t(v(B<span class="pl-k">+</span>b/<span class="pl-c1">2</span><span class="pl-k">-</span>i),R[<span class="pl-c1">2</span>]))}}}<span class="pl-k">if</span>(Ca(R)<span class="pl-k">===</span><span class="pl-c1">0</span><span class="pl-k">||</span><span class="pl-v">this</span>.verifyDataLabelOverflow(R))<span class="pl-v">this</span>.placeDataLabels(),s<span class="pl-k">&amp;&amp;</span>g<span class="pl-k">&amp;&amp;</span>q(<span class="pl-v">this</span>.points,<span class="pl-st">function</span>(<span class="pl-vpf">b</span>){j<span class="pl-k">=</span>b.connector;x<span class="pl-k">=</span>b.labelPos;<span class="pl-k">if</span>((u<span class="pl-k">=</span>b.dataLabel)<span class="pl-k">&amp;&amp;</span>u._pos)I<span class="pl-k">=</span>u._attr.<span class="pl-sc">visibility</span>,y<span class="pl-k">=</span>u.connX,B<span class="pl-k">=</span>u.connY,k<span class="pl-k">=</span>l<span class="pl-k">?</span>[<span class="pl-s1"><span class="pl-pds">&quot;</span>M<span class="pl-pds">&quot;</span></span>,y<span class="pl-k">+</span>(x[<span class="pl-c1">6</span>]<span class="pl-k">===</span><span class="pl-s1"><span class="pl-pds">&quot;</span>left<span class="pl-pds">&quot;</span></span><span class="pl-k">?</span><span class="pl-c1">5</span><span class="pl-k">:-</span><span class="pl-c1">5</span>),B,<span class="pl-s1"><span class="pl-pds">&quot;</span>C<span class="pl-pds">&quot;</span></span>,y,B,<span class="pl-c1">2</span><span class="pl-k">*</span>x[<span class="pl-c1">2</span>]<span class="pl-k">-</span>x[<span class="pl-c1">4</span>],<span class="pl-c1">2</span><span class="pl-k">*</span>x[<span class="pl-c1">3</span>]<span class="pl-k">-</span>x[<span class="pl-c1">5</span>],x[<span class="pl-c1">2</span>],x[<span class="pl-c1">3</span>],<span class="pl-s1"><span class="pl-pds">&quot;</span>L<span class="pl-pds">&quot;</span></span>,x[<span class="pl-c1">4</span>],x[<span class="pl-c1">5</span>]]<span class="pl-k">:</span>[<span class="pl-s1"><span class="pl-pds">&quot;</span>M<span class="pl-pds">&quot;</span></span>,y<span class="pl-k">+</span>(x[<span class="pl-c1">6</span>]<span class="pl-k">===</span><span class="pl-s1"><span class="pl-pds">&quot;</span>left<span class="pl-pds">&quot;</span></span><span class="pl-k">?</span><span class="pl-c1">5</span><span class="pl-k">:-</span><span class="pl-c1">5</span>),B,<span class="pl-s1"><span class="pl-pds">&quot;</span>L<span class="pl-pds">&quot;</span></span>,x[<span class="pl-c1">2</span>],x[<span class="pl-c1">3</span>],</td>
      </tr>
      <tr>
        <td id="L289" class="blob-num js-line-number" data-line-number="289"></td>
        <td id="LC289" class="blob-code js-file-line"><span class="pl-s1"><span class="pl-pds">&quot;</span>L<span class="pl-pds">&quot;</span></span>,x[<span class="pl-c1">4</span>],x[<span class="pl-c1">5</span>]],j<span class="pl-k">?</span>(j.animate({d<span class="pl-k">:</span>k}),j.attr(<span class="pl-s1"><span class="pl-pds">&quot;</span>visibility<span class="pl-pds">&quot;</span></span>,I))<span class="pl-k">:</span>b.connector<span class="pl-k">=</span>j<span class="pl-k">=</span>a.chart.renderer.path(k).attr({<span class="pl-s1"><span class="pl-pds">&quot;</span>stroke-width<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span>g,stroke<span class="pl-k">:</span>e.connectorColor<span class="pl-k">||</span>b.<span class="pl-sc">color</span><span class="pl-k">||</span><span class="pl-s1"><span class="pl-pds">&quot;</span>#606060<span class="pl-pds">&quot;</span></span>,visibility<span class="pl-k">:</span>I}).<span class="pl-s3">add</span>(a.dataLabelsGroup);<span class="pl-k">else</span> <span class="pl-k">if</span>(j)b.connector<span class="pl-k">=</span>j.destroy()})}},<span class="pl-s3">H.pie</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">placeDataLabels</span><span class="pl-k">=</span><span class="pl-st">function</span>(){q(<span class="pl-v">this</span>.points,<span class="pl-st">function</span>(<span class="pl-vpf">a</span>){<span class="pl-s">var</span> a<span class="pl-k">=</span>a.dataLabel,b;<span class="pl-k">if</span>(a)(b<span class="pl-k">=</span>a._pos)<span class="pl-k">?</span>(a.attr(a._attr),a[a.moved<span class="pl-k">?</span><span class="pl-s1"><span class="pl-pds">&quot;</span>animate<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s1"><span class="pl-pds">&quot;</span>attr<span class="pl-pds">&quot;</span></span>](b),a.moved<span class="pl-k">=!</span><span class="pl-c1">0</span>)<span class="pl-k">:</span>a<span class="pl-k">&amp;&amp;</span>a.attr({y<span class="pl-k">:-</span><span class="pl-c1">999</span>})})},<span class="pl-s3">H.pie</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">alignDataLabel</span><span class="pl-k">=</span>sa,<span class="pl-s3">H.pie</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">verifyDataLabelOverflow</span><span class="pl-k">=</span></td>
      </tr>
      <tr>
        <td id="L290" class="blob-num js-line-number" data-line-number="290"></td>
        <td id="LC290" class="blob-code js-file-line"><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){<span class="pl-s">var</span> b<span class="pl-k">=</span><span class="pl-v">this</span>.center,c<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-sc">options</span>,d<span class="pl-k">=</span>c.center,e<span class="pl-k">=</span>c<span class="pl-k">=</span>c.minSize<span class="pl-k">||</span><span class="pl-c1">80</span>,f;d[<span class="pl-c1">0</span>]<span class="pl-k">!==</span><span class="pl-c1">null</span><span class="pl-k">?</span>e<span class="pl-k">=</span>t(b[<span class="pl-c1">2</span>]<span class="pl-k">-</span>t(a[<span class="pl-c1">1</span>],a[<span class="pl-c1">3</span>]),c)<span class="pl-k">:</span>(e<span class="pl-k">=</span>t(b[<span class="pl-c1">2</span>]<span class="pl-k">-</span>a[<span class="pl-c1">1</span>]<span class="pl-k">-</span>a[<span class="pl-c1">3</span>],c),b[<span class="pl-c1">0</span>]<span class="pl-k">+=</span>(a[<span class="pl-c1">3</span>]<span class="pl-k">-</span>a[<span class="pl-c1">1</span>])/<span class="pl-c1">2</span>);d[<span class="pl-c1">1</span>]<span class="pl-k">!==</span><span class="pl-c1">null</span><span class="pl-k">?</span>e<span class="pl-k">=</span>t(L(e,b[<span class="pl-c1">2</span>]<span class="pl-k">-</span>t(a[<span class="pl-c1">0</span>],a[<span class="pl-c1">2</span>])),c)<span class="pl-k">:</span>(e<span class="pl-k">=</span>t(L(e,b[<span class="pl-c1">2</span>]<span class="pl-k">-</span>a[<span class="pl-c1">0</span>]<span class="pl-k">-</span>a[<span class="pl-c1">2</span>]),c),b[<span class="pl-c1">1</span>]<span class="pl-k">+=</span>(a[<span class="pl-c1">0</span>]<span class="pl-k">-</span>a[<span class="pl-c1">2</span>])/<span class="pl-c1">2</span>);e<span class="pl-k">&lt;</span>b[<span class="pl-c1">2</span>]<span class="pl-k">?</span>(b[<span class="pl-c1">2</span>]<span class="pl-k">=</span>e,<span class="pl-v">this</span>.translate(b),q(<span class="pl-v">this</span>.points,<span class="pl-st">function</span>(<span class="pl-vpf">a</span>){<span class="pl-k">if</span>(a.dataLabel)a.dataLabel._pos<span class="pl-k">=</span><span class="pl-c1">null</span>}),<span class="pl-v">this</span>.drawDataLabels<span class="pl-k">&amp;&amp;</span><span class="pl-v">this</span>.drawDataLabels())<span class="pl-k">:</span>f<span class="pl-k">=!</span><span class="pl-c1">0</span>;<span class="pl-k">return</span> f};<span class="pl-k">if</span>(H.column)<span class="pl-s3">H.column</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">alignDataLabel</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>,<span class="pl-vpf">b</span>,<span class="pl-vpf">c</span>,<span class="pl-vpf">d</span>,<span class="pl-vpf">e</span>){<span class="pl-s">var</span> f<span class="pl-k">=</span><span class="pl-v">this</span>.chart,g<span class="pl-k">=</span>f.inverted,</td>
      </tr>
      <tr>
        <td id="L291" class="blob-num js-line-number" data-line-number="291"></td>
        <td id="LC291" class="blob-code js-file-line">h<span class="pl-k">=</span>a.dlBox<span class="pl-k">||</span>a.shapeArgs,i<span class="pl-k">=</span>a.<span class="pl-sc">below</span><span class="pl-k">||</span>a.plotY<span class="pl-k">&gt;</span>p(<span class="pl-v">this</span>.translatedThreshold,f.plotSizeY),j<span class="pl-k">=</span>p(c.inside,<span class="pl-k">!!</span><span class="pl-v">this</span>.<span class="pl-sc">options</span>.stacking);<span class="pl-k">if</span>(h<span class="pl-k">&amp;&amp;</span>(d<span class="pl-k">=</span>w(h),g<span class="pl-k">&amp;&amp;</span>(d<span class="pl-k">=</span>{x<span class="pl-k">:</span>f.plotWidth<span class="pl-k">-</span>d.<span class="pl-sc">y</span><span class="pl-k">-</span>d.<span class="pl-sc">height</span>,y<span class="pl-k">:</span>f.plotHeight<span class="pl-k">-</span>d.<span class="pl-sc">x</span><span class="pl-k">-</span>d.<span class="pl-sc">width</span>,width<span class="pl-k">:</span>d.<span class="pl-sc">height</span>,height<span class="pl-k">:</span>d.<span class="pl-sc">width</span>}),<span class="pl-k">!</span>j))g<span class="pl-k">?</span>(d.<span class="pl-sc">x</span><span class="pl-k">+=</span>i<span class="pl-k">?</span><span class="pl-c1">0</span><span class="pl-k">:</span>d.<span class="pl-sc">width</span>,d.<span class="pl-sc">width</span><span class="pl-k">=</span><span class="pl-c1">0</span>)<span class="pl-k">:</span>(d.<span class="pl-sc">y</span><span class="pl-k">+=</span>i<span class="pl-k">?</span>d.<span class="pl-sc">height</span><span class="pl-k">:</span><span class="pl-c1">0</span>,d.<span class="pl-sc">height</span><span class="pl-k">=</span><span class="pl-c1">0</span>);c.<span class="pl-sc">align</span><span class="pl-k">=</span>p(c.<span class="pl-sc">align</span>,<span class="pl-k">!</span>g<span class="pl-k">||</span>j<span class="pl-k">?</span><span class="pl-s1"><span class="pl-pds">&quot;</span>center<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span>i<span class="pl-k">?</span><span class="pl-s1"><span class="pl-pds">&quot;</span>right<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s1"><span class="pl-pds">&quot;</span>left<span class="pl-pds">&quot;</span></span>);c.verticalAlign<span class="pl-k">=</span>p(c.verticalAlign,g<span class="pl-k">||</span>j<span class="pl-k">?</span><span class="pl-s1"><span class="pl-pds">&quot;</span>middle<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span>i<span class="pl-k">?</span><span class="pl-s1"><span class="pl-pds">&quot;</span>top<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s1"><span class="pl-pds">&quot;</span>bottom<span class="pl-pds">&quot;</span></span>);O.<span class="pl-sc">prototype</span>.alignDataLabel.<span class="pl-s3">call</span>(<span class="pl-v">this</span>,a,b,c,d,e)};T<span class="pl-k">=</span>K.TrackerMixin<span class="pl-k">=</span>{<span class="pl-en">drawTrackerPoint</span>:<span class="pl-st">function</span>(){<span class="pl-s">var</span> a<span class="pl-k">=</span></td>
      </tr>
      <tr>
        <td id="L292" class="blob-num js-line-number" data-line-number="292"></td>
        <td id="LC292" class="blob-code js-file-line"><span class="pl-v">this</span>,b<span class="pl-k">=</span>a.chart,c<span class="pl-k">=</span>b.pointer,d<span class="pl-k">=</span>a.<span class="pl-sc">options</span>.cursor,e<span class="pl-k">=</span>d<span class="pl-k">&amp;&amp;</span>{cursor<span class="pl-k">:</span>d},<span class="pl-en">f</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">c</span>){<span class="pl-s">var</span> d<span class="pl-k">=</span>c.<span class="pl-sc">target</span>,e;<span class="pl-k">if</span>(b.hoverSeries<span class="pl-k">!==</span>a)a.onMouseOver();<span class="pl-k">for</span>(;d<span class="pl-k">&amp;&amp;!</span>e;)e<span class="pl-k">=</span>d.point,d<span class="pl-k">=</span>d.<span class="pl-sc">parentNode</span>;<span class="pl-k">if</span>(e<span class="pl-k">!==</span>u<span class="pl-k">&amp;&amp;</span>e<span class="pl-k">!==</span>b.hoverPoint)e.onMouseOver(c)};q(a.points,<span class="pl-st">function</span>(<span class="pl-vpf">a</span>){<span class="pl-k">if</span>(a.graphic)a.graphic.element.point<span class="pl-k">=</span>a;<span class="pl-k">if</span>(a.dataLabel)a.dataLabel.element.point<span class="pl-k">=</span>a});<span class="pl-k">if</span>(<span class="pl-k">!</span>a._hasTracking)q(a.trackerGroups,<span class="pl-st">function</span>(<span class="pl-vpf">b</span>){<span class="pl-k">if</span>(a[b]<span class="pl-k">&amp;&amp;</span>(a[b].addClass(<span class="pl-s1"><span class="pl-pds">&quot;</span>highcharts-tracker<span class="pl-pds">&quot;</span></span>).on(<span class="pl-s1"><span class="pl-pds">&quot;</span>mouseover<span class="pl-pds">&quot;</span></span>,f).on(<span class="pl-s1"><span class="pl-pds">&quot;</span>mouseout<span class="pl-pds">&quot;</span></span>,<span class="pl-st">function</span>(<span class="pl-vpf">a</span>){c.onTrackerMouseOut(a)}).css(e),$a))a[b].on(<span class="pl-s1"><span class="pl-pds">&quot;</span>touchstart<span class="pl-pds">&quot;</span></span>,</td>
      </tr>
      <tr>
        <td id="L293" class="blob-num js-line-number" data-line-number="293"></td>
        <td id="LC293" class="blob-code js-file-line">f)}),a._hasTracking<span class="pl-k">=!</span><span class="pl-c1">0</span>},<span class="pl-en">drawTrackerGraph</span>:<span class="pl-st">function</span>(){<span class="pl-s">var</span> a<span class="pl-k">=</span><span class="pl-v">this</span>,b<span class="pl-k">=</span>a.<span class="pl-sc">options</span>,c<span class="pl-k">=</span>b.trackByArea,d<span class="pl-k">=</span>[].<span class="pl-s3">concat</span>(c<span class="pl-k">?</span>a.areaPath<span class="pl-k">:</span>a.graphPath),e<span class="pl-k">=</span>d.<span class="pl-sc">length</span>,f<span class="pl-k">=</span>a.chart,g<span class="pl-k">=</span>f.pointer,h<span class="pl-k">=</span>f.renderer,i<span class="pl-k">=</span>f.<span class="pl-sc">options</span>.tooltip.snap,j<span class="pl-k">=</span>a.tracker,k<span class="pl-k">=</span>b.cursor,l<span class="pl-k">=</span>k<span class="pl-k">&amp;&amp;</span>{cursor<span class="pl-k">:</span>k},k<span class="pl-k">=</span>a.singlePoints,n,<span class="pl-en">m</span><span class="pl-k">=</span><span class="pl-st">function</span>(){<span class="pl-k">if</span>(f.hoverSeries<span class="pl-k">!==</span>a)a.onMouseOver()},o<span class="pl-k">=</span><span class="pl-s1"><span class="pl-pds">&quot;</span>rgba(192,192,192,<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>(ba<span class="pl-k">?</span><span class="pl-c1">1.0E-4</span><span class="pl-k">:</span><span class="pl-c1">0.002</span>)<span class="pl-k">+</span><span class="pl-s1"><span class="pl-pds">&quot;</span>)<span class="pl-pds">&quot;</span></span>;<span class="pl-k">if</span>(e<span class="pl-k">&amp;&amp;!</span>c)<span class="pl-k">for</span>(n<span class="pl-k">=</span>e<span class="pl-k">+</span><span class="pl-c1">1</span>;n<span class="pl-k">--</span>;)d[n]<span class="pl-k">===</span><span class="pl-s1"><span class="pl-pds">&quot;</span>M<span class="pl-pds">&quot;</span></span><span class="pl-k">&amp;&amp;</span>d.<span class="pl-s3">splice</span>(n<span class="pl-k">+</span><span class="pl-c1">1</span>,<span class="pl-c1">0</span>,d[n<span class="pl-k">+</span><span class="pl-c1">1</span>]<span class="pl-k">-</span>i,d[n<span class="pl-k">+</span><span class="pl-c1">2</span>],<span class="pl-s1"><span class="pl-pds">&quot;</span>L<span class="pl-pds">&quot;</span></span>),(n<span class="pl-k">&amp;&amp;</span>d[n]<span class="pl-k">===</span><span class="pl-s1"><span class="pl-pds">&quot;</span>M<span class="pl-pds">&quot;</span></span><span class="pl-k">||</span>n<span class="pl-k">===</span>e)<span class="pl-k">&amp;&amp;</span>d.<span class="pl-s3">splice</span>(n,<span class="pl-c1">0</span>,<span class="pl-s1"><span class="pl-pds">&quot;</span>L<span class="pl-pds">&quot;</span></span>,d[n<span class="pl-k">-</span><span class="pl-c1">2</span>]<span class="pl-k">+</span>i,d[n<span class="pl-k">-</span><span class="pl-c1">1</span>]);<span class="pl-k">for</span>(n<span class="pl-k">=</span><span class="pl-c1">0</span>;n<span class="pl-k">&lt;</span>k.<span class="pl-sc">length</span>;n<span class="pl-k">++</span>)e<span class="pl-k">=</span></td>
      </tr>
      <tr>
        <td id="L294" class="blob-num js-line-number" data-line-number="294"></td>
        <td id="LC294" class="blob-code js-file-line">k[n],d.<span class="pl-s3">push</span>(<span class="pl-s1"><span class="pl-pds">&quot;</span>M<span class="pl-pds">&quot;</span></span>,e.plotX<span class="pl-k">-</span>i,e.plotY,<span class="pl-s1"><span class="pl-pds">&quot;</span>L<span class="pl-pds">&quot;</span></span>,e.plotX<span class="pl-k">+</span>i,e.plotY);j<span class="pl-k">?</span>j.attr({d<span class="pl-k">:</span>d})<span class="pl-k">:</span>(a.tracker<span class="pl-k">=</span>h.path(d).attr({<span class="pl-s1"><span class="pl-pds">&quot;</span>stroke-linejoin<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s1"><span class="pl-pds">&quot;</span>round<span class="pl-pds">&quot;</span></span>,visibility<span class="pl-k">:</span>a.visible<span class="pl-k">?</span><span class="pl-s1"><span class="pl-pds">&quot;</span>visible<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s1"><span class="pl-pds">&quot;</span>hidden<span class="pl-pds">&quot;</span></span>,stroke<span class="pl-k">:</span>o,fill<span class="pl-k">:</span>c<span class="pl-k">?</span>o<span class="pl-k">:</span>P,<span class="pl-s1"><span class="pl-pds">&quot;</span>stroke-width<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span>b.lineWidth<span class="pl-k">+</span>(c<span class="pl-k">?</span><span class="pl-c1">0</span><span class="pl-k">:</span><span class="pl-c1">2</span><span class="pl-k">*</span>i),zIndex<span class="pl-k">:</span><span class="pl-c1">2</span>}).<span class="pl-s3">add</span>(a.group),q([a.tracker,a.markerGroup],<span class="pl-st">function</span>(<span class="pl-vpf">a</span>){a.addClass(<span class="pl-s1"><span class="pl-pds">&quot;</span>highcharts-tracker<span class="pl-pds">&quot;</span></span>).on(<span class="pl-s1"><span class="pl-pds">&quot;</span>mouseover<span class="pl-pds">&quot;</span></span>,m).on(<span class="pl-s1"><span class="pl-pds">&quot;</span>mouseout<span class="pl-pds">&quot;</span></span>,<span class="pl-st">function</span>(<span class="pl-vpf">a</span>){g.onTrackerMouseOut(a)}).css(l);<span class="pl-k">if</span>($a)a.on(<span class="pl-s1"><span class="pl-pds">&quot;</span>touchstart<span class="pl-pds">&quot;</span></span>,m)}))}};<span class="pl-k">if</span>(H.column)<span class="pl-s3">ia</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">drawTracker</span><span class="pl-k">=</span>T.drawTrackerPoint;<span class="pl-k">if</span>(H.pie)<span class="pl-s3">H.pie</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">drawTracker</span><span class="pl-k">=</span></td>
      </tr>
      <tr>
        <td id="L295" class="blob-num js-line-number" data-line-number="295"></td>
        <td id="LC295" class="blob-code js-file-line">T.drawTrackerPoint;<span class="pl-k">if</span>(H.scatter)<span class="pl-s3">qa</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">drawTracker</span><span class="pl-k">=</span>T.drawTrackerPoint;r(lb.<span class="pl-sc">prototype</span>,{<span class="pl-en">setItemEvents</span>:<span class="pl-st">function</span>(<span class="pl-vpf">a</span>,<span class="pl-vpf">b</span>,<span class="pl-vpf">c</span>,<span class="pl-vpf">d</span>,<span class="pl-vpf">e</span>){<span class="pl-s">var</span> f<span class="pl-k">=</span><span class="pl-v">this</span>;(c<span class="pl-k">?</span>b<span class="pl-k">:</span>a.legendGroup).on(<span class="pl-s1"><span class="pl-pds">&quot;</span>mouseover<span class="pl-pds">&quot;</span></span>,<span class="pl-st">function</span>(){a.setState(<span class="pl-s1"><span class="pl-pds">&quot;</span>hover<span class="pl-pds">&quot;</span></span>);b.css(f.<span class="pl-sc">options</span>.itemHoverStyle)}).on(<span class="pl-s1"><span class="pl-pds">&quot;</span>mouseout<span class="pl-pds">&quot;</span></span>,<span class="pl-st">function</span>(){b.css(a.visible<span class="pl-k">?</span>d<span class="pl-k">:</span>e);a.setState()}).on(<span class="pl-s1"><span class="pl-pds">&quot;</span>click<span class="pl-pds">&quot;</span></span>,<span class="pl-st">function</span>(<span class="pl-vpf">b</span>){<span class="pl-s">var</span> <span class="pl-en">c</span><span class="pl-k">=</span><span class="pl-st">function</span>(){a.setVisible()},b<span class="pl-k">=</span>{browserEvent<span class="pl-k">:</span>b};a.firePointEvent<span class="pl-k">?</span>a.firePointEvent(<span class="pl-s1"><span class="pl-pds">&quot;</span>legendItemClick<span class="pl-pds">&quot;</span></span>,b,c)<span class="pl-k">:</span>I(a,<span class="pl-s1"><span class="pl-pds">&quot;</span>legendItemClick<span class="pl-pds">&quot;</span></span>,b,c)})},<span class="pl-en">createCheckboxForItem</span>:<span class="pl-st">function</span>(<span class="pl-vpf">a</span>){a.checkbox<span class="pl-k">=</span></td>
      </tr>
      <tr>
        <td id="L296" class="blob-num js-line-number" data-line-number="296"></td>
        <td id="LC296" class="blob-code js-file-line">$(<span class="pl-s1"><span class="pl-pds">&quot;</span>input<span class="pl-pds">&quot;</span></span>,{type<span class="pl-k">:</span><span class="pl-s1"><span class="pl-pds">&quot;</span>checkbox<span class="pl-pds">&quot;</span></span>,checked<span class="pl-k">:</span>a.<span class="pl-sc">selected</span>,defaultChecked<span class="pl-k">:</span>a.<span class="pl-sc">selected</span>},<span class="pl-v">this</span>.<span class="pl-sc">options</span>.itemCheckboxStyle,<span class="pl-v">this</span>.chart.container);N(a.checkbox,<span class="pl-s1"><span class="pl-pds">&quot;</span>click<span class="pl-pds">&quot;</span></span>,<span class="pl-st">function</span>(<span class="pl-vpf">b</span>){I(a,<span class="pl-s1"><span class="pl-pds">&quot;</span>checkboxClick<span class="pl-pds">&quot;</span></span>,{checked<span class="pl-k">:</span>b.<span class="pl-sc">target</span>.<span class="pl-sc">checked</span>},<span class="pl-st">function</span>(){a.<span class="pl-s3">select</span>()})})}});E.legend.itemStyle.cursor<span class="pl-k">=</span><span class="pl-s1"><span class="pl-pds">&quot;</span>pointer<span class="pl-pds">&quot;</span></span>;r(Ya.<span class="pl-sc">prototype</span>,{<span class="pl-en">showResetZoom</span>:<span class="pl-st">function</span>(){<span class="pl-s">var</span> a<span class="pl-k">=</span><span class="pl-v">this</span>,b<span class="pl-k">=</span>E.<span class="pl-sc">lang</span>,c<span class="pl-k">=</span>a.<span class="pl-sc">options</span>.chart.resetZoomButton,d<span class="pl-k">=</span>c.theme,e<span class="pl-k">=</span>d.states,f<span class="pl-k">=</span>c.relativeTo<span class="pl-k">===</span><span class="pl-s1"><span class="pl-pds">&quot;</span>chart<span class="pl-pds">&quot;</span></span><span class="pl-k">?</span>null<span class="pl-k">:</span><span class="pl-s1"><span class="pl-pds">&quot;</span>plotBox<span class="pl-pds">&quot;</span></span>;<span class="pl-v">this</span>.resetZoomButton<span class="pl-k">=</span>a.renderer.button(b.resetZoom,<span class="pl-c1">null</span>,<span class="pl-c1">null</span>,<span class="pl-st">function</span>(){a.zoomOut()},</td>
      </tr>
      <tr>
        <td id="L297" class="blob-num js-line-number" data-line-number="297"></td>
        <td id="LC297" class="blob-code js-file-line">d,e<span class="pl-k">&amp;&amp;</span>e.hover).attr({align<span class="pl-k">:</span>c.position.<span class="pl-sc">align</span>,title<span class="pl-k">:</span>b.resetZoomTitle}).<span class="pl-s3">add</span>().<span class="pl-sc">align</span>(c.position,<span class="pl-k">!</span><span class="pl-c1">1</span>,f)},<span class="pl-en">zoomOut</span>:<span class="pl-st">function</span>(){<span class="pl-s">var</span> a<span class="pl-k">=</span><span class="pl-v">this</span>;I(a,<span class="pl-s1"><span class="pl-pds">&quot;</span>selection<span class="pl-pds">&quot;</span></span>,{resetSelection<span class="pl-k">:!</span><span class="pl-c1">0</span>},<span class="pl-st">function</span>(){a.zoom()})},<span class="pl-en">zoom</span>:<span class="pl-st">function</span>(<span class="pl-vpf">a</span>){<span class="pl-s">var</span> b,c<span class="pl-k">=</span><span class="pl-v">this</span>.pointer,d<span class="pl-k">=!</span><span class="pl-c1">1</span>,e;<span class="pl-k">!</span>a<span class="pl-k">||</span>a.resetSelection<span class="pl-k">?</span>q(<span class="pl-v">this</span>.axes,<span class="pl-st">function</span>(<span class="pl-vpf">a</span>){b<span class="pl-k">=</span>a.zoom()})<span class="pl-k">:</span>q(a.xAxis.<span class="pl-s3">concat</span>(a.yAxis),<span class="pl-st">function</span>(<span class="pl-vpf">a</span>){<span class="pl-s">var</span> e<span class="pl-k">=</span>a.<span class="pl-sc">axis</span>,h<span class="pl-k">=</span>e.isXAxis;<span class="pl-k">if</span>(c[h<span class="pl-k">?</span><span class="pl-s1"><span class="pl-pds">&quot;</span>zoomX<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s1"><span class="pl-pds">&quot;</span>zoomY<span class="pl-pds">&quot;</span></span>]<span class="pl-k">||</span>c[h<span class="pl-k">?</span><span class="pl-s1"><span class="pl-pds">&quot;</span>pinchX<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s1"><span class="pl-pds">&quot;</span>pinchY<span class="pl-pds">&quot;</span></span>])b<span class="pl-k">=</span>e.zoom(a.min,a.max),e.displayBtn<span class="pl-k">&amp;&amp;</span>(d<span class="pl-k">=!</span><span class="pl-c1">0</span>)});e<span class="pl-k">=</span><span class="pl-v">this</span>.resetZoomButton;<span class="pl-k">if</span>(d<span class="pl-k">&amp;&amp;!</span>e)<span class="pl-v">this</span>.showResetZoom();<span class="pl-k">else</span> <span class="pl-k">if</span>(<span class="pl-k">!</span>d<span class="pl-k">&amp;&amp;</span></td>
      </tr>
      <tr>
        <td id="L298" class="blob-num js-line-number" data-line-number="298"></td>
        <td id="LC298" class="blob-code js-file-line">da(e))<span class="pl-v">this</span>.resetZoomButton<span class="pl-k">=</span>e.destroy();b<span class="pl-k">&amp;&amp;</span><span class="pl-v">this</span>.redraw(p(<span class="pl-v">this</span>.<span class="pl-sc">options</span>.chart.animation,a<span class="pl-k">&amp;&amp;</span>a.animation,<span class="pl-v">this</span>.pointCount<span class="pl-k">&lt;</span><span class="pl-c1">100</span>))},<span class="pl-en">pan</span>:<span class="pl-st">function</span>(<span class="pl-vpf">a</span>,<span class="pl-vpf">b</span>){<span class="pl-s">var</span> c<span class="pl-k">=</span><span class="pl-v">this</span>,d<span class="pl-k">=</span>c.hoverPoints,e;d<span class="pl-k">&amp;&amp;</span>q(d,<span class="pl-st">function</span>(<span class="pl-vpf">a</span>){a.setState()});q(b<span class="pl-k">===</span><span class="pl-s1"><span class="pl-pds">&quot;</span>xy<span class="pl-pds">&quot;</span></span><span class="pl-k">?</span>[<span class="pl-c1">1</span>,<span class="pl-c1">0</span>]<span class="pl-k">:</span>[<span class="pl-c1">1</span>],<span class="pl-st">function</span>(<span class="pl-vpf">b</span>){<span class="pl-s">var</span> d<span class="pl-k">=</span>a[b<span class="pl-k">?</span><span class="pl-s1"><span class="pl-pds">&quot;</span>chartX<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s1"><span class="pl-pds">&quot;</span>chartY<span class="pl-pds">&quot;</span></span>],h<span class="pl-k">=</span>c[b<span class="pl-k">?</span><span class="pl-s1"><span class="pl-pds">&quot;</span>xAxis<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s1"><span class="pl-pds">&quot;</span>yAxis<span class="pl-pds">&quot;</span></span>][<span class="pl-c1">0</span>],i<span class="pl-k">=</span>c[b<span class="pl-k">?</span><span class="pl-s1"><span class="pl-pds">&quot;</span>mouseDownX<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s1"><span class="pl-pds">&quot;</span>mouseDownY<span class="pl-pds">&quot;</span></span>],j<span class="pl-k">=</span>(h.pointRange<span class="pl-k">||</span><span class="pl-c1">0</span>)/<span class="pl-c1">2</span>,k<span class="pl-k">=</span>h.getExtremes(),l<span class="pl-k">=</span>h.toValue(i<span class="pl-k">-</span>d,<span class="pl-k">!</span><span class="pl-c1">0</span>)<span class="pl-k">+</span>j,i<span class="pl-k">=</span>h.toValue(i<span class="pl-k">+</span>c[b<span class="pl-k">?</span><span class="pl-s1"><span class="pl-pds">&quot;</span>plotWidth<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s1"><span class="pl-pds">&quot;</span>plotHeight<span class="pl-pds">&quot;</span></span>]<span class="pl-k">-</span>d,<span class="pl-k">!</span><span class="pl-c1">0</span>)<span class="pl-k">-</span>j;h.series.<span class="pl-sc">length</span><span class="pl-k">&amp;&amp;</span>l<span class="pl-k">&gt;</span>L(k.dataMin,k.min)<span class="pl-k">&amp;&amp;</span>i<span class="pl-k">&lt;</span>t(k.dataMax,k.max)<span class="pl-k">&amp;&amp;</span>(h.setExtremes(l,</td>
      </tr>
      <tr>
        <td id="L299" class="blob-num js-line-number" data-line-number="299"></td>
        <td id="LC299" class="blob-code js-file-line">i,<span class="pl-k">!</span><span class="pl-c1">1</span>,<span class="pl-k">!</span><span class="pl-c1">1</span>,{trigger<span class="pl-k">:</span><span class="pl-s1"><span class="pl-pds">&quot;</span>pan<span class="pl-pds">&quot;</span></span>}),e<span class="pl-k">=!</span><span class="pl-c1">0</span>);c[b<span class="pl-k">?</span><span class="pl-s1"><span class="pl-pds">&quot;</span>mouseDownX<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s1"><span class="pl-pds">&quot;</span>mouseDownY<span class="pl-pds">&quot;</span></span>]<span class="pl-k">=</span>d});e<span class="pl-k">&amp;&amp;</span>c.redraw(<span class="pl-k">!</span><span class="pl-c1">1</span>);B(c.container,{cursor<span class="pl-k">:</span><span class="pl-s1"><span class="pl-pds">&quot;</span>move<span class="pl-pds">&quot;</span></span>})}});r(Fa.<span class="pl-sc">prototype</span>,{<span class="pl-en">select</span>:<span class="pl-st">function</span>(<span class="pl-vpf">a</span>,<span class="pl-vpf">b</span>){<span class="pl-s">var</span> c<span class="pl-k">=</span><span class="pl-v">this</span>,d<span class="pl-k">=</span>c.series,e<span class="pl-k">=</span>d.chart,a<span class="pl-k">=</span>p(a,<span class="pl-k">!</span>c.<span class="pl-sc">selected</span>);c.firePointEvent(a<span class="pl-k">?</span><span class="pl-s1"><span class="pl-pds">&quot;</span>select<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s1"><span class="pl-pds">&quot;</span>unselect<span class="pl-pds">&quot;</span></span>,{accumulate<span class="pl-k">:</span>b},<span class="pl-st">function</span>(){c.<span class="pl-sc">selected</span><span class="pl-k">=</span>c.<span class="pl-sc">options</span>.<span class="pl-sc">selected</span><span class="pl-k">=</span>a;d.<span class="pl-sc">options</span>.<span class="pl-sc">data</span>[Ma(c,d.<span class="pl-sc">data</span>)]<span class="pl-k">=</span>c.<span class="pl-sc">options</span>;c.setState(a<span class="pl-k">&amp;&amp;</span><span class="pl-s1"><span class="pl-pds">&quot;</span>select<span class="pl-pds">&quot;</span></span>);b<span class="pl-k">||</span>q(e.getSelectedPoints(),<span class="pl-st">function</span>(<span class="pl-vpf">a</span>){<span class="pl-k">if</span>(a.<span class="pl-sc">selected</span><span class="pl-k">&amp;&amp;</span>a<span class="pl-k">!==</span>c)a.<span class="pl-sc">selected</span><span class="pl-k">=</span>a.<span class="pl-sc">options</span>.<span class="pl-sc">selected</span><span class="pl-k">=!</span><span class="pl-c1">1</span>,d.<span class="pl-sc">options</span>.<span class="pl-sc">data</span>[Ma(a,d.<span class="pl-sc">data</span>)]<span class="pl-k">=</span>a.<span class="pl-sc">options</span>,a.setState(<span class="pl-s1"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>),</td>
      </tr>
      <tr>
        <td id="L300" class="blob-num js-line-number" data-line-number="300"></td>
        <td id="LC300" class="blob-code js-file-line">a.firePointEvent(<span class="pl-s1"><span class="pl-pds">&quot;</span>unselect<span class="pl-pds">&quot;</span></span>)})})},<span class="pl-en">onMouseOver</span>:<span class="pl-st">function</span>(<span class="pl-vpf">a</span>){<span class="pl-s">var</span> b<span class="pl-k">=</span><span class="pl-v">this</span>.series,c<span class="pl-k">=</span>b.chart,d<span class="pl-k">=</span>c.tooltip,e<span class="pl-k">=</span>c.hoverPoint;<span class="pl-k">if</span>(e<span class="pl-k">&amp;&amp;</span>e<span class="pl-k">!==</span><span class="pl-v">this</span>)e.onMouseOut();<span class="pl-v">this</span>.firePointEvent(<span class="pl-s1"><span class="pl-pds">&quot;</span>mouseOver<span class="pl-pds">&quot;</span></span>);d<span class="pl-k">&amp;&amp;</span>(<span class="pl-k">!</span>d.shared<span class="pl-k">||</span>b.noSharedTooltip)<span class="pl-k">&amp;&amp;</span>d.refresh(<span class="pl-v">this</span>,a);<span class="pl-v">this</span>.setState(<span class="pl-s1"><span class="pl-pds">&quot;</span>hover<span class="pl-pds">&quot;</span></span>);c.hoverPoint<span class="pl-k">=</span><span class="pl-v">this</span>},<span class="pl-en">onMouseOut</span>:<span class="pl-st">function</span>(){<span class="pl-s">var</span> a<span class="pl-k">=</span><span class="pl-v">this</span>.series.chart,b<span class="pl-k">=</span>a.hoverPoints;<span class="pl-v">this</span>.firePointEvent(<span class="pl-s1"><span class="pl-pds">&quot;</span>mouseOut<span class="pl-pds">&quot;</span></span>);<span class="pl-k">if</span>(<span class="pl-k">!</span>b<span class="pl-k">||</span>Ma(<span class="pl-v">this</span>,b)<span class="pl-k">===-</span><span class="pl-c1">1</span>)<span class="pl-v">this</span>.setState(),a.hoverPoint<span class="pl-k">=</span><span class="pl-c1">null</span>},<span class="pl-en">importEvents</span>:<span class="pl-st">function</span>(){<span class="pl-k">if</span>(<span class="pl-k">!</span><span class="pl-v">this</span>.hasImportedEvents){<span class="pl-s">var</span> a<span class="pl-k">=</span>w(<span class="pl-v">this</span>.series.<span class="pl-sc">options</span>.point,</td>
      </tr>
      <tr>
        <td id="L301" class="blob-num js-line-number" data-line-number="301"></td>
        <td id="LC301" class="blob-code js-file-line"><span class="pl-v">this</span>.<span class="pl-sc">options</span>).events,b;<span class="pl-v">this</span>.events<span class="pl-k">=</span>a;<span class="pl-k">for</span>(b <span class="pl-k">in</span> a)N(<span class="pl-v">this</span>,b,a[b]);<span class="pl-v">this</span>.hasImportedEvents<span class="pl-k">=!</span><span class="pl-c1">0</span>}},<span class="pl-en">setState</span>:<span class="pl-st">function</span>(<span class="pl-vpf">a</span>,<span class="pl-vpf">b</span>){<span class="pl-s">var</span> c<span class="pl-k">=</span><span class="pl-v">this</span>.plotX,d<span class="pl-k">=</span><span class="pl-v">this</span>.plotY,e<span class="pl-k">=</span><span class="pl-v">this</span>.series,f<span class="pl-k">=</span>e.<span class="pl-sc">options</span>.states,g<span class="pl-k">=</span>ca[e.<span class="pl-sc">type</span>].marker<span class="pl-k">&amp;&amp;</span>e.<span class="pl-sc">options</span>.marker,h<span class="pl-k">=</span>g<span class="pl-k">&amp;&amp;!</span>g.enabled,i<span class="pl-k">=</span>g<span class="pl-k">&amp;&amp;</span>g.states[a],j<span class="pl-k">=</span>i<span class="pl-k">&amp;&amp;</span>i.enabled<span class="pl-k">===!</span><span class="pl-c1">1</span>,k<span class="pl-k">=</span>e.stateMarkerGraphic,l<span class="pl-k">=</span><span class="pl-v">this</span>.marker<span class="pl-k">||</span>{},n<span class="pl-k">=</span>e.chart,m<span class="pl-k">=</span>e.halo,o,a<span class="pl-k">=</span>a<span class="pl-k">||</span><span class="pl-s1"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>;o<span class="pl-k">=</span><span class="pl-v">this</span>.pointAttr[a]<span class="pl-k">||</span>e.pointAttr[a];<span class="pl-k">if</span>(<span class="pl-k">!</span>(a<span class="pl-k">===</span><span class="pl-v">this</span>.state<span class="pl-k">&amp;&amp;!</span>b<span class="pl-k">||</span><span class="pl-v">this</span>.<span class="pl-sc">selected</span><span class="pl-k">&amp;&amp;</span>a<span class="pl-k">!==</span><span class="pl-s1"><span class="pl-pds">&quot;</span>select<span class="pl-pds">&quot;</span></span><span class="pl-k">||</span>f[a]<span class="pl-k">&amp;&amp;</span>f[a].enabled<span class="pl-k">===!</span><span class="pl-c1">1</span><span class="pl-k">||</span>a<span class="pl-k">&amp;&amp;</span>(j<span class="pl-k">||</span>h<span class="pl-k">&amp;&amp;</span>i.enabled<span class="pl-k">===!</span><span class="pl-c1">1</span>)<span class="pl-k">||</span>a<span class="pl-k">&amp;&amp;</span>l.states<span class="pl-k">&amp;&amp;</span>l.states[a]<span class="pl-k">&amp;&amp;</span></td>
      </tr>
      <tr>
        <td id="L302" class="blob-num js-line-number" data-line-number="302"></td>
        <td id="LC302" class="blob-code js-file-line">l.states[a].enabled<span class="pl-k">===!</span><span class="pl-c1">1</span>)){<span class="pl-k">if</span>(<span class="pl-v">this</span>.graphic)g<span class="pl-k">=</span>g<span class="pl-k">&amp;&amp;</span><span class="pl-v">this</span>.graphic.symbolName<span class="pl-k">&amp;&amp;</span>o.r,<span class="pl-v">this</span>.graphic.attr(w(o,g<span class="pl-k">?</span>{x<span class="pl-k">:</span>c<span class="pl-k">-</span>g,y<span class="pl-k">:</span>d<span class="pl-k">-</span>g,width<span class="pl-k">:</span><span class="pl-c1">2</span><span class="pl-k">*</span>g,height<span class="pl-k">:</span><span class="pl-c1">2</span><span class="pl-k">*</span>g}<span class="pl-k">:</span>{})),k<span class="pl-k">&amp;&amp;</span>k.hide();<span class="pl-k">else</span>{<span class="pl-k">if</span>(a<span class="pl-k">&amp;&amp;</span>i)<span class="pl-k">if</span>(g<span class="pl-k">=</span>i.radius,l<span class="pl-k">=</span>l.symbol<span class="pl-k">||</span>e.symbol,k<span class="pl-k">&amp;&amp;</span>k.currentSymbol<span class="pl-k">!==</span>l<span class="pl-k">&amp;&amp;</span>(k<span class="pl-k">=</span>k.destroy()),k)k[b<span class="pl-k">?</span><span class="pl-s1"><span class="pl-pds">&quot;</span>animate<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s1"><span class="pl-pds">&quot;</span>attr<span class="pl-pds">&quot;</span></span>]({x<span class="pl-k">:</span>c<span class="pl-k">-</span>g,y<span class="pl-k">:</span>d<span class="pl-k">-</span>g});<span class="pl-k">else</span> <span class="pl-k">if</span>(l)e.stateMarkerGraphic<span class="pl-k">=</span>k<span class="pl-k">=</span>n.renderer.symbol(l,c<span class="pl-k">-</span>g,d<span class="pl-k">-</span>g,<span class="pl-c1">2</span><span class="pl-k">*</span>g,<span class="pl-c1">2</span><span class="pl-k">*</span>g).attr(o).<span class="pl-s3">add</span>(e.markerGroup),k.currentSymbol<span class="pl-k">=</span>l;<span class="pl-k">if</span>(k)k[a<span class="pl-k">&amp;&amp;</span>n.isInsidePlot(c,d,n.inverted)<span class="pl-k">?</span><span class="pl-s1"><span class="pl-pds">&quot;</span>show<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s1"><span class="pl-pds">&quot;</span>hide<span class="pl-pds">&quot;</span></span>]()}<span class="pl-k">if</span>((c<span class="pl-k">=</span>f[a]<span class="pl-k">&amp;&amp;</span>f[a].halo)<span class="pl-k">&amp;&amp;</span>c.<span class="pl-sc">size</span>){<span class="pl-k">if</span>(<span class="pl-k">!</span>m)e.halo<span class="pl-k">=</span>m<span class="pl-k">=</span>n.renderer.path().<span class="pl-s3">add</span>(e.seriesGroup);</td>
      </tr>
      <tr>
        <td id="L303" class="blob-num js-line-number" data-line-number="303"></td>
        <td id="LC303" class="blob-code js-file-line">m.attr(r({fill<span class="pl-k">:</span>ya(<span class="pl-v">this</span>.<span class="pl-sc">color</span><span class="pl-k">||</span>e.<span class="pl-sc">color</span>).setOpacity(c.opacity).get()},c.<span class="pl-sc">attributes</span>))[b<span class="pl-k">?</span><span class="pl-s1"><span class="pl-pds">&quot;</span>animate<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s1"><span class="pl-pds">&quot;</span>attr<span class="pl-pds">&quot;</span></span>]({d<span class="pl-k">:</span><span class="pl-v">this</span>.haloPath(c.<span class="pl-sc">size</span>)})}<span class="pl-k">else</span> m<span class="pl-k">&amp;&amp;</span>m.attr({d<span class="pl-k">:</span>[]});<span class="pl-v">this</span>.state<span class="pl-k">=</span>a}},<span class="pl-en">haloPath</span>:<span class="pl-st">function</span>(<span class="pl-vpf">a</span>){<span class="pl-s">var</span> b<span class="pl-k">=</span><span class="pl-v">this</span>.series,c<span class="pl-k">=</span>b.chart,d<span class="pl-k">=</span>b.getPlotBox(),e<span class="pl-k">=</span>c.inverted;<span class="pl-k">return</span> c.renderer.symbols.circle(d.translateX<span class="pl-k">+</span>(e<span class="pl-k">?</span>b.yAxis.len<span class="pl-k">-</span><span class="pl-v">this</span>.plotY<span class="pl-k">:</span><span class="pl-v">this</span>.plotX)<span class="pl-k">-</span>a,d.translateY<span class="pl-k">+</span>(e<span class="pl-k">?</span>b.xAxis.len<span class="pl-k">-</span><span class="pl-v">this</span>.plotX<span class="pl-k">:</span><span class="pl-v">this</span>.plotY)<span class="pl-k">-</span>a,a<span class="pl-k">*</span><span class="pl-c1">2</span>,a<span class="pl-k">*</span><span class="pl-c1">2</span>)}});r(O.<span class="pl-sc">prototype</span>,{<span class="pl-en">onMouseOver</span>:<span class="pl-st">function</span>(){<span class="pl-s">var</span> a<span class="pl-k">=</span><span class="pl-v">this</span>.chart,b<span class="pl-k">=</span>a.hoverSeries;<span class="pl-k">if</span>(b<span class="pl-k">&amp;&amp;</span>b<span class="pl-k">!==</span><span class="pl-v">this</span>)b.onMouseOut();<span class="pl-v">this</span>.<span class="pl-sc">options</span>.events.mouseOver<span class="pl-k">&amp;&amp;</span></td>
      </tr>
      <tr>
        <td id="L304" class="blob-num js-line-number" data-line-number="304"></td>
        <td id="LC304" class="blob-code js-file-line">I(<span class="pl-v">this</span>,<span class="pl-s1"><span class="pl-pds">&quot;</span>mouseOver<span class="pl-pds">&quot;</span></span>);<span class="pl-v">this</span>.setState(<span class="pl-s1"><span class="pl-pds">&quot;</span>hover<span class="pl-pds">&quot;</span></span>);a.hoverSeries<span class="pl-k">=</span><span class="pl-v">this</span>},<span class="pl-en">onMouseOut</span>:<span class="pl-st">function</span>(){<span class="pl-s">var</span> a<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-sc">options</span>,b<span class="pl-k">=</span><span class="pl-v">this</span>.chart,c<span class="pl-k">=</span>b.tooltip,d<span class="pl-k">=</span>b.hoverPoint;<span class="pl-k">if</span>(d)d.onMouseOut();<span class="pl-v">this</span><span class="pl-k">&amp;&amp;</span>a.events.mouseOut<span class="pl-k">&amp;&amp;</span>I(<span class="pl-v">this</span>,<span class="pl-s1"><span class="pl-pds">&quot;</span>mouseOut<span class="pl-pds">&quot;</span></span>);c<span class="pl-k">&amp;&amp;!</span>a.stickyTracking<span class="pl-k">&amp;&amp;</span>(<span class="pl-k">!</span>c.shared<span class="pl-k">||</span><span class="pl-v">this</span>.noSharedTooltip)<span class="pl-k">&amp;&amp;</span>c.hide();<span class="pl-v">this</span>.setState();b.hoverSeries<span class="pl-k">=</span><span class="pl-c1">null</span>},<span class="pl-en">setState</span>:<span class="pl-st">function</span>(<span class="pl-vpf">a</span>){<span class="pl-s">var</span> b<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-sc">options</span>,c<span class="pl-k">=</span><span class="pl-v">this</span>.graph,d<span class="pl-k">=</span><span class="pl-v">this</span>.graphNeg,e<span class="pl-k">=</span>b.states,b<span class="pl-k">=</span>b.lineWidth,a<span class="pl-k">=</span>a<span class="pl-k">||</span><span class="pl-s1"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>;<span class="pl-k">if</span>(<span class="pl-v">this</span>.state<span class="pl-k">!==</span>a)<span class="pl-v">this</span>.state<span class="pl-k">=</span>a,e[a]<span class="pl-k">&amp;&amp;</span>e[a].enabled<span class="pl-k">===!</span><span class="pl-c1">1</span><span class="pl-k">||</span>(a<span class="pl-k">&amp;&amp;</span>(b<span class="pl-k">=</span>e[a].lineWidth<span class="pl-k">||</span>b<span class="pl-k">+</span>(e[a].lineWidthPlus<span class="pl-k">||</span></td>
      </tr>
      <tr>
        <td id="L305" class="blob-num js-line-number" data-line-number="305"></td>
        <td id="LC305" class="blob-code js-file-line"><span class="pl-c1">0</span>)),c<span class="pl-k">&amp;&amp;!</span>c.dashstyle<span class="pl-k">&amp;&amp;</span>(a<span class="pl-k">=</span>{<span class="pl-s1"><span class="pl-pds">&quot;</span>stroke-width<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span>b},c.attr(a),d<span class="pl-k">&amp;&amp;</span>d.attr(a)))},<span class="pl-en">setVisible</span>:<span class="pl-st">function</span>(<span class="pl-vpf">a</span>,<span class="pl-vpf">b</span>){<span class="pl-s">var</span> c<span class="pl-k">=</span><span class="pl-v">this</span>,d<span class="pl-k">=</span>c.chart,e<span class="pl-k">=</span>c.legendItem,f,g<span class="pl-k">=</span>d.<span class="pl-sc">options</span>.chart.ignoreHiddenSeries,h<span class="pl-k">=</span>c.visible;f<span class="pl-k">=</span>(c.visible<span class="pl-k">=</span>a<span class="pl-k">=</span>c.userOptions.visible<span class="pl-k">=</span>a<span class="pl-k">===</span>u<span class="pl-k">?!</span>h<span class="pl-k">:</span>a)<span class="pl-k">?</span><span class="pl-s1"><span class="pl-pds">&quot;</span>show<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s1"><span class="pl-pds">&quot;</span>hide<span class="pl-pds">&quot;</span></span>;q([<span class="pl-s1"><span class="pl-pds">&quot;</span>group<span class="pl-pds">&quot;</span></span>,<span class="pl-s1"><span class="pl-pds">&quot;</span>dataLabelsGroup<span class="pl-pds">&quot;</span></span>,<span class="pl-s1"><span class="pl-pds">&quot;</span>markerGroup<span class="pl-pds">&quot;</span></span>,<span class="pl-s1"><span class="pl-pds">&quot;</span>tracker<span class="pl-pds">&quot;</span></span>],<span class="pl-st">function</span>(<span class="pl-vpf">a</span>){<span class="pl-k">if</span>(c[a])c[a][f]()});<span class="pl-k">if</span>(d.hoverSeries<span class="pl-k">===</span>c)c.onMouseOut();e<span class="pl-k">&amp;&amp;</span>d.legend.colorizeItem(c,a);c.isDirty<span class="pl-k">=!</span><span class="pl-c1">0</span>;c.<span class="pl-sc">options</span>.stacking<span class="pl-k">&amp;&amp;</span>q(d.series,<span class="pl-st">function</span>(<span class="pl-vpf">a</span>){<span class="pl-k">if</span>(a.<span class="pl-sc">options</span>.stacking<span class="pl-k">&amp;&amp;</span>a.visible)a.isDirty<span class="pl-k">=!</span><span class="pl-c1">0</span>});q(c.linkedSeries,</td>
      </tr>
      <tr>
        <td id="L306" class="blob-num js-line-number" data-line-number="306"></td>
        <td id="LC306" class="blob-code js-file-line"><span class="pl-st">function</span>(<span class="pl-vpf">b</span>){b.setVisible(a,<span class="pl-k">!</span><span class="pl-c1">1</span>)});<span class="pl-k">if</span>(g)d.isDirtyBox<span class="pl-k">=!</span><span class="pl-c1">0</span>;b<span class="pl-k">!==!</span><span class="pl-c1">1</span><span class="pl-k">&amp;&amp;</span>d.redraw();I(c,f)},<span class="pl-en">setTooltipPoints</span>:<span class="pl-st">function</span>(<span class="pl-vpf">a</span>){<span class="pl-s">var</span> b<span class="pl-k">=</span>[],c,d,e<span class="pl-k">=</span><span class="pl-v">this</span>.xAxis,f<span class="pl-k">=</span>e<span class="pl-k">&amp;&amp;</span>e.getExtremes(),g<span class="pl-k">=</span>e<span class="pl-k">?</span>e.tooltipLen<span class="pl-k">||</span>e.len<span class="pl-k">:</span><span class="pl-v">this</span>.chart.plotSizeX,h,i,j<span class="pl-k">=</span>[];<span class="pl-k">if</span>(<span class="pl-k">!</span>(<span class="pl-v">this</span>.<span class="pl-sc">options</span>.enableMouseTracking<span class="pl-k">===!</span><span class="pl-c1">1</span><span class="pl-k">||</span><span class="pl-v">this</span>.singularTooltips)){<span class="pl-k">if</span>(a)<span class="pl-v">this</span>.tooltipPoints<span class="pl-k">=</span><span class="pl-c1">null</span>;q(<span class="pl-v">this</span>.segments<span class="pl-k">||</span><span class="pl-v">this</span>.points,<span class="pl-st">function</span>(<span class="pl-vpf">a</span>){b<span class="pl-k">=</span>b.<span class="pl-s3">concat</span>(a)});e<span class="pl-k">&amp;&amp;</span>e.reversed<span class="pl-k">&amp;&amp;</span>(b<span class="pl-k">=</span>b.<span class="pl-s3">reverse</span>());<span class="pl-v">this</span>.orderTooltipPoints<span class="pl-k">&amp;&amp;</span><span class="pl-v">this</span>.orderTooltipPoints(b);a<span class="pl-k">=</span>b.<span class="pl-sc">length</span>;<span class="pl-k">for</span>(i<span class="pl-k">=</span><span class="pl-c1">0</span>;i<span class="pl-k">&lt;</span>a;i<span class="pl-k">++</span>)<span class="pl-k">if</span>(e<span class="pl-k">=</span>b[i],c<span class="pl-k">=</span>e.<span class="pl-sc">x</span>,c<span class="pl-k">&gt;=</span>f.min<span class="pl-k">&amp;&amp;</span></td>
      </tr>
      <tr>
        <td id="L307" class="blob-num js-line-number" data-line-number="307"></td>
        <td id="LC307" class="blob-code js-file-line">c<span class="pl-k">&lt;=</span>f.max){h<span class="pl-k">=</span>b[i<span class="pl-k">+</span><span class="pl-c1">1</span>];c<span class="pl-k">=</span>d<span class="pl-k">===</span>u<span class="pl-k">?</span><span class="pl-c1">0</span><span class="pl-k">:</span>d<span class="pl-k">+</span><span class="pl-c1">1</span>;<span class="pl-k">for</span>(d<span class="pl-k">=</span>b[i<span class="pl-k">+</span><span class="pl-c1">1</span>]<span class="pl-k">?</span>L(t(<span class="pl-c1">0</span>,U((e.clientX<span class="pl-k">+</span>(h<span class="pl-k">?</span>h.wrappedClientX<span class="pl-k">||</span>h.clientX<span class="pl-k">:</span>g))/<span class="pl-c1">2</span>)),g)<span class="pl-k">:</span>g;c<span class="pl-k">&gt;=</span><span class="pl-c1">0</span><span class="pl-k">&amp;&amp;</span>c<span class="pl-k">&lt;=</span>d;)j[c<span class="pl-k">++</span>]<span class="pl-k">=</span>e}<span class="pl-v">this</span>.tooltipPoints<span class="pl-k">=</span>j}},<span class="pl-en">show</span>:<span class="pl-st">function</span>(){<span class="pl-v">this</span>.setVisible(<span class="pl-k">!</span><span class="pl-c1">0</span>)},<span class="pl-en">hide</span>:<span class="pl-st">function</span>(){<span class="pl-v">this</span>.setVisible(<span class="pl-k">!</span><span class="pl-c1">1</span>)},<span class="pl-en">select</span>:<span class="pl-st">function</span>(<span class="pl-vpf">a</span>){<span class="pl-v">this</span>.<span class="pl-sc">selected</span><span class="pl-k">=</span>a<span class="pl-k">=</span>a<span class="pl-k">===</span>u<span class="pl-k">?!</span><span class="pl-v">this</span>.<span class="pl-sc">selected</span><span class="pl-k">:</span>a;<span class="pl-k">if</span>(<span class="pl-v">this</span>.checkbox)<span class="pl-v">this</span>.checkbox.<span class="pl-sc">checked</span><span class="pl-k">=</span>a;I(<span class="pl-v">this</span>,a<span class="pl-k">?</span><span class="pl-s1"><span class="pl-pds">&quot;</span>select<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s1"><span class="pl-pds">&quot;</span>unselect<span class="pl-pds">&quot;</span></span>)},drawTracker<span class="pl-k">:</span>T.drawTrackerGraph});r(K,{Axis<span class="pl-k">:</span>na,Chart<span class="pl-k">:</span>Ya,Color<span class="pl-k">:</span>ya,Point<span class="pl-k">:</span>Fa,Tick<span class="pl-k">:</span>Ta,Renderer<span class="pl-k">:</span>Za,Series<span class="pl-k">:</span>O,SVGElement<span class="pl-k">:</span>S,SVGRenderer<span class="pl-k">:</span>ta,arrayMin<span class="pl-k">:</span>Oa,arrayMax<span class="pl-k">:</span>Ca,</td>
      </tr>
      <tr>
        <td id="L308" class="blob-num js-line-number" data-line-number="308"></td>
        <td id="LC308" class="blob-code js-file-line">charts<span class="pl-k">:</span>W,dateFormat<span class="pl-k">:</span>cb,format<span class="pl-k">:</span>Ja,pathAnim<span class="pl-k">:</span>vb,<span class="pl-en">getOptions</span>:<span class="pl-st">function</span>(){<span class="pl-k">return</span> E},hasBidiBug<span class="pl-k">:</span>Ob,isTouchDevice<span class="pl-k">:</span>Ib,numberFormat<span class="pl-k">:</span>Ba,seriesTypes<span class="pl-k">:</span>H,<span class="pl-en">setOptions</span>:<span class="pl-st">function</span>(<span class="pl-vpf">a</span>){E<span class="pl-k">=</span>w(<span class="pl-k">!</span><span class="pl-c1">0</span>,E,a);Bb();<span class="pl-k">return</span> E},addEvent<span class="pl-k">:</span>N,removeEvent<span class="pl-k">:</span>X,createElement<span class="pl-k">:</span>$,discardElement<span class="pl-k">:</span>Qa,css<span class="pl-k">:</span>B,each<span class="pl-k">:</span>q,extend<span class="pl-k">:</span>r,map<span class="pl-k">:</span>Va,merge<span class="pl-k">:</span>w,pick<span class="pl-k">:</span>p,splat<span class="pl-k">:</span>ra,extendClass<span class="pl-k">:</span>ma,pInt<span class="pl-k">:</span>y,wrap<span class="pl-k">:</span>Na,svg<span class="pl-k">:</span>ba,canvas<span class="pl-k">:</span>ga,vml<span class="pl-k">:!</span>ba<span class="pl-k">&amp;&amp;!</span>ga,product<span class="pl-k">:</span><span class="pl-s1"><span class="pl-pds">&quot;</span>Highcharts<span class="pl-pds">&quot;</span></span>,version<span class="pl-k">:</span><span class="pl-s1"><span class="pl-pds">&quot;</span>4.0.4<span class="pl-pds">&quot;</span></span>})})();</td>
      </tr>
</table>

  </div>

  </div>
</div>

<a href="#jump-to-line" rel="facebox[.linejump]" data-hotkey="l" style="display:none">Jump to Line</a>
<div id="jump-to-line" style="display:none">
  <form accept-charset="UTF-8" class="js-jump-to-line-form">
    <input class="linejump-input js-jump-to-line-field" type="text" placeholder="Jump to line&hellip;" autofocus>
    <button type="submit" class="button">Go</button>
  </form>
</div>

        </div>

      </div><!-- /.repo-container -->
      <div class="modal-backdrop"></div>
    </div><!-- /.container -->
  </div><!-- /.site -->


    </div><!-- /.wrapper -->

      <div class="container">
  <div class="site-footer" role="contentinfo">
    <ul class="site-footer-links right">
      <li><a href="https://status.github.com/">Status</a></li>
      <li><a href="https://developer.github.com">API</a></li>
      <li><a href="http://training.github.com">Training</a></li>
      <li><a href="http://shop.github.com">Shop</a></li>
      <li><a href="/blog">Blog</a></li>
      <li><a href="/about">About</a></li>

    </ul>

    <a href="/" aria-label="Homepage">
      <span class="mega-octicon octicon-mark-github" title="GitHub"></span>
    </a>

    <ul class="site-footer-links">
      <li>&copy; 2015 <span title="0.04689s from github-fe121-cp1-prd.iad.github.net">GitHub</span>, Inc.</li>
        <li><a href="/site/terms">Terms</a></li>
        <li><a href="/site/privacy">Privacy</a></li>
        <li><a href="/security">Security</a></li>
        <li><a href="/contact">Contact</a></li>
    </ul>
  </div><!-- /.site-footer -->
</div><!-- /.container -->


    <div class="fullscreen-overlay js-fullscreen-overlay" id="fullscreen_overlay">
  <div class="fullscreen-container js-suggester-container">
    <div class="textarea-wrap">
      <textarea name="fullscreen-contents" id="fullscreen-contents" class="fullscreen-contents js-fullscreen-contents" placeholder=""></textarea>
      <div class="suggester-container">
        <div class="suggester fullscreen-suggester js-suggester js-navigation-container"></div>
      </div>
    </div>
  </div>
  <div class="fullscreen-sidebar">
    <a href="#" class="exit-fullscreen js-exit-fullscreen tooltipped tooltipped-w" aria-label="Exit Zen Mode">
      <span class="mega-octicon octicon-screen-normal"></span>
    </a>
    <a href="#" class="theme-switcher js-theme-switcher tooltipped tooltipped-w"
      aria-label="Switch themes">
      <span class="octicon octicon-color-mode"></span>
    </a>
  </div>
</div>



    <div id="ajax-error-message" class="flash flash-error">
      <span class="octicon octicon-alert"></span>
      <a href="#" class="octicon octicon-x flash-close js-ajax-error-dismiss" aria-label="Dismiss error"></a>
      Something went wrong with that request. Please try again.
    </div>


      <script crossorigin="anonymous" src="https://assets-cdn.github.com/assets/frameworks-af95b05cb14b7a29b0457c26b4a1d24151f4a47842c8e74bd556622f347b9d3d.js" type="text/javascript"></script>
      <script async="async" crossorigin="anonymous" src="https://assets-cdn.github.com/assets/github-469a491e7f20dfe1ceb7a984cf2e822ec164f848807b41dfe935371c215db4ee.js" type="text/javascript"></script>
      
      
  </body>
</html>

